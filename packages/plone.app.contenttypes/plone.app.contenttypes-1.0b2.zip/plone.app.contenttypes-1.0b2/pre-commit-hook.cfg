[buildout]
parts +=
    git-pre-commit-hook
    flake8
    code-analysis-flake8
    code-analysis-utf-8-headers
    code-analysis-jshint
    code-analysis-csslint
    zptlint
    code-analysis-zptlint
    code-analysis
    translations
    code-analysis-check-for-pdb
    code-analysis-translations


# --- Git Hook ---------------------------------------------------------------

[git-pre-commit-hook]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/code-analysis
output = ${buildout:directory}/.git/hooks/pre-commit
mode = 776


# --- Flake 8 ----------------------------------------------------------------

[flake8]
recipe = zc.recipe.egg
eggs = flake8
entry-points = flake8=flake8.run:main

[code-analysis-flake8]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-flake8
title = Flake8
run = ${buildout:directory}/bin/flake8 ${buildout:directory}/plone
mode = 755


# --- UTF-8 Headers ----------------------------------------------------------

[code-analysis-utf-8-headers]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-utf-8-headers
title = UTF-8 Headers
run = out=$(find plone -not -name __init__.py -regex ".*\.py" -exec grep -H -E -o -c "coding: utf-8" {} \; | grep 0 | cut -d":" -f1); if [[ -n "$out" ]] ;then echo "$out"; exit 1; else exit 0; fi
mode = 755


# --- JS Hint ----------------------------------------------------------------

[code-analysis-jshint]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-jshint
title = JS Hint
check = jslint
run = out=$(find -L plone -regex ".*\.js" | xargs -r ajshint); if [[ -n "$out" ]] ;then echo "$out"; exit 1; else exit 0; fi 
output = ${buildout:directory}/bin/code-analysis-jshint
mode = 755


# --- CSS Lint ---------------------------------------------------------------

[code-analysis-csslint]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-csslint
title = CSS Lint
check = csslint
run = out=$(find -L plone -regex ".*\.css" | xargs -r csslint); if [[ -n "$out" ]] ;then echo "$out"; exit 1; else exit 0; fi 
output = ${buildout:directory}/bin/code-analysis-csslint
mode = 755


# --- ZPT Lint ---------------------------------------------------------------

[zptlint]
recipe = zc.recipe.egg
eggs = zptlint
entry-points = zptlint=zptlint:run

[code-analysis-zptlint]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-zptlint
title = ZPT Lint
run = out=$(find -L plone -regex ".*\.[cz]?pt" | xargs -r bin/zptlint); if [[ -n "$out" ]]; then echo "$out"; exit 1; else exit 0; fi 
mode = 755


# --- Translations -----------------------------------------------------------

[translations]
recipe = zc.recipe.egg
eggs = i18ndude

[code-analysis-translations]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-translations
title = Translations
run = out=$(find -L plone -regex ".*\.[cz]?pt" | xargs -r bin/i18ndude find-untranslated -s -n); if [[ -n "$out" ]]; then echo "$out"; exit 1; else exit 0; fi 
mode = 755


# --- PDB --------------------------------------------------------------------

[code-analysis-check-for-pdb]
recipe = collective.recipe.genshi
input = templates/code-analysis.sh
output = ${buildout:directory}/bin/code-analysis-check-for-pdb
title = Check for pdb
run = out=$(grep -R -n -H pdb plone); if [[ -n "$out" ]]; then echo "$out"; exit 1; else exit 0; fi 
mode = 755


# --- Code Analysis ----------------------------------------------------------

[code-analysis]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    echo
    echo "----------------------------"
    echo "GIT PRE-COMMIT CODE ANALYSIS"
    echo "----------------------------"
    ${buildout:directory}/bin/code-analysis-flake8
    ${buildout:directory}/bin/code-analysis-utf-8-headers
#    ${buildout:directory}/bin/code-analysis-jshint
#    ${buildout:directory}/bin/code-analysis-csslint
#    ${buildout:directory}/bin/code-analysis-zptlint
    ${buildout:directory}/bin/code-analysis-check-for-pdb
    echo "----------------------------"
    echo ""
output = ${buildout:directory}/bin/code-analysis
mode = 755
