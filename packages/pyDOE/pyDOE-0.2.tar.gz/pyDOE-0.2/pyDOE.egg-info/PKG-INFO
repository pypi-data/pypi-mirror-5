Metadata-Version: 1.1
Name: pyDOE
Version: 0.2
Summary: Design of experiments for Python
Home-page: https://github.com/tisimst/pyDOE
Author: Abraham Lee
Author-email: tisimst@gmail.com
License: BSD License
Description: =====================================================
        ``pyDOE``: The experimental design package for python
        =====================================================
        
        The ``pyDOE`` package is designed to help the 
        **scientist, engineer, statistician,** etc., to construct appropriate 
        **experimental designs**.
        
        Capabilities
        ============
        
        The package currently includes functions for creating designs for any 
        number of factors:
        
        - *Factorial Designs*
        
          #. **General Full-Factorial** (``fullfact``)
        
          #. **2-level Full-Factorial** (``ff2n``)
        
          #. **2-level Fractional Factorial** (``fracfact``)
        
          #. **Plackett-Burman** (``pbdesign``)
        
        - *Response-Surface Designs* 
        
          #. **Box-Behnken** (``bbdesign``)
        
          #. **Central-Composite** (``ccdesign``)
        
        - *Randomized Designs*
        
          #. **Latin-Hypercube** (``lhs``)
          
        The following are *in the works* (probably), so stay tuned!
           
        #. Split-plot designs
        
        #. Incomplete block designs
        
        #. D-Optimal designs
        
        Requirements
        ============
        
        - NumPy
        - SciPy
        
        Installation and download
        =========================
        
        Important note
        --------------
        
        The installation commands below should be **run in a DOS or Unix
        command shell** (*not* in a Python shell).
        
        Under Windows (version 7 and earlier), a command shell can be obtained
        by running ``cmd.exe`` (through the Run… menu item from the Start
        menu). Under Unix (Linux, Mac OS X,…), a Unix shell is available when
        opening a terminal (in Mac OS X, the Terminal program is found in the
        Utilities folder, which can be accessed through the Go menu in the
        Finder).
        
        Automatic install or upgrade
        ----------------------------
        
        One of the automatic installation or upgrade procedures below might work 
        on your system, if you have a Python package installer or use certain 
        Linux distributions.
        
        Under Unix, it may be necessary to prefix the commands below with 
        ``sudo``, so that the installation program has **sufficient access 
        rights to the system**.
        
        If you have `pip <http://pip.openplans.org/>`_, you can try to install
        the latest version with::
        
           pip install --upgrade pyDOE
        
        If you have setuptools_, you can try to automatically install or
        upgrade this package with::
        
           easy_install --upgrade pyDOE
        
        Manual download and install
        ---------------------------
        
        Alternatively, you can simply download_ the package archive from the
        Python Package Index (PyPI) and unpack it.  The package can then be
        installed by **going into the unpacked directory**
        (`pyDOE-...`), and running the provided `setup.py` program with::
        
           python setup.py install
        
        or, for an installation in the user Python library (no additional access
        rights needed)::
        
           python setup.py install --user
        
        or, for an installation in a custom directory `my_directory`::
        
           python setup.py install --install-lib my_directory
        
        or, if additional access rights are needed (Unix)::
        
           sudo python setup.py install
        
        You can also simply **move** the `pyDOE-py*` directory
        that corresponds best to your version of Python to a location that
        Python can import from (directory in which scripts using
        `pyDOE` are run, etc.); the chosen `pyDOE-py*` directory should then be
        renamed `pyDOE`. Python 3 users should then run ``2to3 -w .``
        from inside this directory so as to automatically adapt the code to
        Python 3.
        
        Source code
        -----------
        
        The latest, bleeding-edge but working `code
        <https://github.com/tisimst/pyDOE/tree/master/pyDOE>`_
        and `documentation source
        <https://github.com/tisimst/pyDOE/tree/master/doc/>`_ are
        available `on GitHub <https://github.com/tisimst/pyDOE/>`_.
        
        Contact
        =======
        
        Any feedback, questions, bug reports, or success stores should
        be sent to the `author`_. I'd love to hear from you!
        
        License
        =======
        
        This package is provided under two licenses:
        
        1. The *BSD License*
        2. Any other that the author approves (just ask!)
        
        References
        ==========
        
        - `Factorial designs`_
        - `Plackett-Burman designs`_
        - `Box-Behnken designs`_
        - `Central composite designs`_
        - `Latin-Hypercube designs`_
        
        .. _author: mailto:tisimst@gmail.com
        .. _Factorial designs: http://en.wikipedia.org/wiki/Factorial_experiment
        .. _Box-Behnken designs: http://en.wikipedia.org/wiki/Box-Behnken_design
        .. _Central composite designs: http://en.wikipedia.org/wiki/Central_composite_design
        .. _Plackett-Burman designs: http://en.wikipedia.org/wiki/Plackett-Burman_design
        .. _Latin-Hypercube designs: http://en.wikipedia.org/wiki/Latin_hypercube_sampling
        .. _setuptools: http://pypi.python.org/pypi/setuptools
        .. _download: http://pypi.python.org/pypi/pyDOE/#downloads
        
Keywords: DOE,design of experiments,experimental design,optimization,statistics,python
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
