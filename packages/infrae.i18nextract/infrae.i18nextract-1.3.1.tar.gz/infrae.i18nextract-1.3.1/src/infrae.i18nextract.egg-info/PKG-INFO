Metadata-Version: 1.0
Name: infrae.i18nextract
Version: 1.3.1
Summary: Buildout recipe to extract i18n files in Silva
Home-page: https://svn.infrae.com/buildout/infrae.i18nextract/trunk/
Author: Sylvain Viollon
Author-email: info@infrae.com
License: ZPL 2.1
Description: ==================
        infrae.i18nextract
        ==================
        
        ``infrae.i18nextract`` is a buildout recipe which create a script to
        extract i18n strings from multiple packages into a ``.pot``. A script
        to merge  or compile all available translations is also available.
        
        The script support extraction from Python Script, Zope Page Template,
        Chameleon Page Template, Formulator forms and Silva Metadata schemas.
        
        Exemple in buildout::
        
          [silva-translation]
          recipe = infrae.i18nextract
          packages =
             silva.core.views
             silva.core.smi
          output = ${buildout:directory}
          output-package = silva.translations
          domain = silva
          extra-paths = ${zope2:location}/lib/python
        
        
        Options
        =======
        
        `packages`
           List of packages to extract translation from.
        
        `output`
           Output directory for the created template file.
        
        `output-package`
           If specified, you will be able to create the template file directly
           inside that package.
        
        `domain`
           Translation domain to use.
        
        `zope-products`
           List of directories that contains Zope Products (Python packages
           that must loaded using the import path ``Products`` rather than
           their own).
        
        `extra-paths`
           Extra python path to add in order to able to load the Python code
           to extract translations strings from it.
        
        Scripts
        =======
        
        Two scripts are created:
        
        `part-name-extract`
           That do extract the translations. The option `-p` saves the created
           template file in the `output-package` specified in the buildout part.
        
        `part-name-manage`
           Manage translation files in the `output-package` specified in the
           buildout part:
        
           - `-m` merge the translation template file into all existing
             translations files.
        
           - `-c` compile all existing translations files.
        
        The last script requires to have the commands `msgfmt` and `msgmerge`
        installed on the system (available in gettext).
        
        Changes
        =======
        
        1.3.1 (2013-05-23)
        ------------------
        
        * Add support to extract the ``title`` and ``description`` fields from
          the Silva Metadata files.
        
        1.3 (2012-08-17)
        ----------------
        
        * Add two options ``--export-tarball`` to create an archive that can
          be used to upload translations to Launchpad, and
          ``--import-tarball`` that can be used to import a tarball from
          Lanchpad.
        
        * Add ``zope-products`` options to enable extraction in code that uses
          old Zope products.
        
        1.2.1 (2011-02-07)
        ------------------
        
        * `.xml` files are not always Silva Metadata. Don't fail if they can't
          be parsed as such.
        
        1.2 (2010-10-06)
        ----------------
        
        * Rename the merge script into manage. Add an option to compile
          translation files.
        
        * Fix logging output that was wrong when the translation contained
          dots.
        
        1.1 (2010-04-26)
        ----------------
        
        * Add support for ``extra-paths`` so the recipe can be used with older
          Zope version in buildout.
        
        * Add a script to merge translations.
        
        1.0 (2010-04-02)
        ----------------
        
        * Initial version, built from previous Infrae package
          ``i18nextract-sa``.
        
Keywords: i18n extract formulator buildout
Platform: UNKNOWN
Classifier: Framework :: Buildout
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Topic :: Software Development :: Version Control
