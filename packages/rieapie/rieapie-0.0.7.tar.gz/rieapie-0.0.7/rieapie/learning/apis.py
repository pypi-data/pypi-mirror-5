# -*- coding: utf-8 -*-
import rieapie
import webbrowser
apis = {}
class Learning(rieapie.Api):
    def __init__(self, name, description, url, help_url):
        rieapie.Api.__init__(self, url)
        self.name = name
        self.description = description
        self.help_url = help_url
    def get_help(self):
        webbrowser.open(self.help_url)
    def __repr__(self):
        return self.name

apis["23"] = Learning("23", "From their site: We believe that APIs should be open and non-vendor specific to create a common field for interoperability and competition. It does not make a lot of sense for us to create a 23 API that can only be used with one service. Therefore we are actively working with a wide variety of people in the sharing space to create open standards. In the meantime we have added support for the Flickr API giving any developer who is already has spent time implementing the Flikr API a chance to support 23 in 2-3 minutes. [[http://www.23hq.com/doc/api/switch See differences]].", "http://www.23hq.com/services/rest", "http://www.23hq.com/doc/api/")
apis["PeoplePond"] = Learning("PeoplePond", "PeoplePond provides the tools needed to take ownership of your online identity and reputation management by creating a search engine optimized online profile promoting your online identity and content.", "http://adam.peoplepond.com/peeps.php?", "http://www.peoplepond.com/adam-api.php")
apis["GeoCommunicator"] = Learning("GeoCommunicator", "This service from the U.S. Bureau of Land Management provides mapping services to support ArcIMS image applications, ArcGIS applications, and other local GIS functions. Separate data services provide lookup functions for public land descriptions, surveys, and range allotments, as well as BLM administrative areas and specific sites it manages (e.g., abandoned mines, campgrounds, buildings, etc.).Methods support mapping rangelands, allotments and pastures, administrative boundaries, and facilities. Data methods retrieve a land description based on the location or determine a location based on the land description.", "http://www.geocommunicator.gov/", "http://www.blm.gov/nils/GeoComm/home_services.html")
apis["SBARecommendedSites"] = Learning("SBA Recommended Sites", "The Small Business Administration (SBA) strives to act as an engine of opportunity and economic growth in America by providing a variety of programs and support services for both current and prospective small business owners.The Recommended Sites API provides programmatic access to SBA.gov&amp;#039;s data set of links to federal, state, and local websites that have been organically recommended to improve the relevance of long tail queries about governmental organizations. The data set is curated by the SBA.gov team to help people find the information they are looking for through the use of particular keywords. Queries can be made by keyword, category, master term (a word or phrase assigned to a group of synonyms), or domain. This RESTful API returns data as XML or JSON, and is free to use.", "http://api.sba.gov/rec_sites/", "http://www.sba.gov/about-sba/sba_performance/sba_data_store/web_service_api/recommended_sites_api")
apis["BlastCastaFeed"] = Learning("BlastCasta Feed", "Use the BlastCasta Feed API to get feed modifying services. For example, combine multiple feeds into one feed, sort feeds, filter feeds, translate a feed from one language to another, convert a feed from RSS to Atom, remove HTML tags, and suppress images in feeds. As part of filtering, you might use the API to set a max limit on the number of feed items in the output feed. As part of the sorting functionality, you might sort by title, published date, author, or randomly.", "http://www.blastcasta.com/processedfeed.aspx", "http://www.blastcasta.com/api.aspx")
apis["Spinn3r"] = Learning("Spinn3r", "Spinn3r is a web service for indexing the blogosphere. We provide raw access to every blog post being published - in real time. We provide the data and you can focus on building your application / mashup.Spinn3r handles all the difficult tasks of running a spider/crawler including spam prevention, language categorization, ping indexing, and trust ranking.You can read more about Spinn3r on their [[http://blog.spinn3r.com official blog]] or on the [[http://feedblog.org blog of their CEO]].", "api.spinn3r.com", "http://www.spinn3r.com/service")
apis["Tinylink"] = Learning("Tinylink", "From their site: TinyLink is a free service that takes long urls and makes them short. This is useful when you need to embed urls into an email that you&amp;#039;re sending or if you use Instant Messaging and want to send a quick link to someone. TinyLink urls will never exceed 28 characters.", "http://tinylink.co.za/api/", "http://tinylink.co.za/api/")
apis["Boliven"] = Learning("Boliven", "Boliven is an online repository that users can search to find information on medical devices and technology. Information included about medical devices include patents, publications, companies, clinical trials, and news releases for purposes of research and development, business development, and intellectual property issues.The Boliven API allows developers to access and integrate the functionality of Boliven with other applications and to create other applications. Some example API methods include searching and retrieving patent data, accessing publications and resources, and listing medical devices.", "http://www.boliven.com/api/medical_devices/", "http://www.boliven.com/bws/medical_devices_api")
apis["Sem4Tags"] = Learning("Sem4Tags", "The service provides indications of intended meanings of words applied as subject tags across languages and with specific consideration of contexts for interpreting the terms. User-applied tags develop into &amp;#039;folksonomy&amp;#039; describing the subject of the tagged resource, but differences in language and expected uses between users can complicate interpretation. The service attempts to resolve ambiguities in meaning and place tags in context of topically related resources.API methods support disambiguation of a submitted term&amp;#039;s meaning by linking it to a specific Wikipedia article based on additional terms added to the request to indicate context. Methods also support directly populating the repository of disambiguated terms rather than interpreting context.", "http://grafias.dia.fi.upm.es/SemanticTagWebServiceRestFul/resources/tag/", "http://grafias.dia.fi.upm.es/Sem4Tags/webService.html")
apis["myExperiment"] = Learning("myExperiment", "Use the myExperiment API to view workflows that others have published, so that you do not need to reinvent a process. The myExperiment site is where scientists safely publish their workflows, sharing or viewing them. Workflows or other digital objects (or Packs) can be swapped, sorted and searched like Web photos and videos. The myexperiment.org social site appeared in November 2007 with support for sharing Taverna workflows and has grown a lot. The users are typically in the life sciences, but chemists, social statisticians, and music professionals also use it.", "http://www.myexperiment.org/", "http://wiki.myexperiment.org/index.php/Developer:Contents")
apis["Embedly"] = Learning("Embedly", "Get embed code via API from over 100 different sites. Videos, images and other rich content can be added to your site using the oEmbed standard and Embed.ly&amp;#039;s API to retrieve embedding information.", "http://api.embed.ly/v1/api/", "http://embed.ly/docs/endpoints")
apis["SERPP"] = Learning("SERP-P", "The service allows search against a database of research results in the areas of economic development and policy within the Philippines. Search results cite socioeconomic studies by many different research institutions, including government agencies and academic sources. Research by the Philippine Institute for Development Studies (PIDS) is highlighted. All listings provide abstracts, authors, focus of study, geographical coverage, and availability, and full text is available for some.API methods support submission of an agency, and returned data list publications available from that source.", "http://serp-p.pids.gov.ph/serp-p/api/", "http://serp-p.pids.gov.ph/serp-p/api.php")
apis["Ssongmat"] = Learning("SÃ¤songmat", "The service provides Swedish-language content about seasonal availability of foods in Sweden and the region. When foods are naturally available, they can be supplied with the least environmental impact while they are also least expensive and quality is highest. The service seeks to help consumers to maximize their uses of seasonally products by giving access to a database of foods and sources.API methods support retrieval of content on raw (unprocessed) food products specified by name, EAN-13 bar code, or PLU code. Methods also allow specification of a region where foods are grown, harvested, or produced. Methods also allow applications to update the database with new information about food products. A plug-in for the WordPress blogging platform is available, and data can be retrieved with semantic markup.", "http://xn--ssongsmat-v2a.nu/w/api.php?action=ssmstreckkod&amp;kod=7340011309804 http://xn--ssongsmat-v2a.nu/w/api.php?action=", "http://xn--ssongsmat-v2a.nu/ssm/S%C3%A4songsmat:API")
apis["USAspending"] = Learning("USAspending", "From their site: The API allows access to the data to the Federal contracts and Federal assistance databases. All data present on USAspending.gov is available through the API, except for pie charts and end-of-search totals. The site is a re-launch of www.federalspending.gov.", "http://www.usaspending.gov/faads/faads.php", "http://www.usaspending.gov/data?tab=API")
apis["Findory"] = Learning("Findory", "It appears as of 6/25/2008 that this api appears to be no longer available.From their site: Put simply, our API enables developers to retrieve Findory news and blog article data by making parameterized URL requests over HTTP (otherwise known as REST). The results are returned in RSS format for your convenience.Using our nifty RSS Feeds configuration page, you can can play with all the different arguments to our REST API and preview the results. There are literally millions of ways you can slice the data.", "http://rss.findory.com/rss", "http://glinden.blogspot.com/2008/01/brief-history-of-findory.html")
apis["MySocietyGaze"] = Learning("MySociety Gaze", "The Gaze API collects location information from users without using maps or postcodes. Instead the API uses place names to help identify locations, alternate locations and more. Users can use the API to search over 2.2 million places and 3 million names and supply additional contextual information to disambiguate common place names. The API uses RESTful calls and responses are formatted in CSV.", "http://gaze.mysociety.org/gaze-rest", "http://gaze.mysociety.org/")
apis["Notches"] = Learning("Notches", "Notches is a free, open, distributed platform for reviews. The platform handles normalization, entity aliasing, summarization, personalization, spam prevention, gaming detection, and recommendations. Notches helps end the fragmentation of review systems and can handle pretty much any type of review: music, products, services, restaurants, people, and more.", "http://api.notches.org/", "http://developer.notches.org/")
apis["MitoMiner"] = Learning("MitoMiner", "The service provides mitochondrial data for a range of organisms. It collects a number of interrelated datasets associated with genetic and protein structures, allowing single-source access to information about their expression in living organisms. It also maintains and provides ontologies for describing genes.API methods support flexible queries against the database for mathces to protein names, UniProt keywords, gene names, or species. Methods give access to datasets covering mitochondrial proteomics, gene ontologies, and metabolic pathways. The API also gives access to records of associations of human disease with mitochondrial profiles.", "http://mitominer.mrc-mbu.cam.ac.uk/release-3.0/", "https://intermine.readthedocs.org/en/latest/")
apis["SISSVoc"] = Learning("SISSVoc", "The service is part of the Spatial Information Services Stack (SISS) devoted to promoting interoperability among mapping information systems, including implementations by Australian government agencies. This function establishes an interface for integrating descriptive vocabularies to standardize terminology use, primarily via machine-to-machine sharing of HTTP links representing terms. A human interface is also provided, but that function is secondary to API-based exchanges of data.API methods support submission of queries for geospatial terms to the service, which returns standard versions and variants matching the request. Methods indicate semantic equivalence or other relationships between terms managed within the vocabulary.", "http://services.auscope.org/sissvoc/", "https://www.seegrid.csiro.au/wiki/Siss/SISSVocWebService")
apis["EnCloutDNS"] = Learning("EnClout DNS", "EnClout is interested in bringing data together from multiple sources and solve the data silo for businesses. EnClout provides a suite of domain related APIs. The DNS API takes a URL or domain as input and returns parsed DNS records in JSON, XML or HTML format.", "https://enclout-dns.p.mashape.com/dns/", "http://www.enclout.com/dns")
apis["isemailAddressValidation"] = Learning("isemail Address Validation", "The service validates email addresses for compliance with  standards detailed in internet requests for comment (RFCs). It verifies that the character count is within limits and that formatting reflects acknowledged best practices. Some internet service providers and email services generate noncompliant addresses, which may cause systems using strict validation to reject them as undeliverable. The service reduces this likelihood by catching and highlighting potential formatting problems. It makes no effort to confirm that email can actually reach a particular address, only that address formatting complies with applicable guidelines.API methods allow submission of a character string and return a status of 1 or 0 indicating valid or invalid, along with diagnostic text describing any validity problem.", "http://isemail.info/", "http://isemail.info/help")
apis["NationalMapViewer"] = Learning("National Map Viewer", "REST &amp; SOAP webservices for the USGS National Map Viewer. Uses ArcGIS to display data views for areas within the United States. Options include local government units, weather, structures, transportation resources, and topography information.", "http://services.nationalmap.gov/ArcGIS/rest/services/", "http://nationalmap.gov/viewer.html")
apis["Cogenz"] = Learning("Cogenz", "From their site: Cogenz Ltd was founded in 2006 to provide the Cogenz social bookmarking service to companies looking to harness social software for collaboration and knowledge management.", "https://i.cogenz.net/api/v1.1", "http://www.cogenz.com/support/api/")
apis["Molinspiration"] = Learning("Molinspiration", "The service provides tools for cheminformatics such as generating images of molecules and modeling, processing, and manipulating molecular properties and structures. It works with SMILES notation to allow SDfile conversions and generate representations of molecules and fragments. The service can screen results based on molecular fragments and predict biological activity of compounds represented. API methods support submission of compounds in SMILES chemical notation. Returned data include molecular characteristics needed to fully characterize and modify the compound specified in the request.", "http://www.molinspiration.com/cgi-bin/properties", "http://www.molinspiration.com/services/restfulapi.html")
apis["BigHugeThesaurus"] = Learning("Big Huge Thesaurus", "Use the Big Huge Thesaurus API to get synonyms for words, as well as antonyms, related terms, and similar terms. This is a free, English language thesaurus with over 145,000 words. No API key required if you make fewer than 10,000 calls per day. Version 1 has simple output, and version 2 has enhanced output, including the part of speech and relationships to the submitted word.", "http://words.bighugelabs.com/api", "http://words.bighugelabs.com/api.php")
apis["Synergizer"] = Learning("Synergizer", "The service provides translations of biological indentifiers from one encoding format to another. This function allows data expressed in one format to be reused, combined, and compared with data expressed in a different format. For example, translation can convert gene IDs stated in Ensembl to Entrez format, or it can convert IPI identifiers to HGNC symbols.API methods support submission of an identifier and the species name to which it pertains along with the authority structure governing the translation and the original and final desired encoding namespaces. Methods can accept a file listing multiple identifiers to be translated, and output can be in spreadsheet format, as an alternative to the default JSON output.", "http://llama.mshri.on.ca/cgi/synergizer/serv", "http://llama.mshri.on.ca/synergizer/doc/")
apis["LocalSchoolDirectory"] = Learning("LocalSchoolDirectory", "The service provides data about K-12 public, private, and charter schools along with other education options in the vicinity of a specified location. Information provided include location -- address and latitude/longitude -- along with grades taught, number of enrolled students and faculty, student:teacher ratio, and notes on record.API methods support submission of a search location as five-digit ZIP code or city and state. Requests can limit matches by the school type, grade level, and distance from the specified location.", "http://api.localschooldirectory.com/schools", "http://www.localschooldirectory.com/school-data-api.php")
apis["Timetric"] = Learning("Timetric", "The Timetric API gives you access to the worldwide statistics and data available on the site. Timetric offers a wide array of datasets pertaining to worldwide trends overtime. In addition, users are given the opportunity to upload their own data and use the resulting time series analysis. The API lets you integrate these various datasets into your own site.", "http://timetric.com/", "http://timetric.com/help/httpapi/")
apis["Sholarometer"] = Learning("Sholarometer", "The service powers a browser extension that provides a smart interface for Google Scholar, and it makes the same functionality available via API. It augments search results with impact analysis for resources retrieved, using a citation analysis function that totals appearances of one resource in reference lists of others. It also collects information about authors and disciplines, including their interrelationships with one another. The service publishes its data about authors and disciplines under linked data protocols to make that information available on the Semantic Web.API methods support listing authors or retrieval of a single author record by unique identifier or name. Methods list disciplines tracked and information about selected disciplines. The API can provide networks of related authors or disciplines to document research within a particular field.", "http://scholarometer.indiana.edu/api/", "http://scholarometer.indiana.edu/data.html")
apis["Sindice"] = Learning("Sindice", "The Sindice API provides programmatic access to its semantic search capabilities. It is based on the OpenSearch spec. Over 10 billion pieces of data can already be searched within 100 million web pages with embedded RDF and Microformats. For example you can build on the API and find RDF with a certain &quot;foaf:name&quot; value.", "http://api.sindice.com/v2", "http://sindice.com/developers/api")
apis["WebToPicture"] = Learning("WebToPicture", "The service generates a thumbnail image for the screen display at a URL submitted. The user or application submits a valid web URL, and the service captures the display found in any of four sizes. It logs images captured and allows browse access by category.API methods allow submission of a URL and the desired thumbnail size -- small, medium, large, or extra-large. Methods search for a matching URL and, if found, deliver the existing image link. If no current image exists, the service queues the request for image capture and returns a placeholder image link.", "http://api.webtopicture.com/t.php?url={your-desired-url}&amp;s={size}", "http://webtopicture.com/web_api")
apis["SnappyFingers"] = Learning("SnappyFingers", "SnappyFingers lets you use its Question and Answer based search Engine through this API. The underlying service searches through FAQ files across the Internet.", "http://www.snappyfingers.com/qa/search/", "http://www.snappyfingers.com/api/")
apis["Missatsamtalse"] = Learning("Missatsamtal.se", "Missatsamtal.se is a community-driven database of callers in Sweden. Users post phone numbers of telemarketers and companies or unknown phone numbers. Other users can use this data to find out who unknown numbers are. The Missatsamtal.se API is a RESTful API that has two parts; a Search part and a Post part. The Search part is useful for looking up numbers and returning data in an XML or JSON format. The Post part can be used for posting numbers to the database, or commenting on existing numbers. (API Key required for posting data through the API only; can use the search feature of the API without a Key)", "http://api.missatsamtal.se/", "http://www.missatsamtal.se/api/")
apis["MailRu"] = Learning("Mail.Ru", "Social API for largest mail service in CIS countries and social network my.mail.ru. The Mail.Ru API allows developers to integrate Mail.Ru services into their websites and to develop applications based on Mail.Ru. Mail.Ru API has both REST and JavaScript versions which both return JSON and XML data.", "http://www.appsmail.ru/platform/api", "http://api.mail.ru/")
apis["TFLCycleHire"] = Learning("TFL Cycle Hire", "The TFL Cycle Hire API was created to display real-time data from the TFL Cycle Hire website. TFL Cycle Hire is a docking station in the U.K. The project was made to gather the data regarding the TFL Cycle Hire program and to develop a easy way of grabbing it. The data is being scraped every minute from the Barclays Cycle Hire Map and is then cached for further use. Currently the service is in its alpha release. The API uses RESTful protocol and responses can be formatted in XML, JSON, CSV and YAML.", "http://api.bike-stats.co.uk/service/rest/", "http://bike-stats.co.uk/")
apis["Safemn"] = Learning("Safe.mn", "Safe.mn is a URL shortening service that provides measures for security and transparency. All links are verified for viruses, malware, phishing, malicious content, session stealing, cross-site scripting attacks, etc. Any suspicious link gets flagged, and users are warned about it.The API uses a RESTful interface and responses are formatted in XML, JSON, JSONP or text.", "http://safe.mn/api/", "http://safe.mn/api-doc/")
apis["Notely"] = Learning("Notely", "From their site: Studies show that today&apos;s students learn best when they are actively engaged by the learning process. Notely makes note-taking a breeze by helping students organise information in a cycle. Students can capture, organise, and share notes in a way that increases interactivity, learning and retention. Feature list includes calendar, to-do list, homework organiser, manage courses, write and save notes, organise links, contacts, files, and keep a notebook or lab book.", "http://www.notely.net/api/api.php", "https://notely.net/api/index.php")
apis["BioDBHyperlinkManagementSystem"] = Learning("BioDB Hyperlink Management System", "The service maintains and automatically updates a database of hyperlinks across major biology and life sciences databases. It defines stable identifiers linking to data IDs in major databases for gene and protein information. Its update function returns up-to-date URLs for accessing corresponding data across multiple databases. API methods support submission of an identifier in a particular input format and the desired output format. Methods return the correct identifier in the requested output system. Methods also allow retrieval of a listing of identifiers logged in the system.", "http://biodb.jp/{convert|entry}/", "http://biodb.jp/help/ws_en.html")
apis["USGSWaterservices"] = Learning("USGS Waterservices", "The service provides instantaneous, daily, and summary data for water supply and water quality. Data provided are collected from a network of U.S. Geological Service reporting stations and provided in aggregate or at a point in time. A notification system distributes alerts based on data collected.API methods support designation of reporting station location by state and county as well as location type. Results are defined by highly detailed characteristics such as watershed size and location, aquifer type, sampling methods, and well characteristics.", "http://qwwebservices.usgs.gov/", "http://waterservices.usgs.gov/")
apis["BYUAcademic"] = Learning("BYU Academic", "The service provides support for courses taught at Brigham Young University. It allows creation and updating of course records with links to the university curriculum inventory of all courses and student registration records. The service allows for control of coursework and student performance across the BYU academic calendar.API methods support definition and updating of course sections linked to listing from the curriculum inventory, with offering dates and times, student registration rolls, and other class schedule variables. Methods also allow updating of the official curriculum listings with official title and grading rules, records of student course performance and academic status, and dates from the BYU academic calendar.", "https://ws.byu.edu/rest/v1/academic/", "https://developer.byu.edu/wiki/display/SOA/Academic")
apis["COLOURlovers"] = Learning("COLOURlovers", "From their site: With the release of the COLOURlovers API, you can now access almost 1 million named colors and more than 325,000 color palettes for your creative projects and applications. Creating a theme editor and want to give your users some color theme options? Who knows what amazingly creative stuff people will come up with.", "http://www.colourlovers.com/api", "http://www.colourlovers.com/api")
apis["ElsevierLinkedDataRepository"] = Learning("Elsevier Linked Data Repository", "The service provides semantically rich descriptive metadata about content available from Elsevier and from other sources across the Web. It makes available a catalog of resources expressed in Linked Data format suitable for use in Semantic Web applications, which define relationships among resources in complex ways meaningful to discovery and retrieval in varying contexts.API methods support retrieval of RDF documents describing Elsevier resources as well as other resources from outside sources related to Elsevier&amp;#039;s materials. Methods also provide access to a proprietary thesaurus of topic descriptors applied to resources cataloged within the service. Thesaurus descriptions include the topic identifier, preferred label, example text, and date proposed as well as the funding body proposing the term.", "http://data.elsevier.com/", "http://data.elsevier.com/documentation/index.html")
apis["Ipernity"] = Learning("Ipernity", "The ipernity API allows creating applications that can do whatever you see on the ipernity website and even more. For example: import new documents, tag a photo, create an album, search in your documents or those of all the members...", "http://api.ipernity.com/api", "http://www.ipernity.com/help/api")
apis["Kuler"] = Learning("Kuler", "From their site: kuler is all about color and inspiration: explore, create, and share color themes.", "http://kuler.adobe.com/kuler/API/", "https://learn.adobe.com/wiki/display/kulerdev/A.+Documentation")
apis["BlogamaIPInfoDB"] = Learning("Blogama (IPInfoDB)", "IP geolocation API with streamlined data based on the MaxMind API. Blogama has reduced duplication and surprisingly has a database of only 1.2 million records that is still incredibly accurate to the city level. You can also load the data into your own database for speedier access.", "http://ipinfodb.com/ip_query.php", "http://ipinfodb.com/ip_location_api.php")
apis["Disqus"] = Learning("Disqus", "From their site: Disqus provides an API for users to interact with the Disqus backend. Disqus is the webwide discussion community where you carry your conversations with you. For Bloggers - Plug in and experience the best comment system, backed by your own forum. For Everyone - Claim and track your comments across blogs!", "http://disqus.com/api/v1/", "http://disqus.com/api/docs/")
apis["Weebly"] = Learning("Weebly", "Weebly is an online, AJAX-based website creator focused on simplicityand ease of use. Our focus is to maintain elegance and simplicity coupled with powerful features, to allow all types of users to create, manage, and host their website, free of charge.", "http://www.weebly.com/weebly/importElement.php", "http://developers.weebly.com/")
apis["FlickrRealTime"] = Learning("Flickr Real-Time", "The Flickr Real Time APIs give developers real-time access to Flickr&amp;#039;s collection of over 6 billion photos and enables them to build new applications with them. The API continuously searches new photos and delivers new and updated photos in real-time. It allows developers to subscribe to photos by geographic area, photo meta-data or social tagging like favoriting and friend-tagging. Over 50 institutions are participating in the Flickr Commons including NASA, The Library of Congress, and the National Archives of the U.S. and U.K. from which users can receive updates. The Flickr API supports many protocols including REST, SOAP, XML-RPC. Responses can be formatted in XML, JSON and serialized PHP.", "http://api.flickr.com/services/rest/", "http://www.flickr.com/services/api/")
apis["WebAPIforBiology"] = Learning("Web API for Biology", "From their site: Web API for Bioinformatics (WABI).", "http://xml.nig.ac.jp/rest", "http://www.ddbj.nig.ac.jp/ddbj_wiki/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8")
apis["Topicsio"] = Learning("Topics.io", "Newsinapp.io is an online tool that allows users and developers to access a variety of online content from numerous sources on different topics. This content can be aggregated in one place and used in various applications.The Newsinapp.io API allows developers to access and integrate the data and functionality of Newsinapp.io with other applications and to create new applications. Some example API methods include searching for content topics, subscribing to content topics, and creating topics.", "http://api.newsinapp.io/", "http://newsinapp.io/")
apis["Seismi"] = Learning("Seismi", "Seismi is an earthquake data visualization project which is using publicly available data provided by USGS and transforming it to a more informative, human readable and visually interesting form. The API provides information on earthquakes including most recent, magnitude, count and date of earthquakes. It uses RESTful calls and responses are formatted in JSON.", "http://www.seismi.org/api/", "http://www.seismi.org/api/")
apis["G8LUS"] = Learning("G8L.US", "From their site: G8L.US provides URL shortening services via an API and Website. API can be accessed via HTTP and supports XML, JSON, and a simple comma-delimited response format. G8L.us has two api calls, one to shrink links and one to get stats for the links. You can look at the Home and Stats pages to see how to use the API via Ajax.", "http://www.g8l.us/api/shrink/", "http://www.g8l.us/api.html")
apis["UnifiedMedicalLanguageSystem"] = Learning("Unified Medical Language System", "Medical terminology resources from the National Library of Medicine (NLM) to allow applications to interpret and refine user queries, to map the user&amp;#039;s terms to appropriate controlled vocabularies and classification schemes, to interpret natural language, and to assist in structured data creation. They are also useful as reference tools for database builders, librarians and other information professionals. Includes tools called Metathesaurus Browser, Semantic Network Browser, and SNOMED CT Browser.", "https://uts-ws.nlm.nih.gov/", "https://uts.nlm.nih.gov/home.html")
apis["NCARDigitalLibrary"] = Learning("NCAR Digital Library", "The service provides search against the digital repository of the University Corporation for Atmospheric Research, part of the National Center of Atmospheric Research. The service can deliver resources based on free-text search or field-specific (advanced) search. Results can be sorted by relevance or by combinations of field-value filters, and limitations can be applied by date range, collection, or geographic location.API methods support submission of a query as free text or targeted to specific fields in the item description index. Methods also allow specification of a collection to retrieve only items contained in that subset. The API also allows submission of date range and geographic filters and specification of result ordering criteria.", "http://nldr.library.ucar.edu/dds/services/ddsws1-1", "http://nldr.library.ucar.edu/dds/services/ddsws1-1/index.jsp")
apis["LongURL"] = Learning("LongURL", "Use the LongURL API to expand shortened URLs from TinyURL, etc. Submit a shortened URL and then get its long equivalent returned. You can also use the API to get a list of known shortening services along with the domains they use (or view the main site&amp;#039;s home page for a list, too). If you use the JSON return format, you can also identify an optional callback function.", "http://api.longurl.org/v1", "http://longurl.org/api")
apis["Copac"] = Learning("Copac", "The Copac SRU Interface allows you to search the collections of materials held in libraries throughout the UK. The API lets you search by title, source, publisher, subject and many more.", "http://copac.ac.uk:3000/", "http://copac.ac.uk/developers/webapi/")
apis["PlanningAlerts"] = Learning("PlanningAlerts", "From their site: Searches as many local authority planning websites as it can find and emails you details of applications near you. The aim of this to enable shared scrutiny of what is being built (and knocked down) in peoples communities.", "http://www.planningalerts.com/api.php", "http://www.planningalerts.com/apihowto.php")
apis["GeneProf"] = Learning("GeneProf", "The service provides data to support genetic research. Its data analysis functions help with processing of genetic sequences in RNA-seq and ChIP-seq formats, and a database of previously processed experimental results provides points of comparison for newly collected datasets. These resources help researchers to evaluate expression and regulation of genes developed in their experimental work and in similar results from other studies.API methods support retrieval of a catalog of datasets already logged by the service along with search-based access to data for individual genes, experiments, datasets, or public samples. Methods allow selection of transcription factors and TFAS scores  for a target gene or an experimental sample. The API gives access to genomic data files in BED or WIG format.", "http://www.geneprof.org/api/", "http://www.geneprof.org/GeneProf/webapi.jsp")
apis["SpacePhysicsInteractiveDataResource"] = Learning("Space Physics Interactive Data Resource", "The service provides access to historical data, images, and descriptive metadata about solar terrestrial physics. It is intended to enable generation of space environment models and forecasts describing solar flares and events plus other features of weather in space via unified web-based access to a distributed database network and Java middle-ware servers.API methods support retrieval of data and metadata, specified by format and date range. Methods also support image plotting with specification of parameters like image width and height, scale and data labels, colors, date range of data to plot, etc.", "http://spidr.ngdc.noaa.gov/spidr/servlet/", "http://spidr.ngdc.noaa.gov/spidr/friend.do?hlink=services.jsp")
apis["Upcomingorg"] = Learning("Upcoming.org", "The Upcoming.org REST API is available for non-commercial use by developers to build applications by providing access to all public information stored in Upcoming&amp;#039;s databases. Upcoming.org is a collaborative event calendar, completely driven by people like you. Enter in the events you&amp;#039;re attending, comment on events entered by others, and syndicate event listings to your own weblog. The set of methods provided allow for manipulating and extracting data from Upcoming.org with simple HTTP GET and POST requests in a RESTful fashion.All responses are formatted in XML.", "http://upcoming.yahooapis.com/services/rest", "http://upcoming.yahoo.com/services/api/")
apis["Questsin"] = Learning("Questsin", "Use the Questsin API to get programmatic access to the same data available from the main Questsin site. On the main site, you enter two or more similar things, such as places, people, products, movies, games, and words (for example, Christmas vs. Hanukkah), and then information about that submission is provided. Multiple data formats are available, such as numbers, dates, and strings. Questsin is an ongoing hobby research project related to nontraditional approaches to Artificial Intelligence.", "http://questsin.net/rss.asp", "http://questsin.net/Labs.html")
apis["qrcx"] = Learning("qr.cx", "qr.cx provides a basic API which can be used to harness qr.cx&amp;#039;s URL shortening service for other applications. This works by accessing a particular URL on the qr.cx site which accepts the long URL you would like shortened as a parameter. The shortened URL (or various error conditions) will then be returned in the HTTP response.", "http://qr.cx/api/?", "http://qr.cx/api.php")
apis["CiteULike"] = Learning("CiteULike", "CiteULike is a free browser-based service to help you to store, organise and share the scholarly papers you are reading. When you see a paper on the web that interests you, you can click one button and have it added to your personal library, and CiteULike automatically extracts the citation details. Citation library is stored on the server, you can access it from any computer with an Internet connection.", "http://www.citeulike.org/json/user/[USERNAME]", "http://wiki.citeulike.org/index.php/Importing_and_Exporting")
apis["OpenHazardsGetEarthquakeProbability"] = Learning("OpenHazards GetEarthquakeProbability", "The service gathers data from multiple sensor networks and public reports to generate forecasts of earthquake and seismic hazards. It does not aim to predict specific events but rather to generate probabilistic forecasts of risk based on event probability and likely damage, should those events occur. Its goal is to aid in preparation for natural catastrophes that can be anticipated.API methods support submission of a location for which to generate a forecast along with a radius around that point, a timeframe, and a magnitude threshold. The service returns a forecast of the hazard that an earthquake above the stated threshold will occur within the radius around the stated location within the timeframe specified.", "http://api.openhazards.com/GetEarthquakeProbability.xml", "http://www.openhazards.com/data")
apis["NewYorkFederalReserveForeignExchange"] = Learning("New York Federal Reserve Foreign Exchange", "The service from the New York Federal Reserve Bank provides historical data for foreign exchange transactions and exchange rates. The list of data available covers many of the world&amp;#039;s currencies, with both spot and buying prices quoted at different times of day. The authoritative provider makes the data available for ingestion to automated processes that must compare currencies to calculate prices for cross-border transactions, in addition to historical research uses.API methods support retrieval of regularly updated data formatted in compliance with the emerging Statistical Data and Metadata Exchange (SDMX) standard. URL-based access delivers data for specific currencies, with both 10 a.m. and noon quotes available for many frequently traded currencies.", "http://www.newyorkfed.org/xml/data/fx/", "http://www.newyorkfed.org/xml/fx.html")
apis["Ergast"] = Learning("Ergast", "The Ergast Motor Racing Data API provides a historical record of motor racing data for non-commercial purposes. The API provides data for the Formula 1 series, from the start of the World Championship in 1950 through to today. New: Now provides lap times and pit stop data from the 2011 season onwards.", "http://ergast.com/api/", "http://ergast.com/mrd/")
apis["Talis"] = Learning("Talis", "The Talis Platform is open to any software developer and easily programmed using a Web API. Data is held in a reliable and safe environment and the API enables development of a vast range of information rich applications. The Platform works like a shared database capable of storing and searching both content and RDF metadata. Because the Platform infrastructure is shared every customer can immediately benefit from any improvements we make in performance or capacity. We continually improve the Platform and release new versions every month without disrupting or degrading service to applications relying on it. This means application developers can forget about downloading and upgrading and concentrate user experience and value.Data held in the platform is organised into &amp;quot;stores&amp;quot; which can be individually secured if need be. Any kind of content can be added to a store along with arbitrary RDF metadata. The content and metadata becomes immediately accessible over the Web and discoverable using both SPARQL and a free text search system with built in ranking of results according to relevance to the search terms. RDF provides a powerful and flexible data model which encourages linking and sharing of data and dramatically reduces the complexity of data integration. Because each store provides a uniform Web API regardless of the type of data it holds the Talis Platform gives unparalleled opportunities for reuse and remixing of data. The uniform Web API allows applications to easily search multiple stores of data, and the use of RDF enables the application to interpret and use the results with very little effort. This means that developers using the Talis Platform benefit immediately from an ecosystem of data and services that enable rapid development of applications with a strategy to continually evolve and improve them as they incorporate new types and sources of data.", "http://api.talis.com/stores", "http://docs.api.talis.com/")
apis["EnrichNet"] = Learning("EnrichNet", "The service provides analysis of expected functional associations between genes and proteins submitted as a list. It also generates cellular processes, pathways, and complexes associated with the listed genes and proteins. Analysis results provide statistical rating of the importance of overlapping functional characteristics  between lists of genes or proteins. API methods support submission of one or more genes or proteins specified by standard protocols (ensembl, HGNC symbol, etc.) along with the database to provide functional characteristics for the analysis. For larger batch analysis, methods allow uploads of files with tab-delimited values specifying the genes/proteins and interactions to be analyzed.", "http://bree.cs.nott.ac.uk/enrichnet/", "http://bree.cs.nott.ac.uk/enrichnet/api.html")
apis["SpamOn"] = Learning("SpamOn", "SpamOn! is a free service that provides disposable e-mail addresses when users fill out forms, register on websites or meet new people. The API allows users to integrate SpamOn! data on their website or application. There is currently no restrictions on the number of queries allowed. The API uses RESTful calls and responses are formatted in JSON.", "http://api.spamon.com/", "http://www.spamon.com/api/")
apis["Pixagogo"] = Learning("Pixagogo", "Pixagogo can efficiently manage millions of pictures across large communities of your customers, prospects or participants. The entire album and site structure is designed for being rapidly localized, customized, re-branded and separately managed according to the wishes of business customers and partners.", "http://www.pixagogo.com/tools/api/rest", "http://www.pixagogo.com/Tools/api/apihelp.aspx")
apis["FloraBrasil"] = Learning("FloraBrasil", "The service provides a catalog of plant species in Brazil with the goal of supporting documentation and conservation of flora across national, regional and local areas within the country. It is part of the Brazilian government&amp;#039;s commitments under the international Convention on Biological Diversity (CBD) to support the Global Strategy for Plant Conservation (GSPC).API methods support access to a checklist of plant organisms by genus, species, and subspecies, with parameters for output language, data format, etc. Methods also support listings of categories of organisms, geographic locations, and related characteristics of the Brazilian environment.", "http://checklist.florabrasil.net/service/", "http://checklist.florabrasil.net/service")
apis["RatePubs"] = Learning("RatePubs", "Use the RatePubs API to get two-way access to bar information, including reviews. Visitors to your site can get information or reviews, and they can then leave their own reviews.", "http://www.ratepubs.com/freecontent", "http://www.ratepubs.com/freecontent/freecontent.php")
apis["OManiac"] = Learning("O-Maniac!", "The O-Maniac! URL shortening service provides shortened URLs. The API allows you to both create shortened URLs and expand a shortened URL.", "http://omani.ac/api/", "http://omani.ac")
apis["OpenImages"] = Learning("Open Images", "The service provides an open media platform to access an archive of images and video from several European cultural institutions and other sources. Reuse rights promote its stated goal to stimulate creative work by freely allowing incorporation into new resources. In addition to downloading A/V footage and remixing it, users can upload their own works to the platform to expand the collection.Methods support retrieval of content files along with metadata in the standard Dublin Core structure: creator, title, creation dates, subject, format, source, rights, etc. Methods also deliver metadata in Open Archives (OAI) format. Retrieved datasets can be restricted by date, source, or specific record identifier.", "http://www.openbeelden.nl/feeds/", "http://www.openimages.eu/api/")
apis["GoogleMapsElevation"] = Learning("Google Maps Elevation", "The Google Elevation web service provides you a simple interface to query locations on the earth for elevation data. Additionally, you may request sampled elevation data along paths, allowing you to calculate elevation changes along routes. The Elevation service provides elevation data for all locations on the surface of the earth, including depth locations on the ocean floor (which return negative values). In those cases where Google does not possess exact elevation measurements at the precise location you request, the service will interpolate and return an averaged value using the four nearest locations.", "http://maps.google.com/maps/api/elevation", "https://developers.google.com/maps/documentation/elevation/")
apis["Gastus"] = Learning("Gastus", "From their site: Use Gastus to keep track of your daily expenses. When you&amp;#039;re using the API, it&amp;#039;s always through an existing user in Gastus. So when you use the API as &amp;quot;john&amp;quot;, you get to see and work with what &amp;quot;john&amp;quot; is allowed to do. Pretty much any URL in Gastus can be viewed in its XML form by adding the .xml extension. So /expenses/4 becomes /expenses/4.xml. You can view, create, update, and delete resources through the API.", "http://YourName.gastus.com", "http://gastus.com/developers")
apis["PaleoDB"] = Learning("PaleoDB", "The service provides a record of fossils found and documented, including their locations, the organisms represented, and their living environment at the time when they were alive. It compiles paleobiology information to document plant and animal life at specific points in space and time. Information about individual fossils and species is supported by broader taxonomic information.API methods support HTTP GET requests for fossil occurrences documenting presence of an organism, or a distinctive part of an organism, identified with a location and timeframe. The API gives access to records compliant with the XML format of the Species 2000 Catalogue of Life to provide taxonomic, stratigraphic, geologic, and geochronological data along with records of particular fossils and organisms.", "http://paleodb.org/cgi-bin/bridge.pl", "https://www.nescent.org/wg_evoinfo/PaleoDB")
apis["WoocationCityinfo"] = Learning("Woocation Cityinfo", "Woocation gives travelers information about the places they want to visit. The site does this by collecting as much data as it can about a place. The Woocation Cityinfo API provides information about cities worldwide.From currency to nearest domestic and international airports, it provides data which developers can pick from to make new applications.NOTE  : The nearest airport facility is only available for asia and oceanic continents as of now but we will be updating this for whole of the world in coming weeks very very soon.", "http://www.woocation.com/api/v1/", "http://www.woocation.com/api.html")
apis["Mbar"] = Learning("Mbar", "Mbar is a bar, terrace &amp; cafÃÂ© in the heart of Helsinki, Finland. The club offers a free, read only REST API for access to its program data, including event, artist and club series information. No API key is required and the data formats supported are XML, YAML and JSON.", "http://mbar.fi/api/v1/", "http://mbar.fi/apidoc/")
apis["Shareaholic"] = Learning("Shareaholic", "The Share API allows developers to give users the ability to share content/links from their (or any) website, desktop app, mobile app, etc to any of 300+ supported destination services.Shareaholic provides social APIs to connect a user&amp;#039;s site or application to each of the major social networks for sharing. With these RESTful APIs users can customize the social sharing experience for their users to match the branding of their own site.", "http://www.shareaholic.com/api/share", "https://www.shareaholic.com/api/")
apis["arXiv"] = Learning("arXiv", "From their site: Allows access to all of the arXiv data, search and linking facilities. The Cornell University e-print arXiv, hosted at arXiv.org, is a document submission and retrieval system used by the physics, mathematics and computer science communities. It has become the primary means of communicating manuscripts on current and ongoing research. The arXiv repository is available worldwide. Manuscripts are often submitted to the arXiv before they are published by more traditional means. In some cases they may never be submitted or published elsewhere. The purpose of the arXiv API is to allow programmatic access to the arXiv&amp;#039;s e-print content and metadata. The goal of the interface is to facilitate new use of the the vast body of material on the arXiv.", "http://export.arxiv.org/api", "http://arxiv.org/help/api/index")
apis["SPINRDF"] = Learning("SPIN RDF", "The service provides application-level access to the provider&amp;#039;s SPARQLMotion engine, which connects processing steps in sequence where one step generates output that becomes input to the next. Processing steps build queries in the SPARQL language to generate RDF graphs encoding data passed from step to step. Queries also perform actions to process result sets, construct RDF triples and modify RDF data sources.API methods support conversion between SPARQL query strings to SPIN (SPARQL Inferencing Format) RDF encoding, using either format as input and generating the other format.", "http://spinservices.org:8080/spin/sparqlmotion", "http://spinservices.org/spinrdfconverter.html")
apis["Lyricsfly"] = Learning("Lyricsfly", "From their site: This API is available to anyone who wishes to use our database for their own music project, website or program. If you currently use the web to search out lyrics or use code tricks to access other lyrics websites to display relevant lyrics text for your content you can now have a reliable source without the hassle.", "http://lyricsfly.com/api/api.php", "http://lyricsfly.com/api/")
apis["ConsumerNotebook"] = Learning("Consumer Notebook", "Consumer Notebook is a product comparison site that allows users take products and add them to lists and grids. The site provides API access to Consumer Notebook where users create product lists and product comparisons. Functionality currently allows users to access Users, Products, Lists, and Grids. The API uses RESTful calls and responses are formatted in JSON.", "http://api.consumernotebook.com/", "http://api.consumernotebook.com/en/latest/index.html")
apis["MapLarge"] = Learning("MapLarge", "MapLarge offers an API to embed interactive maps on a website, blog or news story. MapLarge is the creator of some of the largest Google Maps implementations on the Internet. MapLarge uses patent pending methods to create simple map visualizations from complex data. With the API users can geocode upto 2,000 records daily for free. Datasets mapped with the geocoder can be mapped on top of Google Maps, Bing, ESRI or Open Street Maps. The API uses RESTful protocol.", "http://api.maplarge.com", "http://MapLarge.com/API")
apis["Undisposable"] = Learning("Undisposable", "From their site: This is a collaborative protection system against disposable email addressing (DEA). More explicitly, Protects site owners biggest assets userbase and email. Prevents userbase contamination by fake accounts.", "http://www.undisposable.org/services/", "http://undisposable.org/docs.htm")
apis["HeyWhatsThat"] = Learning("HeyWhatsThat", "The service provides a scaled view of the horizon and terrain from a specified location, defined as a map point on Google Maps. It calculates a &amp;#039;viewshed&amp;#039; from the location based on local terrain contours and depicts a view from the location highlighting mountains in the distance. It is intended to answer questions like, &amp;quot;Hey, what&amp;#039;s that?&amp;quot; when viewing a horizon.API methods support submission of a location, either as a panorama query or as a latitude/longitude. Methods adjust for day and time, and for atmospheric refraction, which changes the view of distant terrain due to bending of light through air.", "http://www.heywhatsthat.com/bin/planisphere.kmz?param=", "http://www.heywhatsthat.com/techfaq.html#planisphere")
apis["NCSUScholarlyPublicationsRepository"] = Learning("NCSU Scholarly Publications Repository", "The service provides access to source citations and other metadata about publications logged in the repository. The library provides this machine-readable access to extend and connect the repository&amp;#039;s information to formats other than those currently provided.The API supports submission of search queries as HTTP requests that specify CGI variables. Methods return a response in XML that other applications may transform or format as needed.", "http://www.lib.ncsu.edu/repository/scholpubs/ws/", "http://www.lib.ncsu.edu/repository/scholpubs/ws/wsinfo.php")
apis["Entireweb"] = Learning("Entireweb", "The Entireweb Search API provides direct access to the search engine&amp;#039;s results. Since you receive the results as XML or JSON, you will have full control of how the results are presented on your page. The service is free up to 1,000 daily requests.", "http://www.entireweb.com/{method}", "http://www.entireweb.com/search_api/")
apis["ScienceMuseum"] = Learning("Science Museum", "Use the Science Museum APIs to access pledge information and a list of exhibitions and galleries, both current and historical. The Pledges API was developed for the Science Museum exhibition, Does flying cost the Earth? In the exhibition, visitors made pledges, and some also entered demographic data. Use the Pledges API to access this pledge data. The Countries API is used by the Pledges API for reference purposes. The Exhibitions API lists exhibitions and galleries at the Science Museum, both current and those from the past.", "http://api.sciencemuseum.org.uk", "http://api.sciencemuseum.org.uk/documentation/")
apis["DenmarkWebservice"] = Learning("Denmark Web service", "From their site: Denmark web service is a REST based web service, which displays information on different parts of Denmark, regions, municipalities, parishes, postdistrikter, valgdistrikter, skoledistrikter, primary schools, roads and addresses (over 2.2 million).", "http://oiorest.dk/danmark", "http://oiorest.dk/danmark/documentation/apidoc.aspx")
apis["BrownbookOpenSearch"] = Learning("Brownbook OpenSearch", "The service provides listings from a directory of business organizations categorized by product offerings, including both goods vendors and service providers. Search access is provided in compliance with OpenSearch standards. Keyword look-up or programmatic integration provides listings for individual businesses providing a desired product.API methods support access to the listings compliant with the OpenSearch format. Methods allow submission of a query term and and geographic location. The API returns a results list from the business directory local to the specified place and matching that term, with a link to view details for each business on the provider&amp;#039;s platform.", "http://www.brownbook.net/business/search/", "http://help.brownbook.net/opensearch/")
apis["DialectPremailer"] = Learning("Dialect Premailer", "The service prepares HTML-encoded email by embedding CSS styles before sending to recipients. It creates style attributes from linked CSS stylesheets, converts relative paths for links to absolute paths, and checks styles for compatibility with popular email clients. These checks and modifications help to promote consistent display of HTML email for recipients.API methods support submission of components to be assembled, including URLs for the HTML and CSS source, base URL for link coversion, and query sting to be added to links for traffic analytics reporting. Methods also accept parameters to control the conversion process, then the API generates email files and provides links to the resulting HTML and plain text versions.", "http://premailer.dialect.ca/api/0.1/documents", "http://premailer.dialect.ca/api")
apis["FlightCaster"] = Learning("FlightCaster", "FlightCaster predicts flight delays, often hours before the airlines. From the developer page: &amp;quot;The FlightCaster API is primarily used for retrieving information about the likelihood that a flight will be on time. Although other information is available as well, such as general airport information, general airline information, general weather station data, METARs, and TAFs.&amp;quot;", "http://api.flightcaster.com/", "http://flightcaster.com/developer")
apis["Prj2EPSG"] = Learning("Prj2EPSG", "The service provides basic conversion of mapping data from the shapefile projection format -- .prj files -- to the encoding standard of the European Petroleum Survey Group (EPSG). The provider offers an interactive form to return EPSG codes matching a search term entered in a form or by parsing an uploaded .prj shapefile, and the same functions are available via API.API methods support submitting search terms, either free-text keywords or contents of a .prj shapefile, as URL parameters. In keyword mode, the API returns any matching ESPG codes. In WKT mode, the system parses the shapefile data and returns any missing code. Either way, the return data includes a URL to access the EPSG code description page for any matching code.", "http://prj2epsg.org/search.{type}", "http://prj2epsg.org/apidocs.html")
apis["OnlyWire"] = Learning("OnlyWire", "One method API. Allows submission of new URL.", "http://www.onlywire.com/api/add", "http://www.onlywire.com/index?api")
apis["Helioviewer"] = Learning("Helioviewer", "Helioviewer.org is an open-source project for the visualization of solar and heliospheric data. The project is funded by ESA  and NASA. The project is split into three main components: browse tools, image services and feature/event services. The Helioviewer API offers developers the ability to view content and interact with Helioviewer.org via a RESTful interface.", "http://helioviewer.org/api/index.php", "http://helioviewer.org/api/")
apis["UnitedNationsSWERA"] = Learning("United Nations SWERA", "The SWERA service, from the United Nations, provides data about renewable energy resources worldwide. It provides geographic information system (GIS) and time-series data compiled by international experts and in-country partners. The service helps to promote applications of solar and wind energy technologies and support decision-making about available resources and likely energy production for a location.API methods allow specification of a location by latitude and longitude along with desired data, including solar irradiance and angle, wind speeds, and related information as recorded by a number of national repositories. Methods are also available to retrieve climate data such as temperature, heating and cooling degree days, humidity, and barometric pressure.", "http://na.unep.net/swera_ims/WS/index.php?", "http://en.openei.org/apps/SWERA/")
apis["SBABusinessLicensesandPermits"] = Learning("SBA Business Licenses and Permits", "The Small Business Administration (SBA) strives to act as an engine of opportunity and economic growth in America by providing a variety of programs and support services for both current and prospective small business owners.The Business License and Permit search tool provides developers with a RESTful interface to access a list of federal, state, and local permits, licenses, and registration forms that are needed to legally operate a small business. The search tool will return specific local licenses and permits when available, and will otherwise provide users with the URL&amp;#039;s to the websites of official local governmental agencies. Users can search by any combination of category, state, business type, city, or ZIP code to receive data in XML or JSON formats.", "http://api.sba.gov/license_permit/", "http://www.sba.gov/about-sba/sba_performance/sba_data_store/web_service_api/business_licenses_permits_api")
apis["ConvertAPIWeb2PDF"] = Learning("ConvertAPI Web2PDF", "Web2PDF lets developers create a PDF file of a web page from any URL. The ConvertAPI Web2PDF API is a pay-per-credit API that allows website URLs to be converted into PDFs. Developers can manipulate many different settings: orientation, page size, margins, cover pages, and more can be set with the Web2PDF API. Pricing begins at $15 for 1,000 calls.", "http://do.convertapi.com/web2pdf", "http://www.convertapi.com/web-pdf-api")
apis["RescueGroups"] = Learning("RescueGroups", "RescueGroups.org provides technology solutions for animal rescue and shelter organizations.RescueGroups.org is different because we are community focused, and do not have any advertising or logo requirements associated with our data sharing.We provide completely free (no cost and no advertisements or requirements) access to our database of adoptable pets (dogs, cats, horses, rabbits and dozens of additional species) to anyone that wants to promote pet adoption.RescueGroups.org provides three adoptable pet data APIs:REST - full download of hundreds of thousands of adoptable pets, descriptions and picturesSOAP - live queries with a SOAP API (replaced with the json API below)HTTP/json - live queries with json.The HTTP/json API provides programmatic access to both public and private data objects including animals, contacts, web pages, events, etc.  Also, the RescueGroups.org HTTP/json API is the only UPDATEABLE rescue/shelter API available.  Our clients and ASPs can build their management systems on top of the RescueGroups.org platform using the updateable API.Please visit our website for detailed information on our APIs and how to get started.", "https://api.rescuegroups.org", "http://support.rescuegroups.org:8091/display/userguide/Integration+Tools")
apis["WebScipio"] = Learning("WebScipio", "The service defines the gene structure implied by a protein sequence within a particular genome. It aides in research projects to define gene sequencing by analyzing a protein sequence and identifying the genes defined, with accommodation for sequencing errors and errors and ambiguously defined genes, even where complete genomes are not fully described. The service provides locations within the genome where the submitted protein sequence could appear, which indicates the genes corresponding to the sequence. API methods support submission of a protein sequence with data about its source within a particular genome. Methods return comprehensive identification of genes defined by the sequence and identifies available genetic profiles for species characterized by the submitted profile and genes.", "http://www.webscipio.org/api_searches", "http://www.webscipio.org/webscipio/web_service")
apis["PizzaRatRestaurantHealth"] = Learning("Pizza-Rat Restaurant Health", "With Pizza-Rat&amp;#039;s Restaurant Health API, users get access to real-time restaurant health department inspection scores and results for over 20 cities worldwide. The API offers a RESTful interface and returns results/scores via XML format.", "http://www.pizza-rat.com/restaurant/", "http://www.pizza-rat.com/howitworks.html")
apis["Radarmatic"] = Learning("Radarmatic", "Radarmatic provides a JSON data feed representing measured precipitation from 200 weather radar stations, both within and outside the continental United States. Radar data come from the U.S. National Oceanic and Atmospheric Administration (NOAA), which aggregates and provides the data either in real time or with only short delays. The service caches the NOAA feeds and generates JSON output.API methods support requests specifying a radar reporting station to retrieve data representing its most recent report of precipitation. Only one station may be specified at a time currently. The JSON output allows creation of images in the browser to recreate conditions detected by the reporting station. Requests can also retrieve data for radar readings previous to the current one.", "http://radarmatic.com/", "http://radarmatic.com/api.html")
apis["WoocationDistance"] = Learning("Woocation Distance", "Woocation gives travelers information about the places they want to visit. The site does this by collecting as much data as it can about a place.The Woocation Distance API allows developers to access and integrate the functionality and data of Woocation Distance. The API provides the distance between any two cities.", "http://woocation.com/api/v1/distances", "http://www.woocation.com/api.html")
apis["Vs30mapserver"] = Learning("Vs30 map server", "Part of The National Seismic Hazard Mapping Project, this USGS map-based service supports online seismic analysis. Uses topographic slope as a proxy for average shear-velocity to estimate predictions of seismic site conditions across a region, including ground-motions following a global earthquake. Helps to predict earthquake hazards for a general location based on local conditions.", "http://earthquake.usgs.gov/hazards/apps/vs30/vs30.php", "http://earthquake.usgs.gov/hazards/apps/vs30/documentation.php")
apis["xenocanto"] = Learning("xeno-canto", "The service provides a database of bird song and sound recordings contributed and maintained by enthusiasts worldwide. It provides access to search the connection and play or download recordings and to submit new recordings. Discussion forums encourage interactions among members of the birding community to exchange information about bird song and related topics.API methods support search against the database by specifying the formal Latin name of a bird species. Returned data provide listings of all recordings maintained by the service for that species, either with or without URLs for audio and still image files, or optionally a request can retrieve a single representative recording. Methods also provide summary statistics about listings relevant to the species named in the request.", "http://www.xeno-canto.org/csv.php", "http://www.xeno-canto.org/feature-view.php?blognr=80")
apis["Philipshue"] = Learning("Philips hue", "hue by Philips is a wireless LED lighting system and lightbulbs that allows users to control and set their lights on the web or via a mobile and tablet application.The Philips hue API allows developers to access and integrate of Philips hue with other applications. Some example API methods include managing lights and light attributes, managing light schedules, and configuring lights and accounts.", "http://&amp;lt;bridge ip address&amp;gt;/api", "http://developers.meethue.com/")
apis["SermonBrowser"] = Learning("Sermon Browser", "The service provides lookup access to texts from the Judeo-Christian Bible from multiple versions and in various languages. Biblical scholars have access to dozens of versions and translations into many language. Other services provide verses from specific versions in particular languages, but this one seeks to span all available options.API methods support submission of requests specifying the passage desired by book name, chapter, and verse number, with options for version (with King James Version in English as the default). Version parameters also specify the desired language. Returned data include text along with the book, chapter, and verse referenced for up to 500 verses per request.", "http://api.preachingcentral.com/bible.php?passage=", "http://www.sermonbrowser.com/forum/sermon-browser-support/xml-bible-web-service-api/")
apis["Kaltura"] = Learning("Kaltura", "Kaltura is an open source online platform for video publishing, management, syndication, and monetization. The associated APIs allow users to access every core service of the platform for customization and integration into a known CMS or custom, in-house application.", "http://corp.kaltura.com/", "http://corp.kaltura.com/Products/Kaltura-API")
apis["GoogleBooks"] = Learning("Google Books", "Use the Google Book Search Data API to get and modify Book Search content via feeds. Submit full-text searches for books and get book information, ratings, and reviews. Optionally get individual users&amp;#039; library collections and public reviews. Submit authenticated requests to create and modify library collections, ratings, labels, reviews, and more.", "https://www.googleapis.com/books/v1", "https://developers.google.com/books/docs/v1/using")
apis["ZoomClouds"] = Learning("ZoomClouds", "From their site: With ZoomClouds you can put in a matter of minutes a tag cloud in your site, based on whichever RSS feed you like.", "http://www.zoomclouds.com/xml/", "http://clouds.zoomblog.com/archivo/2006/02/27/zoomclouds-Api.html")
apis["Memento"] = Learning("Memento", "The service provides API access to the Wayback Machine Internet archive of over 150 billion web pages saved starting in 1996. The Memento protocol allows data-level access to the archive to allow retrieval of website content based on date-time specifications.API methods include TimeGate, which provides access to a site at points in time specified in its own page headers. The Memento API provides access as of a date specified in the request. The TimeMap API provides a download of archived content.", "http://api.wayback.archive.org/", "http://mementoweb.org/depot/native/ia/")
apis["DigitalClassicistGTool"] = Learning("DigitalClassicist G-Tool", "The service accepts Greek character strings and returns transliterated Latin strings. Specified rulesets configure the character translation to account for variations in the location and time period of the source material. API methods accept Unicode character strings in the Greek alphabet along with ruleset designations to control the transformation to be applied and output preference designations. Returned data provide Latin equivalents of the submitted strings, transformed according to the specified rulesets.", "http://pdr.bbaw.de/pdrws/g2l?", "http://wiki.digitalclassicist.org/Greek_to_Latin_Historical_Transliteration_Tool")
apis["Topicalizer"] = Learning("Topicalizer", "Topicalizer is a text analysis and topic extraction tool. Based on methods of computational linguistics it provides various analyses for a given URL or plain text. These comprise, amongst others, language recognition, lexical density, keywords, collocations, word and phrase frequencies, readability and a short abstract. Topicalizer can, for instance, be used for automatically tagging a website or blog entry with semantic information or for retrieving summaries for web pages.", "http://www.topicalizer.com/api/", "http://www.topicalizer.com/api/")
apis["ktailabMobileCountryCode"] = Learning("ktailab Mobile Country Code", "The MCCMNC API returns coarse location based on Mobile Country Code and Mobile Network Code. World wide roaming capable mobile phones (cell phones) can display the mobile country code (MCC) and mobile network code (MNC) on the screen. This API decodes the combination of MCC and MNC, back to name of the country, operator name, capital of the city and capital city location (with latitude and longitude).", "http://ktailab.net/cgi-bin/mccmnc,cgi", "http://ktailab.net/APIs/mccmnc/index.html")
apis["WorldwideLexicon"] = Learning("Worldwide Lexicon", "The service provides an open source platform for translation of text selections into different languages. It merges results from machine translation with submissions from human translators, both professional service providers and program volunteers. The service seeks to build a database of translations for integration with other websites and web applications.API methods support queries against the database to identify passages already logged, then retrieval of either machine or human translations, if they exist. Methods also support review of translation history of a passage and activities of particular participating translators, including other users&amp;#039; comments and scores as well as an option to block input from those sources. The API allows for submission of new translations and related involvement in the community around the service.", "http://www.worldwidelexicon.org/", "http://www.worldwidelexicon.org/api")
apis["Hictu"] = Learning("Hictu", "Hictu is a video microblogging site. It provides an API for retrieving video posts and user profiles, as well as the ability to post text/video messages. The basic API does not require an API Key and is read-only. The Advanced API allows users access to the Hictu platform with write permission. Using this method users can post their thoughts on the home page or share videos.", "http://www.hictu.com/api", "http://www.hictu.com/api.html.php")
apis["UNAVCOSyntheticApertureRadar"] = Learning("UNAVCO Synthetic Aperture Radar", "The service provides access to data from Synthetic Aperture Radar (SAR) technologies operated by a consortium of university-based research programs. Its archive includes images of the Earth&amp;#039;s surface created by radar scans from a satellite platform, which generates detail sufficient to map detail measured in centimeters or even finer units. API methods support searches against the metadata the archive of SAR scans and related resources across a number of interrelated collections. A request retrieves a list of holdings by location and/or with specified parameters such as image resolution, date the scan was generated, and format. Each resource record describes availability status and possible access methods.", "http://facility.unavco.org/SarArchive/", "http://facility.unavco.org/data/sar/sar_api.html")
apis["Rhyming"] = Learning("Rhyming", "An HTML scraper of rhymezone. Users can enter words and rhyming words are returned. Formats range from JSON, XML, and an HTML table. No sign-up requirements or developer keys required. Get the rhyme you are looking for.", "http://www.zachblume.com/apis/rhyme", "http://www.zachblume.com/apis/rhyme")
apis["FizberNeighborhoods"] = Learning("Fizber Neighborhoods", "The Fizber Neighborhoods API lets you embed U.S. neighborhood information by state, county, city or postal code in your web pages. Information such as population and average household size is presented.", "http://www.fizber.com/xml_data/xml_neighborhood_info.xml", "http://www.fizber.com/services/fizber_xml.html#nei_city")
apis["BioCyc"] = Learning("BioCyc", "The service provides aggregated access to almost 2000 databases of organism genome data (formally, Pathway/Genome Databases or PGDBs). Each database describes the genetic makeup and metabolic pathways of one biological organism. The service helps to navigate data, with tools for visualization of data relationships and analysis, both of individual organism data and comparisons among organisms.API methods support description of individual genes, including proteins, pathways, enzymes, reactions, and products generated. In addition to metabolic pathways and other characteristics of individual genes, methods enable the service&amp;#039;s genome browser and metabolic maps relating separate genes.", "http://websvc.biocyc.org/getxml?", "http://ecocyc.org/web-services.shtml")
apis["URLAcecom"] = Learning("URLAce.com", "URLAce.com is a short URL service that can also be used as a random URL selector. You can use the API to generate short URL&amp;#039;s for any URL or group of URL&amp;#039;s.", "http://www.urlace.com/api.php", "http://www.urlace.com/")
apis["IPInfoDBECommerceFraudDetection"] = Learning("IPInfoDB E-Commerce Fraud Detection", "The IPInfoDB E-Commerce Fraud Detection API compares shipping/billing information with IP geolocation data for all countries. For USA and Canada, the API also confirms area code and postal/zip code information. It is very flexible, and parameter weights can be set manually. For example, specify whether, if the IP is in the Spamhaus blacklist, the weight of importance of this factor should remain at #2, or specify whether to keep as #1 importance that the email address provider is a free email service.", "http://ipinfodb.com/fraud_query.php", "http://ipinfodb.com/fraud_detection.php")
apis["AChecker"] = Learning("AChecker", "The service provides analysis and validation of accessibility of web resources for users with disabilities. It can perform an automated review of resources at a specified URL, with a validation report citing accessible elements and issues potentially to be resolved. It can also log resources that require evaluation by a human reviewer, helping to target that effort on appropriate URLs.API methods support submission of a validation request, including the URL to be reviewed and guidelines against which to check the resource. Returned results provide summary counts of resources checked and issues found, along with detail about each issue&amp;#039;s type and location with error message generated and guideline affected.", "http://atutor.ca/achecker/demo/checkacc.php", "http://atutor.ca/achecker/demo/documentation/web_service_api.php")
apis["Dooblet"] = Learning("Dooblet", "Use the Dooblet API to get two alternatives to anything that you submit. Dooblet&amp;#039;s main site allows you to type in something and get an alternative for it. For example, type in car models, software application names, band names, prescription names, companies, and more. Using the API, you might submit iphone, and get back alternatives of blackberry and ipod touch.", "http://dooblet.com/feeds", "http://dooblet.com/feeds/api/_/")
apis["NCBIConservedDomainDatabaseCDD"] = Learning("NCBI Conserved Domain Database (CDD)", "The service provides access to a database of molecular protein building blocks that recur in different combinations as part of organisms&amp;#039; genetic makeup. The search function helps to uncover associations between chemical elements of genetic structures documented in disparate data sources. API methods support selection of databases to search and configuration of conserved domains, as defined by NCBI, to match. Methods allow selection of search modes from basic to advanced, with complex Boolean queries, and filtered results. Methods also allow specification of Entrez-based protein designations in search queries.", "http://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi?", "http://www.ncbi.nlm.nih.gov/Structure/cdd/cdd_help.shtml#BatchRPSBWebAPI")
apis["BountiiPriceSearch"] = Learning("Bountii Price Search", "From their site: Bountii is a search engine that finds pricing information for electronics and appliances. We continuously aggregate pricing information from top internet retailers using a variety of sources. The Bountii API allows developers to query our index and incorporate the results into their applications, widgets, and mashups.", "http://bountii.com/api.php", "https://bountii.com/apidocs.php")
apis["Scholarometer"] = Learning("Scholarometer", "The service provides crowdsourced ratings of impact by scholars on their fields through citation analysis that evaluates how frequently their published papers appear in reference lists of other papers. Rankings rise when a scholar&amp;#039;s work is cited more frequently and by other scholars whose work also is highly ranked. It is available as a browser plug-in, which tracks users&amp;#039; interactions with papers discovered during research in Google Scholar, and as a web service with full API access to all ratings data.API methods support retrieval of a list of authors tracked in the system, or simply the number of authors tracked, with potential to filter by Thomson Reuters Citation Index and by discipline. Methods allow retrieval of ratings data for a particular author or set of authors specified by name or system identifier. Methods also allow retrieval of lists of disciplines tracked and possible overlaps or other relationships between them.", "http://scholarometer.indiana.edu/api/", "http://scholarometer.indiana.edu/data.html")
apis["Relify"] = Learning("Relify", "Relify is a recommendations as a service provider. Relify provides infrastructure and data for developers to integrate recommendation functionality into their applications.The Relify API allows developers to access and integrate the functionality and data of Relify with other applications and to create applications. Some example API methods include creating data and datasets, creating and managing users, and managing account information.", "https://api.relify.com/1", "https://developers.relify.com/index")
apis["durlus"] = Learning("durl.us", "From their site: The durl.us API enables the integration of durl.us url shortening directly into your custom application. The durl.us API provides a simple interface that you can query with results being returned in XML.", "http://durl.us/api/", "http://")
apis["Atlas"] = Learning("Atlas", "Atlas, the global video &amp; audio index, is an open source, open API that gathers and stores metadata and provides a powerful, rich query interface so that you can build cool stuff with content.With a large database of 15+ video and audio sources from US, UK and online TV, Atlas finds the places where you can play content, no matter where that is.", "http://atlas.metabroadcast.com/3.0/", "http://atlas.metabroadcast.com/")
apis["Pownce"] = Learning("Pownce", "Pownce is a social networking platform that lets you keep up friends in interesting ways. Send messages, files, links, and event invitations to the whole pownce community, or to just your friends, or to groups of your friends, or to specific people directly. API v2 released Feb 2008.", "http://api.pownce.com/2.0/", "https://pownce.pbwiki.com/API+Documentation2-0")
apis["GeoNB"] = Learning("GeoNB", "The service from the Canadian province of New Brunswick provides geographic information about its location and surroundings on the eastern coast of the country. It consolidates geographic information resources from the provincial government and other institutional and commercial sources in a single, standards-compliant repository for public access with minimal duplication of data collection and maintenance efforts.API methods support mapping of geographic data in compliance with ArcGIS models.", "http://geonb.snb.ca/ArcGIS/rest/services", "http://www.snb.ca/geonb1/e/dev/dev-corner-E.asp")
apis["KhanAcademy"] = Learning("Khan Academy", "Khan Academy is a non-profit educational organization that provides a free, online education to anyone, anywhere. The site contains over 3,200 online videos covering subjects from finance and physics to math and art. The API gives developers access to nearly all of the data stored on the site categorized by Playlists. Within each playlist, users can discover videos or use the playlists to get information about the exercises for each. The API also returns information about badges awarded via the exercise dashboard. The API methods are split into topics, videos, exercises, badges and user data. The API uses RESTful calls and responses are formatted in JSON.", "http://www.khanacademy.org/api/v1/", "https://github.com/Khan/khan-api/wiki/Khan-Academy-API")
apis["SharedBookshelves"] = Learning("SharedBookshelves", "Book-sharing service for churches. Congregation members can add their books to the site, then anyone can search to find books available to loan to other members. API can be integrated into church websites.", "http://sharedbookshelves.com/api/", "http://sharedbookshelves.com/api/")
apis["Spraci"] = Learning("Spraci", "Nightlife, clubs, gigs, festivals, arts, public events listings for many cities worldwide.", "http://www.spraci.com/services/REST/", "http://www.spraci.com/api/")
apis["Voxe"] = Learning("Voxe", "Voxe builds online tools that aim to contextualize, compare, and debate political platforms. Voxe focuses on the content of political candidateÃ¢ÂÂs proposals and the actual features they make possible. The Voxe API provides a RESTful interface for developers to access and integrate the Voxe data.", "http://voxe.org/api/v1", "http://voxe.org/platform")
apis["Tagatum"] = Learning("Tagatum", "Use the Tagatum API to find associated tags from the blogosphere. Conduct a search to get a list of tags that contain your submitted word. Return tags that are associated with the tag that you pass in. Get a list of the most heavily used tag pairs. The tag repository that you search is one that Tagatum created and updates using spiders to scan all blog posts. It is a simple project intended to create associations among blog post tags and among words and phrases.", "http://api.tagatum.com/rest/", "http://tagatum.com/api/")
apis["NYSenate"] = Learning("NY Senate", "The NY Senate API gives developers and other users direct access to New York state data and. By placing the government data in the public domain, the NY Senate hopes to engage citizens in policy creation and dialogue. Some of the features of the API include access to bills, committees, and more; new data sets continue to be added to the site.", "http://open.nysenate.gov/openleg/api", "http://www.nysenate.gov/open")
apis["BBAWG2L"] = Learning("BBAW G2L", "The service provides text analysis of submitted samples in the Greek language and alphabet with conversion to equivalent expressions in Latin. It allows choice of rulesets governing transliteration and conversion output to accommodate spatial and temporal differences.API methods support submission of a text sample in the Greek alphabet as encoded in Unicode. Requests can also specify rules governing the conversion process, and returned data provide the Greek tokens detected in the sample text and their Latin equivalents.", "http://pdr.bbaw.de/pdrws/g2l?", "http://pdr.bbaw.de/pdrws/g2l?doc=api")
apis["WhatTheTrend"] = Learning("What The Trend?", "Find out what&amp;#039;s trending on Twitter and why. For each trend, What The Trend provides a quick explanation of why it&amp;#039;s trending (these blurbs are edited by users, wiki-style).  You can also see the latest tweets, Flickr photos and news stories.", "http://www.whatthetrend.com/api/", "http://api.whatthetrend.com/")
apis["soundtoys"] = Learning("soundtoys", "The site is intended to provide a meeting point for a growing community of artists and users, and in addition to the exhibition of audio visual projects, the site contains areas for artists interviews, links to resources, and texts by contributing writers where serious issues around interactive arts, audio visual syhthesis, generative art, and a history of interactivity are discussed.", "http://soundtoys.net/api", "http://soundtoys.net/contribute/api")
apis["Mugshot"] = Learning("Mugshot", "The experimental service processes images from uploaded files or URLs and performs simple face detection. It displays coordinates for faces present in the image along with a browser-viewable version of the image with faces highlighted.API methods support either uploading a file or specifying a URL along with a request to the service. Returned data include coordinates of faces within the images and URLs for viewable images with faces highlighted.", "http://mugshotapp.com/{file|url}", "http://mugshotapp.com/")
apis["GeoNetQuake"] = Learning("GeoNet Quake", "The service tracks over 15,000 earthquakes annually in and around New Zealand. It provides location and magnitude within 30 minutes for over 250 significant quakes felt across the region each year. Reporting stations detect events in the southwest Pacific Ocean but do not provide sufficiently accurate readings, so reports are limited to events in or closely adjacent to New Zealand.The API accepts queries stated in QuakeML (a flavor of XML), KML, or GeoJSON format specifying date range, location boundaries specified by latitude and longitude, and magnitude range. It returns matching reports by reporting station, with epicenter location and magnitude data.", "http://magma.geonet.org.nz/services/quake/", "http://www.geonet.org.nz/resources/earthquake/quake-web-services.html")
apis["BibSonomy"] = Learning("BibSonomy", "From their site: BibSonomy is a system for sharing bookmarks and lists of literature. BibSonomy provides a web service using REST. You can use the provided client library, written in Java, to access the API or you can directly interact with the web service if you would like to write a client in a language other than Java.", "http://www.bibsonomy.org/api", "http://www.bibsonomy.org/help/doc/api.html")
apis["Carma"] = Learning("Carma", "From their site: Carbon Monitoring for Action (CARMA) is a massive database containing carbon emissions data of over 50,000 power plants and 4,000 power companies worldwide. CARMA is the first global inventory of a major, emissions-producing sector of the economy.", "http://carma.org/api/1.0/", "http://carma.org/api")
apis["tourist"] = Learning("to.uri.st", "Use the to.uri.st API to access tourist information data from to.uri.st. to.uri.st is about finding those local attractions you never knew existed, we spider the Web for places to go the World over and place them on our map for you to discover. They have a Web spider that fetches data from different tourist information sites around the World. It is an Atom-based HTTP API. All to.uri.st data is free under the Creative Commons Attribution-Share Alike 3.0 License. Read and write data about places to and from the to.uri.st database. The API is based on the Atom Publishing Protocol and Google&amp;#039;s GData specs.", "http://to.uri.st", "http://tourist.wikispaces.com/webapi")
apis["SkyServer"] = Learning("SkyServer", "The service exposes data from the Sloan Digital Sky Survey. Sponsored by the Alfred P. Sloan Foundation, the U.S. National Science Foundation, and NASA, the project gathers data from observatories and other sources to allow creation of a map covering large sections of the universe. The web service gives access to data for over 80 million astronomical objects, such as stars, galaxies, and quasars. Teachers are invited to adapt existing projects for classroom use.Methods support access to photos, animated skyscape images, spectra graphs and data. Support is also provided for searching by radial and rectangular measurements and creating a star chart for a location as well as managing resources created using SkyServer tools.", "http://skyserver.sdss.org/dr1/en/", "http://skyserver.sdss.org/dr1/en/help/docs/api.asp")
apis["OpenRouteService"] = Learning("OpenRouteService", "The API implements a route-finding service for cars, pedestrians, and bicycles based on Open Standards and Open Geodata. Coverage varies depending on data contributed. It also adds several location-aware services created from OpenStreetMap data: Geocoder/Reverse Geocoder, Directory Service, Accessibility Analysis Service, and Emergency Route Service. Please contact the providers prior to using the API. They are interested in spreading the usage of OpenRouteService in academic and non-profit projects.", "http://openrouteservice.org/index.php", "http://wiki.openstreetmap.org/wiki/OpenRouteService#ORS_.22API.22")
apis["CultureGrid"] = Learning("Culture Grid", "Service from the UK Collections Trust to access information about collections of museums, libraries, or archives. Supports services to open up UK cultural institution collections for public benefit such as locating facilities in an area or near a landmark and discovering holdings and other resources offered to visitors.", "http://culturegrid.org.uk/discover/", "http://www.culturegrid.org.uk/use/")
apis["Snapprnet"] = Learning("Snappr.net", "The Snappr.net API allows decoding of 1D and 2D barcodes. In addition you can create 2D Barcodes via REST. Add barcode and 2D code features to your site, app, or service.", "http:// service.snappr.net/encode.php", "http://www.snappr.net/index.php?option=com_content&amp;view=article&amp;id=39&amp;Itemid=80")
apis["Wuala"] = Learning("Wuala", "The Wuala API allows you to store, backup and share your files online. You can also share those files with whomever you choose.", "http://api.wuala.com/", "http://www.wuala.com/en/api")
apis["CDCWonder"] = Learning("CDC Wonder", "WONDER online databases utilize a rich ad-hoc query system for the analysis of public health data. Reports and other query systems are also available. The API allows users to access data in the WONDER online databases via automated queries in XML format over HTTP, for use in their own web pages or widgets. Data sets cover diseases, birth and death statistics, and health demographics such as race and population statistics.", "http://wonder.cdc.gov?request_xml=", "http://wonder.cdc.gov/wonder/help/WONDER-API.html")
apis["Validatornu"] = Learning("Validator.nu", "The service validates html code against a range of standards specified in the request. Options include generic or html5 validation, or validation of the document object model. Input includes an http or https URL or data resource IRI. A range of preset schemas can be specified in the request.API methods support submission of a resource URL to be validated, along with a number of parameters for parser, schema, and Unicode options. Returned data provide references to departures from relevant standards.", "http://validator.nu/", "http://wiki.whatwg.org/wiki/Validator.nu_Web_Service_Interface")
apis["OaklandCrimespotting"] = Learning("Oakland Crimespotting", "The service operates independently of the city of Oakland, Calif., and Oakland Police Department, but it repackages data from the city&amp;#039;s own crime-mapping program, CrimeWatch. It emphasizes location-aware mapping of crime reports by date, type of offense, police precinct, and related details. Its goal is to aid in discovery of crime activity within the areas of specific homes, schools, and workplaces.API methods allow retrieval of crime reports for specified crime types, police beats, and date ranges. Methods return reports with location information -- street address as well as latitude and longitude -- to aid in mapping.Individual crime reports can be downloaded in a variety of formats, suitable for use in spreadsheets, feed readers, and more. All requests are simple HTTP GET, and there is no registration or authentication requirement.", "http://oakland.crimespotting.org/crime-data?", "http://oakland.crimespotting.org/api")
apis["SimpleReverseGeocoding"] = Learning("Simple Reverse Geocoding", "The service determines the placename in Japan specified by location parameters such as latitude and longitude. Place specifications documented include the location&amp;#039;s prefecture, municipality, and &amp;quot;Aza&amp;quot; or section. Only the Japanese language is supported.API methods support specification of a location by latitude and longitude, with an optional radius defining an area around the designated point. Separate radius parameters may be entered for street address and &amp;quot;Aza&amp;quot; (section) designation. Methods return named prefecture, municipality, and local values such as street address, along with Aza.", "http://www.finds.jp/ws/rgeocode.php", "http://www.finds.jp/wsdocs/rgeocode/")
apis["Spore"] = Learning("Spore", "The Spore API gives you access to the database for the game Spore from Maxis and Electronic Arts. Millions of custom content created and shared by the community of players. You can select items made by individual users, grouped by sporecasts or customize your search by other filters.", "http://ll-&amp;lt;digits789&amp;gt;.ea.com/spore/static/&amp;lt;directory&amp;gt;/&amp;lt;digits123&amp;gt;/&amp;lt;digits456&amp;gt;/&amp;lt;digits789&amp;gt;/&amp;lt;id&amp;gt;.&amp;lt;extension&amp;gt;", "http://www.spore.com/comm/developer")
apis["RentRent"] = Learning("RentRent", "Use the RentRent API to return the rentals listed on Craigslist. You can search for rooms, apartments, or houses, and you can provide a parameter so that you only return rooms, versus apartments and houses. Also, you can provide parameters for min and max latitude and longitude, number of bedrooms, and number of bathrooms. You might integrate the data with Google Maps, Yahoo Maps, or Virtual Earth. Rentrent is not associated with Craiglist.org.", "http://www.rentrent.org/RENT/Ads.aspx", "http://rentrentorg.blogspot.com/")
apis["ViewText"] = Learning("ViewText", "The ViewText API allows users to request online article text in JSONP format. ViewText transforms web pages into an easy to read format, cleaned of navigation elements, scripts, and other objects, leaving only text to read. Users give ViewText a URL, and it returns just the page content. ViewText also handles RSS feeds, transforming feeds which contain snippets of content into a new feed containing the full article content. Future releases of ViewText will handle additional formats. ViewText was created to make browsing news articles and blog posts easier on mobile phones.The ViewText API scrapes the page and attempts to remove the design elements so that the content can be viewed in plain text. It uses RESTful calls and responses are formatted in JSONP.", "http://viewtext.org/api/text", "http://viewtext.org/help/api")
apis["KISTI"] = Learning("KISTI", "From their site: This API finds topic-centric experts (such as the names of researchers) and generates their social networks. Developers can use this API to incorporate its search results directly into their web sites or services. KISTI stands for the Korea Institute of Science and Technology Information. Learn more at http://www.ksc.re.kr/eng/index.htm.", "http://isrl.kisti.re.kr:8080/wsearch/search/search.jsp", "http://isrl.kisti.re.kr:8080/wsearch/search/openAPI.jsp")
apis["FeedFlow"] = Learning("FeedFlow", "NOTE: As of January 2007, Feedflow appears to be out of service. From their site: The Updated Feeds API returns an RSS 2.0 list of feeds that have been updated after the given time stamp. If a feed has been updated multiple times, it is only displayed with the most recent time stamp. Each item represents an updated feed. The link element is the URL of the feed&amp;#039;s HTML location. The guid element is the URL of the source feed. The pubDate element is the time the feed was most recently updated.", "http://feedflow.com/api/", "http://feedflow.com/api/")
apis["WeoGeo"] = Learning("WeoGeo", "WeoGeo is a one stop geospatial marketplace containing geographic data in GIS, CAD and raster files. The API is meant to focuses on searching, browsing, ordering and downloading the marketplace&amp;#039;s contents.", "http://market.weogeo.com/", "http://www.weogeo.com/developer_doc/API.html")
apis["Qobuz"] = Learning("Qobuz", "Qobuz is a Paris (France) based online music service providing a high quality (lossless) music store (per track/album download) and a streaming music service (on a subscription basis). Qobuz is the only lossless (FLAC 16-bit / 44.1 kHz) streaming service and also have the largest high resolution 24-bit (up to 192 kHz) music catalogue wich makes it the best online music source in the world. The whole catalogue is today available in France, Belgium, Switzerland and Luxembourg but soon in all Europe and majors countries worldwide.", "http://www.qobuz.com/api.json/0.2", "https://github.com/Qobuz/api-documentation")
apis["Forrst"] = Learning("Forrst", "Forrst is a community for designers and developers to connect and share their work. Users of Forrst can share links, screenshots of their current projects and code to help their fellow developers. The Forrst API provides access to all these types of posts, as well as user information. Applications can authenticate users to retrieve additional information.This API is in beta, with write methods planned soon.", "http://forrst.com/api/v2", "http://forrst.com/api")
apis["BabyNames"] = Learning("Baby Names", "An API for baby name statistics. Find the right baby boy and baby girl name. Gets data on popular baby names in countries in the world. Program for baby names by date and by gender.", "http://www.babynamemap.com/api", "http://developer.github.com/")
apis["Omgili"] = Learning("Omgili", "Omgili is a specialized search engine focused on &amp;quot;many to many&amp;quot; user generated content platforms including forums, discussion groups, mailing lists, answer boards, opinion sites and others. It provides a way to find subjective information. Most technical questions out there have been answered and this service is designed to find those answers. The Omegili API allows developers to build applications that can access the Omegili data collected from discussions across the web.", "http://omgili.com/api", "http://api.buzzilla.com/")
apis["Bandcamp"] = Learning("Bandcamp", "From the website: &amp;quot;With version 1 of the API you can query artists&amp;#039; discographies and get the information you need to write a custom embedded audio player, with metadata such as track credits and lyrics. The API is very simple and straightforward and works in a similar fashion to other web APIs such as Twitter&amp;#039;s and Google&amp;#039;s, so you might already be familiar.&amp;quot; The API features a RESTful interface and returns data in the JSON format.", "http://api.bandcamp.com/api/band/1/", "http://bandcamptech.wordpress.com/2010/05/15/bandcamp-api/")
apis["FAAAirportService"] = Learning("FAA Airport Service", "The service provides reports of known delays and other airport status from the FAA&amp;#039;s Air Traffic Control System Command Center (ATCSCC). It also returns current weather reports from NOAA for the airport. Methods accept an IATA airport code and return a status message, reason for any flight delays, and average length of delays. Return data also includes the current weather forecast for the airport with update time local to that location.", "http://services.faa.gov/airport/status/", "https://explore.data.gov/Transportation/Airport-Status-Web-Service/73wc-weaf")
apis["ArtBeat"] = Learning("ArtBeat", "Use the ArtBeat API to get art and design event information for different areas of NYC or Tokyo. Get events by longitude and latitude, area, media, popularity...", "http://www.nyartbeat.com/", "http://www.nyartbeat.com/resources/doc/api")
apis["MashSpots"] = Learning("MashSpots", "MashSpots.com is a free service for local search. Click on any location on the map to get the four closest spots of the searched item. The Mashspots API lets you integrate into your website to help users search places around your office or company.", "http://www.mashspots.com/api", "http://www.mashspots.com/api.html")
apis["CurrenciesExchangeRates"] = Learning("Currencies Exchange Rates", "The Currencies API provides a single JSON structure that is a matrix containing the exchange rates for all known currencies. It is a read only service.", "http://currencies.dachary.org/currencymatrix.php", "http://currencies.dachary.org/")
apis["DOEGreenEnergy"] = Learning("DOE Green Energy", "The service from the U.S. Department of Energy provides search access to a collection of resources about energy use and conservation. It retrieves listings for a managed collection of resources highlighting key concepts related to energy efficiency and conservation. Its processes emphasize cataloging of resource content and linking of the familiar single-box search interface to a background structure of topics important in the discipline.API methods support mapping of user keyword queries to terms from a controlled vocabulary built around scientific concepts important to green energy research. This so-called &amp;quot;keyword to concept&amp;quot; mapping converts a free-text search to a managed taxonomy, which allows retrieval of results for related terms, broader and narrower terms, and other highly targeted sematic relationships.", "http://www.osti.gov/greenenergy/rdresults", "http://www.osti.gov/greenenergy/about.jsp")
apis["ncRNAfRNAdb"] = Learning("ncRNA fRNAdb", "The service provides search access to a database of functional RNA sequences. It is part of a web portal of bioinformatics tools supporting genetic research specific to functional RNA, it is a comprehensive listing of non-coding RNA sequences. International scientists maintain data for open access within the genetic research community.API methods support submission of a search query to retrieve matches in the database. Methods also support retrieving complete details of individual listings, with output available in several mapping and sequencing formats, in addition to XML.", "http://www.ncrna.org/frnadb/api/search/", "http://www.ncrna.org/frnadb/doc/api_manual")
apis["YoolinkPro"] = Learning("YoolinkPro", "YoolinkPro is a corporate social network. It is a productivity software that fosters collaboration and communication between members of a company. It&amp;#039;s a SaaS solution, which exists in different versions depending on the size of your company. Features include activity stream, directory, groups, profile page, and secured access and data for a corporate environment. YoolinkPro API is designed for developers who wants to interconnect YoolinkPro with their own applications, or create new application relying on their YoolinkPro account.Before starting developing a YoolinkPro third-party application, an administrator of the YoolinkPro account should ask YoolinkPro to enable the YoolinkPro API support for his account.", "http://api.yoolinkpro.com", "http://api.yoolinkpro.com/documentation.html")
apis["Twittervision"] = Learning("Twittervision", "The Twittervision API lets you publish easy ways for people to work with the location-based information available through Twittervision and Twittermap.", "http://api.twittervision.com", "http://twittervision.com/api.html")
apis["CrowdSavings"] = Learning("CrowdSavings", "The CrowdSavings API gives developers access to the flash deal/daily deal site. The API features a RESTful interface and returns data in the JSON and XML formats.", "https://www.crowdsavings.com/api/v1/", "http://www.crowdsavings.com/api/docs/v2")
apis["XavierFinanceExchangeRates"] = Learning("Xavier Finance Exchange Rates", "Use the Xavier Finance Exchange Rates API to get historical exchange rates and graphs for 38 currencies. Some supported currencies are EUR, USD, JPY, CYP, CZK, DKK, EEK, GBP, CAD, and more. Get graphs for the last 1 month, 3 months, 1 year, 5 years, and 10 years.", "http://api.finance.xaviermedia.com", "http://www.xavierforum.com/viewforum.php?f=5&amp;sid=c05e926dcaa199182fbeaff395fa94d1")
apis["VirtuosoSpongerProxy"] = Learning("Virtuoso Sponger Proxy", "The OpenLink Virtuoso Sponger Proxy turns a web resource into RDF, which is useful in Ajax and other apps. This can be done through the service endpoint, essentially just concatenate the service endpoint URI with a resource URI and you will get the RDF.", "http://example.com:8080/proxy/rdf/", "http://docs.openlinksw.com/virtuoso/rdfsparql.html#rdfsparqlprotocolendpoint")
apis["EuropeanAlienSpeciesInformationNetwork"] = Learning("European Alien Species Information Network", "The service from the European Alien Species Information Network (EASIN) catalogs and reports on presence of invasive and non-native species within the European environment. It provides listings of animals and plants transplanted from other regions, such as fish carried into the Mediterranean Sea from other waters by ship traffic. It helps to track and map new and potentially invasive species within Europe.API methods support search against the database for a specific species or for a region, with results in XML with options for mapping. Methods are complaint with standards such as OpenSearch, Open Geospatial Consortium (OGC), and Taxonomic Databases Working Group (TDWG).", "http://alien.jrc.ec.europa.eu/species", "http://easin.jrc.ec.europa.eu/use-easin/web-services")
apis["DCMasterAddressRegistry"] = Learning("DC Master Address Registry", "The service provides a master address registry as well as mapping and geographic information service (GIS) data for the city of Washington, D.C. The registry supports finding or verifying an address throughout the city. Mapping functions locate features based on the Maryland State Plane Coordinate System.API methods support submission of a location as either intersection, block, property lot, or place name. The API returns address and map information to map the location.", "http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx", "http://octo.dc.gov/DC/OCTO/Agency+Support/Development,+Training+and+Support/Develop+Websites+Using+GIS+Web+Services")
apis["OCLCVirtualInternationalAuthorityFile"] = Learning("OCLC Virtual International Authority File", "The Virtual International Authority File is a project from the OCLC Office of Research which brings together authority data on accepted forms of author names and work titles from 16 different authority files in 14 libraries worldwide. The web service provides a way to search and retrieve authority records providing authoritative versions of author names, subject headings, and resource titles in a variety of formats.", "http://www.viaf.org/viaf/", "http://www.oclc.org/developer/services/viaf")
apis["GoodStorm"] = Learning("GoodStorm", "From their site:  We are mashup developers ourselves, so we understand the need for more good APIs. The MeCommerce API is pretty simple at this point: you can query our product catalog to find hundreds of thousands of books, non-DRMed MP3s, CDs, DVDs, and video games. Go do something creative with this data. You can add a link to each product to let your visitors buy whatever they want, and you will receive 50% of the profits. Sign up for MeCommerce then get your developer key and get started. The best part is that developers can use GoodStorm&amp;#039;s purchasing system to allow their visitors to buy or sell any of the products in their mash-ups -- all with GoodStorm&amp;#039;s generous and open profit sharing on every product sold. Developers can set their own prices and decide how much revenue they want to earn. GoodStorm provides the inventory management, shipping, logistics, and billing for all transactions.", "http://api.goodstorm.com/api/v1", "http://mecommerce.goodstorm.com/api/v1/")
apis["TimesURL"] = Learning("TimesURL", "Use the Times URL API to submit a long URL and get a short URL in return. Or use the JSON API to return an array to see if a domain exists in the TimesURL repository and perform other actions.", "http://timesurl.at/api/", "http://timesurl.at/api/")
apis["SlashDB"] = Learning("SlashDB", "SlashDB automatically turns databases into online resource so their content becomes accessible to authorized web, mobile and enterprise applications for reading and writing under standard data formats. Technically speaking, it makes REST APIs out of relational databases.Here are some generic use cases where SlashDB is a good choice:* Data publishing and data exchanges with partners/clients* Instant developer API for an existing database-driven website* Database search and data discovery for data scientists* Enterprise database gateway for web/mobile applications* Enterprise data management and federation (ROA, data virtualization)What will be your use case?SlashDB is currently available for both on-premise and cloud installations. We provide ready-to-use virtual machines (AMI, VMware, VirtualBox etc.), which makes it a snap to get started. Once a VM is launched a user-friendly, web based admin GUI allows to add, remove and reconfigure database services.Pricing is tailored to your business and we have special offers for qualifying startups, non-profits and institutions of higher education.", "http://slashdb.com/db", "http://www.slashdb.com/")
apis["UNOCHAFinancialTrackingSystem"] = Learning("UN OCHA Financial Tracking System", "The service from the United Nations Office for Coordination of Humanitarian Aid provides tools for tracking appeals for aid and flows of financial resources in response. It is part of the UN&amp;#039;s program for prioritizing needs documented by humanitarian workers embedded in communities in need throughout the world. The tracking system accepts appeal documents generated and makes them available to agencies of member states and other partners to consider possible funding. The FTS then records funding provided to meet such needs and its disbursement.API methods support management of lists of aid appeals and projects requesting funding, including status as ongoing or emergency efforts, along with organizatoins and countries both requesting and providing aid. Methods also record both pledges made and funding provided by donor organization, date, amount, and recipient. The API generates data in the format recognized by the International Aid Transparency Initiative (IATI).", "http://fts.unocha.org/api/v1/", "http://fts.unocha.org/api/Files/APIUserdocumentation.htm")
apis["GroopBuy"] = Learning("GroopBuy", "The GroopBuy Local Deals API allows developers to integrate a aggregate feed of local deals from sites like Groupon, LivingSocial and over 80 other deal sites in one place. The API features a RESTful interface and returns data via XML and JSON formats.", "http://api.groopbuy.com/get/cities?format={json,xml}&amp;v=1.0", "http://www.groopbuy.com/more/api")
apis["Diavgeia"] = Learning("Diavgeia", "The open government service from Greece provides access to information about decisions and actions by the Greek national government. It allows search against records of all decisions and decrees by public authorities in that country for compliance with its national Transparency law. Data may be used freely under a CC-BY (Creative Commons - Attribution) license.API methods support retrieval of decisions by department or organization, type, topical tag, date range, or the signing authority that approves the decision. Documentation includes XML-formatted lists of all organizations and operating units, decision types, topic tags, and signing authorities.", "http://opendata.diavgeia.gov.gr/api/", "http://opendata.diavgeia.gov.gr/?lang=en")
apis["Bibleorg"] = Learning("Bible.org", "Bible.org provides users with access to passages of the Bible, along with additional features that allow users to interact. The NET Bible API gives developers access to passages using a simple endpoint and not requiring an account or key.", "http://labs.bible.org/api/xml/verse.php?passage=", "http://labs.bible.org/api_web_service?")
apis["Doculicious"] = Learning("Doculicious", "Doculicious.com is a web service for creating online web forms that output PDF files. The Doculicious API provides users with the tools to query entries saved to their forms, and also submit entries from their programs or web forms. Using the API, users can easily fill in PDF files from their own web forms. The API features interaction with Templates and Data from any programming language and application that can access the internet, including PHP, C#, and Ruby.", "https://api.doculicious.com/", "http://docs.doculicious.com/api")
apis["RealtyBaronAgents"] = Learning("RealtyBaron Agents", "RealtyBaron&amp;#039;s Agents API is a free service that enables websites or mobile apps to quickly offer &amp;#039;find an agent&amp;#039; services to both consumers and professionals with minimal integration and zero administration.", "http://api.realtybaron.com/auction", "http://api.realtybaron.com/auction/")
apis["BarcelonaBicing"] = Learning("Barcelona Bicing", "This application has the task to extract information of a website which doesn&amp;#039;t offer easy extraction data methods, and offer its data in a easy to read method for third party applications. For example, it reads the data of the Bicing stations (a sharing byke service at Barcelona) from its Google Maps powered website, and offer its data in XML, JSON, Serialized Java... The project was born with the task of extract the data from Bicing, but it has grown to do the same for other cities.", "http://rocboronat.net/barcelonabicing/", "http://rocboronat.net/barcelonabicing/")
apis["liftieinfo"] = Learning("liftie.info", "The service provides updated lift status for ski resorts across North America and some in Europe. It aggregates a number of separate data feeds to report on lifts in operation and out of service at selected resorts along with details of lift ticket prices and discounts offered by the resorts. Data feeds from other resorts can be added.API methods support submission of a request specifying a resort name or a U.S. state, Canadian province, or other jurisdiction. Methods return a listing of operating status reported for lifts at the specified resort or for all resorts in the specified location. Data refreshes every 65 seconds.", "http://liftie.info/api/resort/", "https://github.com/code42day/liftie")
apis["SocialEntrepreneur"] = Learning("Social Entrepreneur", "The Social Entrepreneur API is an open database of information about social entrepreneurs who have won fellowships and awards from social enterprise funders. The tool allows users to find social entrepreneurs based on keyword, location, and more.", "http://search.socialentrepreneurapi.org/entrepreneur_beta.json", "http://wiki.socialactions.com/w/page/24592876/Social%20Actions%20API%20-%20About")
apis["Codaset"] = Learning("Codaset", "The Codaset API lets users add Codaset functionality to existing apps, or build apps and mashups that extend the capability of Codaset. Codaset is a project management system for open source and private software projects, built around the Git source control system. With the API users have access to functionality such as managing user accounts, retrieving user data, managing project milestones and more. The API uses RESTful protocol and responses are formatted in either XML or JSON.", "https://api.codaset.com", "http://api.codaset.com")
apis["refbaseOpenSearch"] = Learning("refbase OpenSearch", "The service provides bibliographic search to return citations matching a submitted query. Its architecture complies with the SRU (Search/Retrieve via URL) standard promulgated by the U.S. Library of Congress which uses CQL (Common Query Language) to structure interactions with the service. API methods support submission of a bibliographic search query stated in CQL syntax. The API returns metadata for matching resources in MODS format embedded in a SRU/W XML wrapper.", "https://refbase.ipoe.uni-kiel.de/refs/sru.php", "http://www.refbase.net/index.php/Search/Retrieve_web_services")
apis["Natureservespecies"] = Learning("Natureserve species", "NatureServe Explorer provides data, including images, on over 70,000 of the plant and animal species of the United States and Canada. The Global Comprehensive Species Service provides direct access to this species data in XML format, supporting further analysis.", "https://services.natureserve.org/idd/", "https://services.natureserve.org/TechnicalResources/indexofservices.jsp")
apis["Dropproxy"] = Learning("Dropproxy", "Dropproxy is a file-sharing service that hides a user&amp;#039;s Dropbox ID from a public URL via a proxy so users can safely share files from Dropbox while remaining safe.The Dropproxy API allows developers to access and integrate the functionality of Dropproxy with other applications. The main API methods are posting a file to get a proxy, retrieving a file, and retrieving stats about the file link.", "http://api.dropproxy.com/", "http://dropproxy.com/api-doc")
apis["OpenKeyval"] = Learning("OpenKeyval", "The service provides an open storehouse for key-value data intended to maintain persistent data for use in web applications. Storage accommodates case-sensitive, 5-128 character keys made up of alphanumeric characters, dashes, and underscores. API methods support creation of a record storing a key value linked to a submitted string. Methods also support retrieval of the key for use in an application upon submission of the arbitrary string. The key value can then be updated in the service and the local application, and submissions of the associated persisting string will retrieve the new value.", "http://api.openkeyval.org/", "http://openkeyval.org/")
apis["Xpenser"] = Learning("Xpenser", "Xpenser offers mobile expense tracking and management. The Xpenser API allows users to enter expenses into Xpenser.", "http://xpenser.com/api/simple?r=(report_id)&amp;q=(expense)&amp;format=json", "http://xpenser.com/docs/api/")
apis["USFWSGeospatialService"] = Learning("USFWS Geospatial Service", "The service from the U.S. Fish and Wildlife Service provides geospatial data about U.S. wildlife habitats, including fisheries. It supports integration of data about animal populations and habitats from human observers and remote sensing networks with geographic information systems (GIS), including global positioning system (GPS) references. API methods support ArcGIS format for creating, updating, and distributing geospatial data collected during implementation of the USFWS Operational Plan. Methods give access to data about wildlife with GIS and GPS identifiers to allow mapping of observations and integration with other resource mapping applications. Datasets identify and allow mapping of coastal resources and wetlands, critical habitats inland, ecosystem regions, Landscape Conservation Cooperatives (LCCs) and National Wildlife Refuges, migratory bird movements, and others.", "http://ecos.fws.gov/tat_services/TessQuery?request=schema", "http://www.fws.gov/gis/data/national/index.html")
apis["eduroamURN"] = Learning("eduroam URN", "The service provides a registry of permanently valid resource identifiers for entities within the GÃÂANT infrastructure that serves European educational institutions and affiliated people. For each registered resource, a Uniform Resource Name (URN) is logged in a format resembling an http:// web address. Each URN is associated with an http:// URL where that resource is currently accessed. If the resource must move to a new URL, the registry listing may be updated, allowing the persistent identifier to redirect to an updated location and access the resource. API methods support submission of a request containing a URN with special characters in escaped format. The API returns the current URL associated with that identifier. Methods also support listing all currently registered URNs and their associated URLs.", "https://registry.edugain.org/resolver", "https://registry.edugain.org/eduroam/browser/api.php")
apis["Kiva"] = Learning("Kiva", "The Kiva API gives you access to the world&amp;#039;s first person-to-person micro-lending website, which empowers individuals to lend directly to unique entrepreneurs in the developing world. Kiva is a nonprofit organization.", "http://api.kivaws.org/v1/", "http://build.kiva.org/docs/")
apis["GoogleNotebook"] = Learning("Google Notebook", "NOTE: The Google Notebook service and API are being discontinued as of January 2009. This API allows client applications to view public notebook content in the form of Google data API (&amp;quot;GData&amp;quot;) feeds. Your client application can request a list of notes from a public notebook, request a list of public notebooks owned by a particular user, and query for notes that match particular criteria. Google Notebook feeds are currently read-only and public-only you can&amp;#039;t send data to Notebook using the data API, and you can&amp;#039;t get a feed of private Notebook data.", "http://www.google.com/notebook/feeds/", "http://code.google.com/apis/notebook/docs/2.0/developers_guide.html")
apis["NOAAGOESSEM"] = Learning("NOAA GOES SEM", "The service provides download access to data from the Space Environment Monitory (SEM) service from the National Geophysical Data Center (NGDC) of the U.S. National Atmospheric and Oceanic Administration (NOAA). Available data include lists of locations monitored by the service, metadata about the locations, and actual satellite monitoring data. Applications can import SEM data for further analysis and processing.API methods support retrieval of descriptions of the data structure provided by SEM, including field names, descriptions, data formats, minimum and maximum values, etc. Methods also support retrieval of the monitoring data itself, giving the specific satellite and time-stamped sensor readings. The API gives access to specifications for the locations monitored, as well.", "http://www.ngdc.noaa.gov/goes/sem/", "http://www.ngdc.noaa.gov/goes/sem/")
apis["NewYorkFederalReserveSOMAHoldings"] = Learning("New York Federal Reserve SOMA Holdings", "The service reports on holdings and purchases of U.S. Treasury securities by the New York Federal Reserve Bank as part of its role in implementing U.S. currency supply policy. It provides data updated weekly either for batch download or for real-time access via a web service. Applications can access this authoritative data for selected time periods starting in 2003.API methods support retrieval of either a summary or specific time series data, either monthly or quarterly, for open market holdings by the New York Fed. Methods also allow retrieval of holdings data by type of security.", "http://markets.newyorkfed.org/api/", "http://www.ny.frb.org/markets/soma/sysopen_accholdings.html")
apis["gzaas"] = Learning("gzaas", "Gzaas is a web service that lets users create custom, full screen messages using custom typography. These messages then be associated to links that can be posted anywhere and shared with others.", "http://gzaas.com/api/v1/fonts", "http://gzaas.com/project/api-embed/api-general-overview/")
apis["SocialActions"] = Learning("Social Actions", "Use the Social Actions Open API to search the SocialActions.com database of volunteer and philanthropy opportunities, called social actions, useful for those interested in peer-to-peer social change. The database aggregates the opportunities of over 20 organizations, and the results include the title, description, location, action type, and source URL of the opportunity. Some of the organizations that are aggregated are Democracy in Action, MicroGiving, VolunteerMatch, and Helpalot. You can narrow your request by any of the following action types: Group Fundraiser, Campaign, Pledged action, Event, Affinity group, Volunteer, Micro-credit loan, or Petition.", "http://mashup.socialactions.com/actions.json", "http://wiki.socialactions.com/w/page/24592876/Social%20Actions%20API%20-%20About")
apis["SPOTSharedPage"] = Learning("SPOT Shared Page", "The service provides capabilities to upload one-way messaging from remote locations to a feed accessible by others. It transfers message data via satellites of the global positioning system (GPS) to allow hikers and others in remote terrain to report progress and emergency situations to those monitoring the service from distant locations. Messages post to an established feed for access in varying amounts and timeframes suited to specific monitoring needs.API methods support retrieval of the latest message in a specified feed or all messages uploaded over a specified date range. For more comprehensive access, the API gives access to the most recent 50 messages or the entire feed in pages of 50 messages.", "https://api.findmespot.com/spot-main-web/consumer/rest-api/2.0/public/feed/", "http://faq.findmespot.com/index.php?action=showEntry&amp;data=69")
apis["APIOMAT"] = Learning("API O MAT", "apiOmat is a backend-as-a-service (BAAS) provider. API O MAT offers various features such as chat, email clients, Facebook connections, content push, and WordPress syncing. The apiOmat API allows developers to access and integrate the backend functionality of apiOmat with other applications and to create new applications. The documentation offers some tutorials and quickstart guides. API access comes with account service.", "https://apiomat.org/yambas/rest/apps/&amp;lt;APPNAME&amp;gt;", "http://apiomat.org/apidocs/index.html")
apis["EdisonAveGeocoder"] = Learning("EdisonAve Geocoder", "Provides both forward and reverse geocoding on a per-use cost. The service turns a latitude/longitude pair into a meaningful address or place name. An address or name can also be turned into coordinates.", "http://geocodeservice.edisonave.net/api/", "http://geocodeservice.edisonave.net/")
apis["takeio"] = Learning("take.io", "The service provides a platform for interacting with mobile devices to provide videos and other entertainment content, SMS text messaging and &amp;#039;enterprise messaging,&amp;#039; and other services. It aims to provide middleware to facilitate contacts with devices by a range of services meeting many different needs.API methods support single sign-on (SSO), core device interaction, service billing, SMS and other messaging, and administrative reports for service users. Methods identify specific resources required for a particular communication or other interaction to smooth the connection between content and users.", "https://api.take.io/rest/1.0/", "http://developer.take.io/")
apis["MnGeoGeospatialImage"] = Learning("MnGeo Geospatial Image", "The service provides a repository of aerial photos and  topographic maps of terrain within the U.S. state of Minnesota. Photographs are taken from aircraft to capture surface features, and topographical maps are scanned from authoritative printed versions. The Web Map Service (WMS) stores and provides access to  very large image files, saving the need to download and save local copies. API methods support access to digital orthophotography and hillshade images as well as scanned USGS quadrangle topographic maps for locations in Minnesota specified by latitude and longitude or UTM zone. Returned data compliant with WMS protocols provide links to image files in jpeg and png formats.", "http://geoint.lmic.state.mn.us/cgi-bin/wms?", "http://www.mngeo.state.mn.us/chouse/wms/wms_image_server_specs.html")
apis["SoftModalDiesel"] = Learning("SoftModal Diesel", "The service republishes reports from the U.S. Department of Energy documenting retail prices for diesel fuel in a machine-readable format. DOE makes its weekly survey results for on-highway fuel prices available for bulk download but does not expose the data for application access. This service fills that gap to support planning for transportation fleet operations.API methods support requests by date (defaulting to the current date) and region. It returns DOE&amp;#039;s reported average price for survey results matching the request parameters.", "http://doe.softmodal.com/", "http://softmodal.com/diesel.html")
apis["Uminime"] = Learning("Umini.me", "The service converts long URL strings to short, manageable &amp;quot;linklets&amp;quot; that redirect to the original URLs when accessed by users. The linklets are intended to be easy to remember and post to social media and other environments for online interaction, while still retaining functionality to reach web resources with unwieldy identifiers.API methods support submission of a long URL as a URL variable and return the shortened version generated by the service in plain text. Methods also support submission of a URL generated by the service and return the associated long URL to allow redirection to the original web page.", "http://umini.me/api/", "http://umini.me/#api")
apis["delicious"] = Learning("del.icio.us", "From their site: del.icio.us is a social bookmarking website -- the primary use of del.icio.us is to store your bookmarks online, which allows you to access the same bookmarks from any computer and add bookmarks from anywhere, too. On del.icio.us, you can use tags to organize and remember your bookmarks, which is a much more flexible system than folders. The API provides read/write access to Delicious bookmarks and tags via an HTTP-based interface. The RESTful API returns responses in XML.", "https://api.del.icio.us/v1/", "https://delicious.com/developers#title1")
apis["YahooLive"] = Learning("Yahoo Live", "Obtain live video streams and show them in your app. Access the streaming servers to locate those broadcasting on Yahoo! Live, and see data about the streams, such as the broadcaster and viewers. Those with webcams can be part of the broadcast as coviewers, so you can programmatically access coviewer data, too.", "http://api.live.yahoo.com/api/v1", "http://developer.yahoo.com/ylive/")
apis["Flickr"] = Learning("Flickr", "The Flickr API can be used to retrieve photos from the Flickr photo sharing service using a variety of feeds - public photos and videos, favorites, friends, group pools, discussions, and more. The API can also be used to upload photos and video.The Flickr API supports many protocols including REST, SOAP, XML-RPC. Responses can be formatted in XML, XML-RPC, JSON and PHP. Documentation is included for 14 API Kit libraries.", "http://api.flickr.com/services/rest/", "http://www.flickr.com/services/api/")
apis["RapleafPersonalization"] = Learning("Rapleaf Personalization", "Developers can use the Personalization API to recommend more relevant content, make emails more personal and learn about loyal users. Query with an email address using the simple, RESTful interface. The Personalization API is used to retrieve information about a person, identified by email hash or postal address.", "https://personalize.rlcdn.com/v4", "https://www.rapleaf.com/developers/personalization-api/")
apis["RoyBoyDeals"] = Learning("RoyBoyDeals", "The service provides information local price discounts, coupons, and other deals offered by sellers in a particular city. Each day for each location where it offers service, it reports an offer sponsored by a restaurant, bar, or other business. Contact the provider to determine where the service is active.API methods support submitting a query specifying a city or other location as latitude and longitude along with the desired data format, either XML or JSON. Methods return a single offer with the sponsor&amp;#039;s ID value and URL along with a URL for the service itself that provides basic information. Returned data specify the product offered, price and other terms, start and end dates for the special offer, etc.", "http://royboydeals.com/{city}/deals.{format}", "http://royboydeals.com/page/api-instructions")
apis["CNET"] = Learning("CNET", "From their site: this service will make a wealth of data available to the mash-up community in the creation of rich consumer sites. The initial dataset will include the full CNET catalog of technology products and software titles. This is the same dataset that drives the highly trafficked sites of CNET Reviews, Shopper.com and Download.com. Over time, the API will add news articles, community content, blog posts and full product reviews. The API is designed for easy data discovery and integration. The interface is REST-based, supporting both XML and JSON response formats. It has undergone extensive performance optimization, in order to ensure rapid response times. To simplify query creation, a tool called the Dashboard is available that allows the user to interactively select data sets to include in the response stream.", "http://api.cnet.com/restApi/v1.0", "http://developer.cnet.com/")
apis["Boobox"] = Learning("Boo-box", "From their site: Use this public API and use our wonderful product recommendation services to make your own recommendation application. Advantages: we give better results; you can use boo-box API to do a search even on an e-commerce that does not have a public API; we have a powerful cache system, which makes searches quicker; you can show boo-box&amp;#039;s recommendation with whichever look you like; it will return a very slim XML code, quicker to load and read.", "http://boo-box.com/api/", "https://blog.boo-box.com/en/2007/now-we-have-an-api/")
apis["0Trippin039in"] = Learning("3.0 Trippin&#039; in", "Trippin&amp;#039;in is like Nielsen for places.They disrupt the Travel and local market by offering a new method for local recommendations, replacing the known &amp;quot;review-based&amp;quot; method offered by companies like Tripadvisor and Yelp.By measuring social interaction (such as Likes, Check-ins, and Tweets) between people and places (like restaurants, nightclubs, or bars) their algorithm can determine how popular (or crowded) those places will be, for any hour of any day.", "http://api.v1.trippinin.com", "http://www.trippinin.com/")
apis["BiosemanticsJANE"] = Learning("Biosemantics JANE", "The service queries a repository of scholarly journals and author names across biological sciences to identify those related to a particular topic or text sample. In response to a title, abstract, name, or subject keyword, the service looks for matches across records in the Medline database. It is intended to suggest likely publishing venues for articles on a particular topic as well as authors to follow and specific articles to review.API methods support submission of a query terms, including names, keywords, and text selections. Requests can limit returned records to journal names, author names, or published papers, if desired.", "http://biosemantics.org/jane/index.php?", "http://www.biosemantics.org/jane/JANE%20API%20description.pdf")
apis["ThinkFree"] = Learning("ThinkFree", "From their site: Use the Viewer API (available now), Editor API (in closed beta), and Converter API (in closed beta). You will be able to add, to your website or blog, all the MS Office document view, edit and conversion functionalities available on ThinkFree online: Write (for word processing documents), Calc (for spreadsheets), and Show (for presentations).", "http://viewer.thinkfree.com", "http://product.thinkfree.com/serverint")
apis["HelloSocial"] = Learning("Hello Social", "Hello Social is a social promotion and engagement platform that lets brands and companies engage and interact with their customers and potential customers with social promotions and contests.The Hello Social API allows developers to access and integrate the functionality of Hello Social with other applications and to create new applications. Some example API methods include managing promotions, creating promotions, and managing account information.", "https://api.hellosocial.com/v1", "http://developers.hellosocial.com/")
apis["Cleanify"] = Learning("Cleanify", "Translates the somewhat cryptic Spotify URLs (HTTP or regular) into clean, readable links. It features a REST Protocol and can be easily integrated into web sites or applications.", "http://cleanify.net/Api/Rewrite", "http://cleanify.net/api")
apis["DDBCAuthorityDatabase"] = Learning("DDBC Authority Database", "The service provides listings of authoritative forms for names of prominent people, places, and events along with dates from Buddhist history and doctrine. The underlying database of authority records can be accessed via javascript as a pop-up application providing authoritative data linked to a person, place, or event name in text. Authority data may also be retrieved via a REST web service API.API methods support submitting an entity identifier to retrieve the correct name, properly formatted, for that person, place, or event. Methods also provide authoritative dates for event entities.", "http://authority.ddbc.edu.tw/webwidget/getAuthorityData.php", "http://authority.ddbc.edu.tw/docs/services/")
apis["BotScout"] = Learning("BotScout", "BotScout is a service that helps fight automated web scripts, also known as &amp;quot;bots&amp;quot;. It tracks the names, IPs, and email addresses that bots use and then logs them for future comparison. BotScout API can be used to test forms when they&amp;#039;re submitted on your site. To call more than 20 queries per day, you need to sign up for a free account/API key.", "http://botscout.com", "http://botscout.com/api.htm")
apis["GeoDataDemographics"] = Learning("GeoData Demographics", "The service helps marketers target customers by providing demographic data for a location specified by address or latitude and longitude. Geographic information about the location and lifestyle data about its inhabitants provide relevant input for marketing decisions. Other applications include matching login credentials to location to improve security and informing customers of nearby product dealers.API methods support specification of a location by longitude and latitude or by ZIP code or specification of an IP address. The request can also specify filters for customer age groups and preference for output elements and format. Returned data include population breakdown by race, age, and household income category. Additional data about the location include business activity, terrain features, and crime statistics.", "https://azure.geodataservice.net/GeoDataService.svc/GetUSDemographics?", "http://geodataservice.net/demographicsapi.aspx")
apis["FAAObstructionEvaluation"] = Learning("FAA Obstruction Evaluation", "The Obstruction Evaluation and Airport Airspace Analysis service from the U.S. Federal Aviation Administration describes and locates hazards to navigation around airports. Users can retrieve reports of structures that might obstruct aeronautic navigation and also submit reports of new construction adjacent to airport airspace. The service tracks both on-airport structures and off-airport construction with potential to impede air traffic.API methods give access to public information about cases for individual construction projects by type, date, region, and state. Information about &amp;#039;circularized&amp;#039; cases submitted for public comment is also freely available. Authentication is required for methods to retrieve &amp;#039;boxed&amp;#039; search results and NOTAMs (notices to airmen).", "https://oeaaa.faa.gov/oeaaa/services/", "https://oeaaa.faa.gov/oeaaa/external/portal.jsp")
apis["TwitterCounter"] = Learning("TwitterCounter", "Use the TwitterCounter API to retrieve all data stored in TwitterCounter for a particular Twitter username. TwitterCounter keeps stats about Twitter users, such as the most popular, top 10 lists, and so on. The API results include a user&amp;#039;s avatar, number of followers, average follower growth, projected follower growth, followers two weeks ago, followers yesterday, and more.", "http://twittercounter.com/api/", "http://twittercounter.com/pages/api")
apis["CatalogWS"] = Learning("CatalogWS", "From their site: CatalogWS is a Web API for dynamically querying information from the NCSU Libraries Catalog (North Carolina State University). This API supports a variety of applications that repurpose catalog data outside of the native catalog interface.", "http://www.lib.ncsu.edu/catalogws/?service=", "http://www.lib.ncsu.edu/repository/scholpubs/ws/wsinfo.php")
apis["Mimvi"] = Learning("Mimvi", "From the site: &amp;quot;Mimvi is completely committed to open and close collaboration with all developersÃ¯Â¿Â½large and smallÃ¯Â¿Â½across the board. Our goal is to ensure your efforts are rewarded; your app reaches the right user at the right time; enabling you to focus your efforts on what really mattersÃ¯Â¿Â½developing apps.&amp;quot; The API offers access to a mobile app search engine, featuring a RESTful protocol and returning data via the XML format.", "http://mimvi.com/search/?format=xml", "http://corp.mimvi.com/developers/")
apis["shortr"] = Learning("shortr", "Shortr is a URL shortening service. The API allows developers to create custom or random urls via a simple HTTP GET request. Useful with services like Twitter.", "http://shortr.info/make-shortr.php/", "http://shortr.info/api.php")
apis["TwTube"] = Learning("TwTube", "TwTube is a URL shortening service for YouTube videos. The API features a simple RESTful interface. Can be useful for sharing videos on services like Twitter.", "http://twtu.be/?", "http://twtu.be/dev")
apis["BBC"] = Learning("BBC", "The updated service is intended to provide a persistent web presence for all BBC programs, both radio and television, in compliance with principles of linked data. A complete ontology defines relationships among programs and their web properties. Also available is a comprehensive schedule, program listings by genre, and program details, including episode breakdowns.API methods support retrieval of schedule information for specific dates or as an offset from the current date. Methods also provide program lists grouped by genre and program details, including cast, episode lists, and more.The former version of the service at http://www0.rdthdo.bbc.co.uk/services/api is being deprecated.", "http://www.bbc.co.uk/", "http://www.bbc.co.uk/programmes/developers")
apis["TellThemWhatYouThink"] = Learning("Tell Them What You Think", "Search all current UK government consultations for words and phrases. Set up alerts via email or RSS to tell you when consultations of interest are published. Government consultations are documents published by the government which ask for people or groups to tell them what they think about a particular topic.", "http://data.tellthemwhatyouthink.org/api/", "http://tellthemwhatyouthink.org/api/")
apis["HelpSpot"] = Learning("HelpSpot", "HelpSpot is a comprehensive Web-Based Help Desk Software. Email, web, phoneÃ¯Â¿Â½however customers reach you, HelpSpot can centralize and effectively manage your support. HelpSpot web services API provides access to nearly all data stored within the system, HTTP-based returning XML/JSON/PHP for easy access from nearly every programming language. This API can be used to programmatically create requests, view queues from other applications, access forums and knowledge book content, embed your help desk directly into your web site/software, or even create an entire new help desk interface.", "http://{hosted_domain}/api/index.php", "https://www.helpspot.com/helpdesk/index.php?pg=kb.book&amp;id=6")
apis["SeatGeek"] = Learning("SeatGeek", "SeatGeek is a ticket search site that aggregates sports, concert, and theater ticket listings from Stubhub, ebay, TicketsNow, and many more. The site displays this information in addition to interactive seating charts to allow for easy assessment of ticket quality. The companyÃ¢ÂÂs Deal Score technology is used to identify which tickets for an event are the best bargains. It uses proprietary algorithms to forecast how ticket prices will move over time, enabling users to buy when prices are lowest. The SeatGeek API provides developers with access to the companyÃ¢ÂÂs dataset of live events. The RESTful API returns requests in JSON, JSONP, and XML and can provide detailed information on venue lat/lon, average ticket price, seating location, and more. SeatGeek has a community portal that keeps a record of all support conversations and is a useful tool when looking to get questions answered. With the addition of the SeatGeek Partner Program a site can earn money every time a user from that site buys tickets. Each time a partner sends a referral to SeatGeek and they purchase a ticket, SeatGeek will pay their partner 50% of the revenue earned on that transaction. Currently users are averaging $11 per sale generated.", "http://api.seatgeek.com", "http://platform.seatgeek.com/")
apis["OCLCMapFAST"] = Learning("OCLC MapFAST", "The service provides place names for geographic locations as specified in the Faceted Application of Subject Terminology (FAST) list of subject headings. That list adapts the authoritative subject headings from the U.S. Library of Congress (LCSH) for simplified application of complex rules. The streamlined structure allows rigorous application of standard terminology across large volumes of materials within manageable workflows. The service applies a subset of those terms identifying places by standard names based on location coordinates.API methods accept one or more locations based on latitude and longitude plus a radius specifying the size of the region of interest. The API returns the applicable term(s) from the FAST list.", "http://experimental.worldcat.org/mapfast/services", "http://www.oclc.org/developer/services/MapFAST")
apis["NorwegianMeteorologicalInstitute"] = Learning("Norwegian Meteorological Institute", "The service provides application-level access to weather data from the Norwegian Meteorological Institute related to both civil and military activities. It excludes access to some data provided by organizations other than the institute itself, as noted in product-specific documentation. The service provides forecasts and reports of observed conditions in either Norwegian or English, weather map images, and related information such as reports of volcanic activity and sunset/sunrise times.API methods support retrieval of both text and audio forecasts by area within Norway, observation station reports, and supporting imagery such as maps and some satellite and radar images. Methods also provide reports of winds, tides, volcanic activity, UV index, and other ancillary information.", "http://api.met.no/weatherapi/", "http://api.met.no/#english")
apis["Geni"] = Learning("Geni", "Geni is a website centered around genealogy. Users can create their family tree, and invite relatives to help. The Geni API provides the API users with access to Geni&amp;#039;s data. If the data is public, no API key is required to access it. Only private data requires authentication to access. Data is returned in JSON or XML format.", "https://www.geni.com/api/", "http://www.geni.com/projects/The-Geni-API/1124")
apis["AlamedaCountyServiceProvider"] = Learning("Alameda County Service Provider", "Listings for over 400 social service providers in Alameda County (Oakland), California. This dataset was collated and quality checked over several months in 2010 and is a very comprehensive listing of social service providers in our county with rich details including service eligibility, opening hours, accessibility and more. API returns service organizations in specified categories. Service provider locations may contain duplicates since most locations provide multiple services across several categories.", "http://rest.infoalamedacounty.org/index.php/api/reentry/servicegroup", "http://www.infoalamedacounty.org/index.php/Data/Data-Portal/Data-Feeds-APIs/Service-Provider-API-Reentry-Focus.html")
apis["AchievementStandardsNetwork"] = Learning("Achievement Standards Network", "The service provides listings of educational standards by topic, instructional level, and school agency or other jurisdiction setting the standards. Hierarchically organized listings define specific learning outcome statements expected for learners at varying levels of education. Consistent formatting allows interconnection of educational standards from different jurisdictions and providers, allowing for consistent description of achievement levels across instructional settings.API methods support requests specifying a topic and educational level. Methods return XML metadata describing matching standards logged in the system, including standard identifier, name, text statement, and source jurisdiction. Returned data can be filtered further to match particular needs.", "http://asn.jesandco.org/api/1/", "http://asn.jesandco.org/content/asn-web-services-overview")
apis["BigStock"] = Learning("BigStock", "The Bigstock API allows users to tap into 11 million photos housed by BIgstock.com. Users can then offer print on demand services to customers, integrate images into facebook applications, or use it for website construction. Images are available in a variety of sizes and are priced accordingly. The API is available in REST and JavaScript and returns data in JSON.", "http://api.bigstockphoto.com/2/", "https://www.bigstockphoto.com/partners/")
apis["OpenNorthRepresent"] = Learning("Open North Represent", "Open North is a service that allows users to enter a Canadian address or postal code to find their elected representatives. The Open North Represent API provides REST-based access to a wealth of information about Canadian elected officials and electoral districts. It includes all Members of Parliament, all members of provincial legislatures, and municipal elected officials for 39% of the Canadian population.", "http://represent.opennorth.ca", "http://represent.opennorth.ca/api/")
apis["MnGeoCompositeImage"] = Learning("MnGeo Composite Image", "The service provides aerial and satellite photos depicting terrain within the U.S. state of Minnesota. It works through a single access point that automatically provides appropriate photos taken from aircraft or by earth-orbiting satellites, depending on the space covered in the request and the resolution or level of detail requested. Images are available for locations across the state, with emphasis on the Twin Cities of Minneapolis-St. Paul. Some images are available of terrain bordering Minnesota, especially counties in Wisconsin near the Twin Cities. Images are used, for example, in the Interactive Twin Cities Transit Map from Metro Transit.API methods support access to imagery from the 7-country Twin Cities metro area and 4 counties to its north, 37 counties across Minnesota and near its eastern border, and areas within Canada along the state&amp;#039;s northern border. Resolutions vary from 1:10,000 aerial photographs to FSA NAIP satellite photos up to 1:250,000 to even larger scale Landsat photos.", "http://geoint.lmic.state.mn.us/cgi-bin/mncomp?", "http://www.mngeo.state.mn.us/chouse/wms/composite_image.html")
apis["GoogeRefineReconciliationService"] = Learning("Googe Refine ReconciliationService", "The service returns potential matches within a dataset for a specified name or label text. The match may be approximate so it helps to link ambiguous text strings to well-defined records or data entities. The service, based on the Freebase relevance service, functions as part of the Google Refine platform for data analysis and clean-up.API methods support submission of a query term, with limits on the number of results returned, the types of entities included in the result set, and technical details. Returned data include records from a dataset loosely matched to the submitted query string.", "http://standard-reconcile.freebaseapps.com/reconcile?query=", "http://code.google.com/p/google-refine/wiki/ReconciliationServiceApi")
apis["NOAAERDDAP"] = Learning("NOAA ERDDAP", "This data service provides a combined interface to access and download scientific datasets and subsets on oceanography in common file formats. Typical uses involve charting and mapping. ERDDAP presents a single format for accessing multiple repositories, which the service reformats to interact with the remote server hosting the desired data.API methods support retrieving a list of available resource URLs, resource categories, and datasets, as well as metadata describing those resources. Methods also allow both full-text and advanced search against the datasets.", "http://coastwatch.pfeg.noaa.gov/erddap/search/", "http://coastwatch.pfeg.noaa.gov/erddap/rest.html")
apis["OpenMenu"] = Learning("OpenMenu", "OpenMenu helps restaurants store and share their menus over the Internet by standardizing the menus&amp;#039; structure and format. This information is stored in a single, centralized database which is freely accessible and searchable by both API developers and the public. OpenMenu allows a restaurant to maintain and update a single menu which can then be accessed from  a variety of other sites such as Facebook or Wordpress.", "http://openmenu.com/", "http://openmenu.org/api/")
apis["Litmus"] = Learning("Litmus", "NOTE: registration required to view the api.From their site: Litmus shows you precisely how your designs will be seen by your customers. See screenshots of your web pages in dozens of different browsers within seconds. Web page testing, email testing, and bug tracking lets you see exactly where the compatibility issues are. We deliver screenshots of your web sites and email newsletters in seconds across all popular platforms. Use the full API for both our email and web site testing services.", "https://api.litmusapp.com", "http://litmus.com/api")
apis["SOCH"] = Learning("SOCH", "The service aggregates databases of cultural resources in Sweden, such as museums and objects in their collections, monuments, historical sites, and similar items important to Swedish culture. Applications can access the database to create directories for specific areas or of specific types of cultural resources. The database collection is suitable for applications serving both the general public and cultural researchers.API methods support free-text search or search for a specific object or place. Location can be specified as a particular point on the map or a bounded region. Object-specific search can limit results to particular types of cultural resources, and a time-period parameter can be specified.", "http://kulturarvsdata.se/ksamsok/api?method=", "http://www.ksamsok.se/in-english/api/#sochapi")
apis["RadMap"] = Learning("RadMap", "The service provides a mapped image for U.S. weather conditions as detected by NEXRAD weather radar stations. Also available are GOES imagery created by geostationary weather satellites for inclusion in GIS output, local storm reports, and warnings and watches issued by county authorities.API methods support submission of a query with URL parameters that specify location, desired image size, and technical specifications for radar data to be selected. Returned data provide a link to a PNG image showing the most recently recorded radar results illustrated as storm cells, cloud cover, and related weather phenomena. Methods allow specification of location by named places according to the list in the 2010 U.S. Census.", "http://mesonet.agron.iastate.edu/GIS/radmap.php?", "http://mesonet.agron.iastate.edu/GIS/radmap_api.phtml")
apis["ChroniclingAmerica"] = Learning("Chronicling America", "Chronicling America from the US Library of Congress, provides access to information about historic newspapers and select digitized newspaper pages. The site allows you to search and view newspaper pages from 1880-1922 and find information about American newspapers published between 1690-present. To encourage a wide range of potential uses, we designed several different views of the data we provide, all of which are publicly visible. You do not need an API key to use them.", "http://chroniclingamerica.loc.gov/", "http://chroniclingamerica.loc.gov/about/api/")
apis["CloudHarmony"] = Learning("CloudHarmony", "The service provides updated information about availability, network outages, and data transfer speeds for various cloud hosting platforms. Performance reporting can be specified by time period, type of service, specific service provider, and other criteria. It can provide benchmarks reflecting all monitored services for comparison and ratings of competing services.API methods support retrieval of performance data for a cloud hosting service, including availability statistics, current outages, and data speeds. Methods also provide benchmarks for performance measures and ratings of services against benchmarks. The API also will list providers monitored by category: database, hosting, storage, messaging, DNS resolution, etc.", "http://api.cloudharmony.com/", "http://api.cloudharmony.com/")
apis["ALTERReflective"] = Learning("ALTER Reflective", "The service provides conversion of DNA and protein alignment sequences from biological research to express the same information in alternative notation and as input for a different analytical software package. Input and output formats supported include ALN, FASTA, GDE, MSF, NEXUS, PHYLIP, and PIR. Analytical packages supported include Clustal, Mafft, Tcoffee, Muscle, and Probcons. The service can also de-dupe results to remove multiple identical repetitions from results.API methods support description of input data files, including operating system, analytical software, and data formatting, along with the same parameters for desired output. Methods allow selection of conversion options such as treatment of duplicate and error results. The API returns data converted from the input data expressed for the desired output format.", "http://sing.ei.uvigo.es/ALTER/api/convert", "http://sing.ei.uvigo.es/jarvest/")
apis["YesBroadcastDB"] = Learning("Yes Broadcast DB", "YES.com has a real-time database of most US Radio station now-playing music information, including logs, charts, artist, song, and genre information.  This simple API opens up direct access to the data for anyone.", "http://api.yes.com/{version}/{call}?{parameters}", "http://api.yes.com")
apis["SplogSpot"] = Learning("SplogSpot", "From their site: The SplogSpot API enables you to integrate the power of SplogSpot database into your custom application. It provides a simple interface that you can query, results being returned in the XML format.", "http://splogspot.com/api", "http://splogspot.com/pages/api_help")
apis["LanguageTool"] = Learning("LanguageTool", "The LanguageTool is an open-source project that proofreads and checks text for spelling, style, and grammar mistakes in a variety of languages. The tool can be used online or downloaded for other use.The LanguageTool API allows developers to access and integrate the functionality of LanguageTool with other applications. The main API method is checking text for spelling, grammar, and style mistakes.", "https://languagetool.org:8081/?language=en-US&amp;text=my+texd", "http://www.languagetool.org/http-api/")
apis["AustralianBureauofMeteorology"] = Learning("Australian Bureau of Meteorology", "The service from Australia&amp;#039;s Bureau of Meteorology provides real-time weather forecasts and observation reports. Data provide national summaries and local reports of temperature, precipitation, wind, barometric pressure, and significant weather events across Australia. The service can also provide text forecasts and warnings for Victoria, Tasmania, New South Wales and Australian Capital Territory. UV index and agricultural reports are available, as well.", "http://www.bom.gov.au/fwo/", "http://www.bom.gov.au/catalogue/data-feeds.shtml")
apis["NavlostNWXWeather"] = Learning("Navlost NWX Weather", "The service consolidates global weather information from multiple sources for standardized access via a single XML interface. Applications can retrieve current weather forecast information for most locations in the world via an adaptation of the Global Forecast System numeric weather model. Created to meet needs of flight planning, the service also supports forecasting needs for land transportation, agriculture, and other applications.API methods return current temperature, winds aloft, and other general weather information for a specified location, along with forecasted weather conditions and charts. Methods also provide descriptions of terrain and altitude, as well as archives of past weather conditions for a given time and location.", "http://navlost.eu/aero/nwx", "http://www.navlost.eu/nwxs/doc/desc")
apis["ChemSpider"] = Learning("ChemSpider", "The ChemSpider API is a free chemical structure database that provides access to over 25 million structures, properties and associated information. This API enables researchers to access information from more than 400 data sources with a single search. Users can search for chemicals by name, structure, properties, or elemental components.", "http://www.chemspider.com/Search.asmx", "http://www.chemspider.com/AboutServices.aspx?")
apis["AflaMD"] = Learning("Afla.MD", "The service provides current reports from schools and educational institutions in the former Soviet republic of Moldova. It exposes lists and details of Moldovan educational institutions, accessible by name or geographic region, and provides performance scores based on data provided by the institutions. The service is intended to encourage review, awareness, and scrutiny of activities in schools within the country.API methods support listing of schools and institutions by educational level and geographic location. For each institution, methods support access to details about infrastructure, language, student population, and finances. The API also provides scores by area of study and gender.", "http://afla.md/ws/", "http://afla.md/info/api/?&amp;lang=english")
apis["CKAN"] = Learning("CKAN", "CKAN (Comprehensive Knowledge Archive Network) is an open-source data portal platform that provides an out of the box solution for managing, transferring, and accessing data. CKAN operates under a SaaS model and was created to help data publishers make their data open and available. The CKAN platform contains a catalog system with a web interface, data visualization and analytics, workflow support, access control, data storage, and federated structure.The web service is broken down into two distinct parts: Search and Model. The Search API exposes methods for searching resources, datasets, and revisions, as well as tag counts. The Model API provides a variety of GET, POST, and PUT operations for manipulating, creating, and retrieving model resources from the platform.", "http://thedatahub.org/api/", "http://docs.ckan.org/en/latest/api.html")
apis["BugetMD"] = Learning("BugetMD", "The service provides budget data for the government of Moldova extracted from the Open Data portal of machine-readable government operating data. Data come from the Moldovan Ministry of Finance in partnership with the World Bank. The dataset excludes personal information about people as well as trade secrets of companies and state secrets of the government. The portal&amp;#039;s goal is improved transparency government actions for citizens and other stakeholders.API methods support listings of expenditure items and their categories along with units of government or local and regional authorities that incur the expenses. The API returns machine-readable data structured according to those divisions to report actual government expenditures.", "http://www.buget.md/ws/", "http://buget.md/info/api/")
apis["Swivel"] = Learning("Swivel", "The Swivel API web service provides full create, read, write and delete access to charts in Swivel Business.Upload and update the charts. Create data visualizations of information your enterprise team members want.  Embed those visualizations in your Web site or blog.", "https://api.swivel.com/v1/graphs", "https://business.swivel.com/developers")
apis["Feedbooks"] = Learning("Feedbooks", "Use the Feedbooks API to search the Feedbooks database of books, authors, and lists available for download to your mobile device. Feedbooks is a site used to download free e-books, and it is compatible with all mobile devices. You can also publish your own content or read content that you customize from RSS feeds. Use the API to access cover images in PNG format, as well as content matching your search query in PDF, Mobi, XHTML, and ePub format.", "http://www.feedbooks.com", "http://www.feedbooks.com/api")
apis["CitedIn"] = Learning("CitedIn", "Citedin finds citations based on a PubMed identifier.  Intended to find mentions of papers in unexpected locations: in blogs, databases, Wikipedia. Allows tracking of various resources citing a PubMed Identifier. Returned data can be narrowed by resource collection.", "http://www.citedin.org/webservice.php", "http://www.citedin.org/#fragment-4")
apis["LyricWiki"] = Learning("LyricWiki", "Wikia is a collaborative publishing platform that enables people around the world to discover, create, and share content on any topic. Wikia also provides the LyricWiki API, a service which provides users with lyrics to many popular songs from a variety of artists.This free API can be used via SOAP or REST, though the SOAP functionality is currently more robust. Lyrics can be returned as XML, JSON, HTML, or plain text. Authentication is optional when using the API via SOAP (and not available when using REST), and can be used if you want to associate any webservice changes that you make with your user-account.Please note that due to licensing restrictions, the API can only directly return a small portion of the lyrics directly - which is useful for determining if you have a correct match. All responses also contain a URL to a corresponding page with the full lyrics.", "http://lyrics.wikia.com/api.php?", "http://api.wikia.com/wiki/LyricWiki_API")
apis["Researchr"] = Learning("Researchr", "The service provides a citation database with references to scientific papers and other publications. It serves the needs of researchers to find published sources on topics and by authors of interest to them. The site collects citations, shares them across scientific communities, and provides for reviews of findings by other researchers.API methods support search against the citation database for term or author name matches in references to papers from scientific journals and conference presentations. Methods also support generation of bibliography listings.", "http://researchr.org/api/", "http://researchr.org/about/api/")
apis["KinseyReporter"] = Learning("Kinsey Reporter", "The service provides a survey platform accessed via mobile devices to contribute anonymous, crowd-sourced reports on sexual topics. It provides functions for contributing reports and for reviewing submissions along with summaries and visualizations of collected data. The service is sponsored by the Kinsey Institute at Indiana University and provides submitted data as submitted without any review or verification.API methods support retrieval of data collected from submissions by the Kinsey Reporter mobile apps. Requests can retrieve either listings that summarize multiple crowdsourced contributions or detail of individual contributions. Contributions may be reports documenting sexual activity, survey questions and responses, or descriptive tags.", "http://kinseyreporter.org/API/", "http://kinseyreporter.org/data")
apis["FizberSchools"] = Learning("Fizber Schools", "The Fizber Schools API lets your applications search for schools by city. The results show school names, addresses, phone numbers. Also includes the precise location via latitude and longitude, for easy inclusion of local schools into a map.", "http://www.fizber.com/xml_data/xml_school_data.xml", "http://www.fizber.com/services/fizber_xml.html#div_schools")
apis["Dapper"] = Learning("Dapper", "From their site: Dapper aims to make it easy and possible for anyone to extract and reuse content from any website. The Dapp search web service provides a programmatic interface for searching Dapps and their properties. This is the same web service used by the Dapper website on the find a Dapp page.", "http://www.dapper.net/websiteServices/dapp-search.php", "http://open.dapper.net/developers/")
apis["WikiMatrix"] = Learning("WikiMatrix", "From their site: WikiMatrix provides access to the Wiki infos through a simple XML API. This allows you to pull interesting data from the Matrix system to create your own customized analysis (eg. Ã¯Â¿Â½Which are the most popular programming languages for WikisÃ¯Â¿Â½ or Ã¯Â¿Â½What is the mostused syntax for boldÃ¯Â¿Â½).", "http://www.wikimatrix.org/api", "http://www.wikimatrix.org/wiki/api")
apis["Vapour"] = Learning("Vapour", "The service validates RDF/XML found at a URL specified in the request and confirms that the data is correctly formatted and compliant with best practices. A public web service allows manual submission of a URL, but it is open source and available for local install under the license from the W3C or via public API.API methods support submission of a URL where a file in RDF/XML format is available, and returned data provide a file specifying the results of format validation tests. Requests can optionally specify output format as RDF/XML (the default) or XML.", "http://validator.linkeddata.org/vapour?uri=", "http://vapour.sourceforge.net/")
apis["TweetARun"] = Learning("TweetARun", "The TweetARun API gives users of TweetARun access to their user data. TweetARun is a service that utilizes Twitter to help users keep track of their running by having users tweet their runs along with comments. The API gives users that data in various modes, such as a long-term chart, totals, and more.", "http://tweetarun.com/data.aspx?action=", "http://tweetarun.com/api.aspx")
apis["AevumObscurum"] = Learning("Aevum Obscurum", "The AO API allows connecting to Royal AO, a multiplayer strategy game, providing services to poll games, players, standings, news, game maps and signatures. The API includes functionality to manage games and organize leagues directly from your web site.", "http://(subdomain).aevumobscurum.com/(service)(query)", "http://www.noblemaster.com/dev.html")
apis["INOHPathwayDatabase"] = Learning("INOH Pathway Database", "The service, Integrating Network Objects with Hierarchies (INOH), provides access to a database of pathways among bio-molecules in several organisms, including humans, mice, and rats. The pathways recorded by the service define molecular connections that allow signal transduction in an organism. This information is documented largely in published articles, so the database is built by extracting knowledge from text to develop a machine-processable repository.API methods support retrieval of graphs defining nodes and arcs (or edges) connecting them, based on selected criteria. Results delivered include the nodes involved in a particular pathway and the connections between them, distinguished by event type, including controlled events, controlling events, and others.", "http://www.inoh.org/axis2/services/InohWebService2/", "http://www.inoh.org/inoh_api_manual.html")
apis["DailyMed"] = Learning("DailyMed", "The U.S. Department of Health and Human Services (HHS), through the National Library of Medicine, provides users with access to current Structured Product Language (SPL) information about marketed drugs. The data provided by this service is the most recent provided to the FDA (such as FDA labels/package inserts), and also includes information about warnings and in-progress FDA product reviews.Users can query this RESTful service using a variety of parameters, including prescription or over the counter, human or animal drugs, drug name, drug imprint data, and National Drug Code (NDC). This free service returns data as XML or JSON based on user specificaiton.", "http://dailymed.nlm.nih.gov/dailymed/services/", "http://dailymed.nlm.nih.gov/dailymed/help.cfm")
apis["SimpleName"] = Learning("SimpleName", "The service checks submitted New Zealand (.nz) domain names against registry databases and returns registered or unregistered status and registration expiration. Information is provided free of charge for limited requests, or an API key will be provided for fee-based access at higher volumes with priority access.API methods accept strings for New Zealand domain names, up to 25 per request, and return registration status.", "http://simplename.co.nz/api/", "https://simplename.co.nz/page/api")
apis["BusinessProfiles"] = Learning("Business Profiles", "The service provides provides search access to the provider&amp;#039;s database of public registrations and disclosures required of corporations. Public companies must register information with government authorities about locations, officers, lines of business, and some financial details. The service summarizes these kinds of information in profiles of over 40 million records companies worldwide. Applications can make use of this information for purposes like validating their own information about a company, discovering company official names and contact information, and verifying a company&amp;#039;s good standing with government agencies.API methods support submission of a query specifying all or part of a company name or other term relevant to the company&amp;#039;s profile. Requests can also specify a legal structure (corporation, partnership, LLC, etc.) and record status to filter results. Methods also allow search for officer names and other details for a particular company specified by ID value in the request.", "http://businessprofiles.com/entities/", "http://businessprofiles.com/api")
apis["NOAAGOESSolarXRayImager"] = Learning("NOAA GOES Solar X-Ray Imager", "The service provides download access to data from the Solar X-ray Imager (SXI) service from the National Geophysical Data Center (NGDC) of the U.S. National Atmospheric and Oceanic Administration (NOAA). It provides search against an archive of processed or unprocessed images, which applications can download in a selection of file formats.API methods support specification of the image type (raw or processed data and output file format) along with varied parameters such as the satellite number that generated the image, the sort of solar phenomenon documented, filter wavelength, and the time the image was generated as well as the exposure time.  The web service response contains a bunch of URLs that point to the SXI images. Users can choose to view the images, download a copy to their local machine or process the images using external software. The response is returned in the format specified by the users while constructing the HTTP request URL. The supported response formats include XML, JSON (JavaScript Object Notation), Text and HTML. The HTTP request URL works well in a browser, on a command line and in a program code.", "http://www.ngdc.noaa.gov/goes/sxi/", "http://www.ngdc.noaa.gov/goes/sxi/index")
apis["Subj3ct"] = Learning("Subj3ct", "Subj3ct is a new registry and clearinghouse service for Semantic Web subject identifiers. Subj3ct provides users with the capability to enable their web applications to define and exchange subject definitions. The Subj3ct API allows for users to access its online service for storing subject identifiers, identifier equivalences and links to resources on the web that contain more information about a subject.", "https://api.subj3ct.com/subjects/", "https://subj3ct.com/docs/API/Overview")
apis["FreeCite"] = Learning("FreeCite", "The service parses and interprets a bibliographic citation submitted and breaks out separate fields such as author name, title, year of publication, publisher, and other descriptive characteristics. It is powered by an open-source application, released under the MIT license, that can be installed locally or accessed as a web service. The XML structure generated defines basic metadata for the resource referenced in the citation, or for multiple citations.API methods accept one or more bibliographic citations as URL strings in common bibliographic formats. Methods return XML identifying author, title, year of publication, publisher, genre, and page count.", "http://freecite.library.brown.edu/citations/create", "http://freecite.library.brown.edu/welcome/api_instructions")
apis["UnofficialHeavensAbove"] = Learning("Unofficial Heavens Above", "The service provides an unofficial interface for accessing data from the Heavens Above system for tracking passes overhead of satellites, spacecraft, large orbital debris, and other objects orbiting Earth. The service provides listings of satellites and other objects tracked as well as their orbital paths, indicating points on the planet&amp;#039;s surface over which they pass.API methods support GET requests to retrieve information about satellites and other orbital objects as well as data about their paths and passes they make over defined locations. Earth locations are specified by latitude and longitude.", "http://api.uhaapi.com/satellites/", "http://uhaapi.com/api-documentation-v2-0/")
apis["SideBuy"] = Learning("SideBuy", "Sidebuy is a daily deal and coupons aggregator that collects all deals from group buying websites and local stores and categorizes them.Sidebuy API allows you to use Sidebuy&amp;#039;s databases in order to display local deals, online deals, travel deals and coupons in your application or website. Deals can be filtered using their categories, prices, savings, locations, keywords and more.The API uses REST protocol and responses are formatted in XML and JSON. This API is not branded and there is no daily limit for API calls.", "http://v1.sidebuy.com/api/get/", "http://sidebuy.com/api")
apis["vzaar"] = Learning("vzaar", "vzaar allows businesses to upload video to the vzaar platform. From there, vzaar streams the video to the business website or online market product listings. vzaar hosts their own video player for embedding content on the web. vzaar is intended for ecommerce usage. The vzaar API exposes vzaarÃ¯Â¿Â½s key features to web applications that would like to build custom solutions on top of the vzaar video platform.", "http://vzaar.com/api/", "http://api.vzaar.com/")
apis["HTTPRedirectChainEnumerator"] = Learning("HTTP Redirect Chain Enumerator", "For use in checking the status codes between the first url and the destination so you can catch the 302 codes that are bad for SEO and stop rank from flowing", "http://cartercole.com/dev/api/redirectchain.asp", "http://blog.cartercole.com/2010/08/new-seo-api-http-redirect-chain-test.html")
apis["ChineseCharacterWeb"] = Learning("Chinese Character Web", "The service interprets data from the Unihan Database to encode text in Chinese characters. Its function emphasizes interpretations common in Mandarin Chinese, but it can draw upon information from the supporting database about Cantonese, Japanese, Korean, and Vietnamese encoding. The character range available is the ~21,000 characters within the range identified as CJK Unified Ideographs.API methods support submission of a query specifying the subset of characters of interest with filters to narrow the return. Methods return Unicode values for the character(s) matching the query. Methods also can return the strokes making up the character(s) and pronunciations.", "http://ccdb.hemiola.com/characters/", "http://ccdb.hemiola.com/")
apis["Rrove"] = Learning("Rrove", "Note: As of Dec 2007 this API is no longer active, although the service is. Rrove lets you keep, share and discover places. Save addresses so you can easily revisit them. Make your locations public, write reviews and create sets for your friends. Find new and interesting places recommended by others.", "http://www.rrove.com/api", "http://www.rrove.com/")
apis["Playme"] = Learning("Playme", "The Play.me API helps developers to plug into nearly 6 million* song catalog and create new and innovative web, mobile and desktop widgets and applications allowing music fans to do even more with the music they love (album, artists, playlists, radio, stream, download and more). there are different integration level, non commercial, affiliate program and partnership.*Depending on territory.", "http://api.playme.com/", "http://lab.playme.com")
apis["BART"] = Learning("BART", "Use the BART API to get real-time estimated arrival times for every station from the transit agency that serves metropolitan San Francisco, California, USA. When you use this API, you get an XML feed file that is updated every 60 seconds. Each record has the station name, station abbreviation, date and time, and numerous ETA elements. Each ETA element has a destination and can show the next three trains that will arrive at the station. BART stands for Bay Area Rapid Transit.", "http://bart.gov/dev/eta/bart_eta.xml", "http://bart.gov/schedules/developers/index.aspx")
apis["LangId"] = Learning("LangId", "LangID is a fast way to retrieve information about any sort of language, without specifying the language. Give the service a piece of text and it provides the English name of the language, the ISO code, and an image of the flag of one of the countries this language is spoken in. The API extends LangID for developers to build on.", "http://api.langid.net/", "http://langid.net/identify-language-from-api.html#")
apis["Songza"] = Learning("Songza", "From their site: Songza exposes some of its functionality via an API. You can build tools that talk to Songza. Use methods to return the 10 most played songs and featured songs, the last 10 songs that a user has added to their playlist, and the user&amp;#039;s playlist.", "http://api.songza.com/1.0", "http://songza.com/page/developers")
apis["TheDealmap"] = Learning("The Dealmap", "The Dealmap API allows users to develop applications that integrate and interact with the Dealmap Platform. The Dealmap API let&amp;#039;s users add functionality to their applications such as search, add and consume local deals. It offers a comprehensive local deal database. The API features a RESTful interface and returns data in JSON or XML.", "http://api.thedealmap.com/", "http://www.thedealmap.com/api/")
apis["Reddit"] = Learning("Reddit", "The Reddit API allows you to access the user submitted and rated stories on reddit.com. It also provides advanced functionality, including user account information and sub-reddit moderation.", "http://www.reddit.com/api/info.json", "http://www.reddit.com/dev/api")
apis["TwitterBrite"] = Learning("TwitterBrite", "The TwitterBrite API allows users to search for twitter users by keyword, also add your self to the list or remove your account. All accounts are checked for spam and removed if it is detected. It features a RESTful interface.", "http://www.twitterbrite.com/API/v1/", "http://www.twitterbrite.com/API/")
apis["NobelPrize"] = Learning("Nobel Prize", "Nobelprize.org is a website with information about Nobel Prizes, recipients of Nobel Prizes, and what Noble Prizes have been awarded for.The Nobel Prize API allows developers to access and integrate the functionality and data from Nobelprize.org with other applications and to create new applications. Example API methods include returning Nobel Prizes winners, returning information about Nobel Prize Laureates, and Nobel Prizes by country.", "http://api.nobelprize.org/v1", "http://www.nobelprize.org/nobel_organizations/nobelmedia/nobelprize_org/developer/")
apis["Evri"] = Learning("Evri", "Use the Evri API to get access to Evri&amp;#039;s mapping of the entity web, or the web of people, places and things connected to one another via language. Portions of Evri&amp;#039;s NLP-based (natural language processing) technology are exposed in the API as well as Evri&amp;#039;s knowledgebase of information. With this API you can:* tag, or identify entities in text or HTML documents* get recommended articles, images or videos* find how people, places and things are related to one another* find facts from a large database of people, places, and things", "http://api.evri.com/v1", "http://www.evri.com/developer")
apis["TorontoBudgetData"] = Learning("Toronto Budget Data", "Canadian development and design company Uproot, in conjunction with the City of Toronto, has developed a REST-based API for accessing and retrieving Toronto&amp;#039;s budget data. Using this web service, anyone can take advantage of methods that expose the functionality to query a database containing Toronto&amp;#039;s operational and capital budget data.Users can slice and dice the data as they please - operational data can be queried by department or expenditure/revenue types, while capital budget data can be looked up holistically or by any one of the 44 wards of Toronto. Additionally, there is a Toronto Wards KML Overlay for Google Maps that can be incorporated into applications or mashups. This API returns data in XML and JSON, and is available to use freely for any means.", "http://torontobudget.uprootinc.com/", "http://torontobudget.uprootinc.com/rest")
apis["WeKnowItSpeechService"] = Learning("WeKnowIt Speech Service", "The service provides speech recognition and indexing based on audio input in the form of a submitted WAV file or certain other formats. The recorded speech is mapped to text then indexed to be compatible with search queries, either for single words from the generated text passage or tags applied in indexing.API methods support submission of an audio sample in one of the accepted formats for conversion to text strings and indexing for search. Methods also support submitting queries against the index previously created to return matching text from the passage or matches against tags applied to the text by the indexing process.", "http://nlp.fit.vutbr.cz:9080/", "http://mklab.iti.gr/wki-apps/api-catalog/101-speech-service-api")
apis["ReadabilityMetrics"] = Learning("Readability Metrics", "The service provides indicators of reading difficulty and level for a text passage submitted. Applications can upload a selection of text and receive in return a selection of measures: Automated Readability Index (ARI), Coleman-Liau Index, FleschÃ¢ÂÂKincaid Grade Level, and others.API methods provide for submitting a text string representing the passage to be analyzed. The API then returns reading difficulty measure(s) specified in the request along with some descriptive indicators of the passage size and word composition.", "http://ipeirotis.appspot.com/readability/GetReadabilityScores", "http://ipeirotis.appspot.com/readability-api.html")
apis["Cyc"] = Learning("Cyc", "This API provides access to the Cyc Knowledge Base. OpenCyc is the open source version of the Cyc technology, a general knowledgebase and commonsense reasoning engine. OpenCyc includes the Cyc ontology, which contains hundreds of thousands of terms, plus millions of assertions relating the terms to each other, forming an upper ontology whose domain is all of human consensus reality. Using the API, a programmer can build an OpenCyc app with very little familiarity with CycL or with the OpenCyc KB. You might use the API to create apps that access the knowledge base for browsing, editing, or inference.", "http://ws.opencyc.org/webservices/concept/", "http://www.cyc.com/platform/opencyc")
apis["RxNavNDFRT"] = Learning("RxNav NDF-RT", "The service provides programmatic access to the current National Drug File - Reference Terminology (NDF-RT) data set. The NDF-RT articulates a standard vocabulary, or reference terminology, for the list of medications recognized by the U.S. Veterans Administration (VA). It establishes a formal description format and ontology for therapeutic drugs to encourage consistent terminology across providers and applications.API methods support queries for all medications or subgroups of the full list, including associated compounds and those with parent-child relationships. Methods also support specification of drug properties and interactions.", "http://rxnav.nlm.nih.gov/REST/Ndfrt", "http://rxnav.nlm.nih.gov/NdfrtAPI.html")
apis["LibraryThing"] = Learning("LibraryThing", "From their site: Three APIs available: (1) thingISBN takes an ISBN and returns a list of ISBNs from the same &quot;work&quot; (ie., other editions and translations); (2) thingTitle takes a title and returns a list of ISBNs from the most likely LibraryThing &quot;work,&quot; the LibraryThing title and a link to the LibraryThing work page; and (3) thingLang takes an ISBN and returns the language of the book, using language codes from MARC records, and from the Group Identifiers embedded at the start of the ISBN format.", "http://www.librarything.com/api", "http://www.librarything.com/api.php")
apis["AddressingHistory"] = Learning("AddressingHistory", "AddressingHistory is a searchable, historical database of the people of Edinburgh, Scotland. It provides access to the data within digitized historical Scottish Post Office Directories. The AddressingHistory API provides search access to the AddressingHistory database, including by name, address, profession and category.", "http://addressinghistory.edina.ac.uk/ws", "http://addressinghistory.edina.ac.uk/api")
apis["OpenGeocoding"] = Learning("OpenGeocoding", "The service intends to accumulate address and geocoding information for locations worldwide via a participatory contributions by users. It crowdsources geocoded address data, such as postal addresses matched to location coordinates, then it gives web-based access to the repository for applications worldwide, focused especially on serving developing countries. API methods support retrieval of data upon request specifying, country code, province, city, district, and street. Data inputs are invited via bulk upload.", "http://www.opengeocoding.org/geocoding/geoservice.php?", "http://www.opengeocoding.org/")
apis["USASearchJobs"] = Learning("USASearch Jobs", "USASearch is a service provided by the U.S. General Services Administration (GSA). It hosts the USASearch Jobs API, which allows users to access a list of current job openings with federal, state, and local government agencies. Jobs are searchable by keyword, location, agency, schedule, or any combination thereof. The API operates via REST calls issued in JSON format.", "http://api.usa.gov/jobs/search.json?", "http://usasearch.howto.gov/developer/jobs.html#using-the-api")
apis["Taykt"] = Learning("Taykt", "The Taykt API allows developers to control your Taykt account, including changing message content, viewing activity, creating new messages, and dynamically responding to an SMS message on their own applications.", "https://api.taykt.com/", "http://api.taykt.com/")
apis["SoundoftheCity"] = Learning("Sound of the City", "Sound of the City is a map of user-generated sound data in the city of Luebeck. Participants install the application on an Android device to record, geo-tag, and upload noises (for noise avoidance) and sounds (soundscapes). The Sound of the City API provides public read-only access without login, while uploading data requires an API key. This is a REST API returning JSON, XML, or HTML formatted responses.", "https://citysound.itm.uni-luebeck.de/rest/", "http://citysound.itm.uni-luebeck.de/documentation.html")
apis["FinCRN"] = Learning("FinCRN", "Use the FinCRN API to retrieve a list of recent SEC EDGAR filings for any company, grouped by type (i.e., Annual, Quarterly, etc). FinCRN is the Financial Collaborative Research Network. It was formed to aid individuals conducting research related to their investing activities.", "http://www.fincrn.com/api.php?action=filings&amp;ticker=&amp;lt;ticker&amp;gt;", "http://www.fincrn.com/?p=api")
apis["HealthDatagovcatalog"] = Learning("HealthData.gov catalog", "The HealthData.gov API is used to provide software developers with programmatic access to the contents of the data catalog. The API can be used to find recently added datasets on all types of health statistics, to search the catalog, to download the contents of the catalog for analysis, or to build a new data catalog tool", "http://hub.healthdata.gov/api", "http://www.healthdata.gov/catalog-api")
apis["BlackCountryHistory"] = Learning("Black Country History", "The service provides information about museum holdings, archives, images, and historic artifacts related the the Black Country. This region in central England west of Birmingham is prominent in UK history for coal mining and metalworking industries. Search can be targeted to museum holdings alone, to local document archives, or to the broader collection of artifact records. Partners in the resource include organizations from the towns of Dudley, Sandwell, Walsall, and Wolverhampton.API methods support submission of queries to an Open Search application using Lucene, filtered if desired by metadata fields in the Dublin Core structure: title, creator, description, creation date, subject, etc. Methods also allow formatting of results returned, including sort, format grouping, etc.", "http://api.collectionsbase.org.uk/os/?queryType=lucene", "http://blackcountryhistory.org/data/")
apis["CaliforniaRaceandEthnicPopulationProjections"] = Learning("California Race and Ethnic Population Projections", "California State Dept of Finance - Demographic Data on California Race / Ethnic Population. Projections are available by county and year covering the years 2000-2050.Note: this data set is provided by the State of California and is API enabled via Google Fusion Tables API and Google Visulation API. For more info see:http://www.programmableweb.com/api/google-fusion-tables", "http://tables.googlelabs.com/query", "https://www.google.com/fusiontables/DataSource?dsrcid=140633")
apis["Ontok"] = Learning("Ontok", "Data is based on the [[http://www.census.gov/geo/www/tiger/tiger2004se/tgr2004se.html US Census 2004 Second Edition TIGER/Line Files]]", "http://www.ontok.com/geocoder", "http://www.ontok.com/geocode/jsapi")
apis["GuitarChord"] = Learning("Guitar Chord", "Guitar Chord API can find guitar chord variations based on given data about chord. You can specify chord name, chord modification, or/and string/fret combinations.", "http://pargitaru.id.lv/api/", "http://pargitaru.id.lv/api/")
apis["Tinysong"] = Learning("Tinysong", "Tinysong is a music sharing service that allows users to type in the name of a song and receive listings of where the song can be found streaming on the internet. The URLs leading to the songs are stored in a shortened format, preceded by tinysong.com. The Tinysong API allows developers to access the search and metadata features of the service.Tinysong has a simple RESTful API that makes available search and Tinysong URL generation. Tinysong is a way to get links to any song in the world. Share those links with friends via Twitter, Facebook, Tumblr, email or StumbleUpon. The three methods include: returns a single Tinysong link, return additional meta-information about the Tinysong link generated, and multiple results are returned in the same format as the other two methods. Responses can be url or JSON.", "http://tinysong.com/", "http://www.tinysong.com/api")
apis["Panoramio"] = Learning("Panoramio", "Using Panoramio API users can display the photos from Panoramio on their own web site. Geolocated photos from Panoramio can enrich maps or illustrate information where location is a important factor (real estate sites, hotels and vacation sites, routes &amp; trails).Panoramio is a website that enables digital photographers to geolocate, store and organize their photographsÃ¯Â¿Â½and to view those photographs in Google Earth and Google Maps. Panoramio is a community-powered site for exploring places through photography: cities, natural wonders, or anywhere you might go. Panoramio is different from other photo sharing sites because the photos illustrate places. As you browse Panoramio, notice that there aren&amp;#039;t many photos of friends and family posing in front of places, or photos of interesting surfaces--Panoramio&amp;#039;s all about seeing the world.The Panoramio API uses a RESTful interface and responses are formatted in JSON.", "http://www.panoramio.com/map/get_panoramas.php", "http://www.panoramio.com/api/widget/api.html")
apis["Pygments"] = Learning("Pygments", "The service provides syntax highlighting for web applications without Python installed. It accepts submission of a code selection and code selection with a designation of programming language and generates a version of the code with color highlighting calling out programming statements from that language. The returned &amp;#039;pygmentized&amp;#039; HTML can be stored locally to the requesting system or directly displayed using CSS formatting.API methods support submission of the desired code sample and programming language attribute. The list of programming languages detected and highlighted include over 200 individual languages and combinations, such as HTML + PHP.", "http://pygments.appspot.com", "http://pygments.appspot.com/")
apis["IdescatPopulationSearch"] = Learning("Idescat Population Search", "The Population search API provides information on the population by sex for any territorial entity in Catalonia. It features a RESTful interface and returns data in XML, JSON, PHP, or TXT.", "http://api.idescat.cat/pob/v1/", "http://www.idescat.cat/api/pob/?lang=en")
apis["BitMinter"] = Learning("BitMinter", "The service provides tools for managing balances of bitcoin virtual currency. It summarizes activity within the bitcoin network and provides statistics to guide an application&amp;#039;s involvement in group effort to generate bitcoin, with the resulting balance shared among participants.API methods support summaries of statistics for worldwide bitcoin activity. Methods also provide statistics on the hash rate generated by network activity, the number of workers active in the network, the number of users, and the rounds of activity completed.", "https://bitminter.com/api/pool/", "https://bitminter.com/api")
apis["Fillbug"] = Learning("Fillbug", "The service provides search based on a query by example model. It builds on the user-supplied syntax to generate an item expander query for submission as a search argument against a repository. The technology is intended to provide recommendations based on user keystrokes, as well as reference to an application-specific dictionary, knowledge base, or other repository.API methods support submission of a query keyword, resource title, item description, or email address. Methods also allow specification of the language, number of items to return in search results, and a URL parameter for site-specific search.", "http://fillbug.com/", "http://fillbug.com/API.html")
apis["OfficeforNationalStatistics"] = Learning("Office for National Statistics", "UK neighbourhood and census statistics including Neighbourhood Statistics (NeSS) data including 2001 Census, Access to Services, Community wellbeing/Social Environment, Crime and Safety, Economic Deprivation, Education, Skills and Training, Health and care, Housing, Indicators, Indices of Deprivation, People and Society, Physical Environment, Work Deprivation.", "http://www.neighbourhood.statistics.gov.uk/NDE2/Disco", "http://neighbourhood.statistics.gov.uk/dissemination/Info.do?page=nde.htm")
apis["Socialtext"] = Learning("Socialtext", "Socialtext provides enterprise social software to businesses with the goal of improving knowledge management and sharing. The Socialtext REST API includes a set of functionality allowing programmers to create, read, update, and delete much of the data in the Socialtext systems. This includes tags, pages, attachments, workspaces, users, Signals, and search results. There is also a SOAP interface to content hosted in Socialtext workspace.", "http://www.socialtext.net/data/workspaces/", "https://www.socialtext.net/st-rest-docs/")
apis["WordPresscom"] = Learning("WordPress.com", "WordPress.com is the hosted version of the popular open source blogging software. WordPress.com exposes site, post, comment, and like data via an REST Application Programming Interface (API) in a JSON format. The OAuth2 protocol is used for authentication. The standard WordPress XML-RPC API is also supported by WordPress.com using OAuth2 and basic auth.", "http://public-api.wordpress.com/rest/v1/", "http://developer.wordpress.com/")
apis["CrunchBase"] = Learning("CrunchBase", "CrunchBase is a product of TechCrunch and is a directory of technology companies, people, and investment profiles especially for companies involved in Web 2.0.  The read-only API allows for retrieving all information that is available from the database, with some search criteria, and it uses JSON for the output formats. It is not necessary to have a developer account or an API key, and there are no current restrictions on the number of requests.", "http://api.crunchbase.com/v/1", "http://developer.crunchbase.com/")
apis["Madeline"] = Learning("Madeline", "The service provides analysis and formatting of data reflecting human genetic background for use in studies of genetic linkage and pedigree. It converts data about genetic markers for an individual to formats compatible with common software for linkage analysis. It also supports queries against genetic pedigree datasets to aid discovery of relationships and patterns. Visualization tools generate Postscript images for rapid review of large, complex datasets. The service is also available as installed software.API methods support submission of genetic marker data for analysis. Methods analyze the pedigree links represented in the data and format it for submission to common link analyzer packages. Methods also generate SVG images representing data and defining genetic links to recorded human pedigrees.", "http://eyegene.ophthy.med.umich.edu/madeline/api/", "http://eyegene.ophthy.med.umich.edu/madeline/aboutwebservice.php")
apis["ZeeMaps"] = Learning("ZeeMaps", "ZeeMaps provides an easy-to-use mechanism for embedding Google Mapsin your own website.They also provide an International Geocoding service.", "http://www.zeesource.net/maps/geocode?city=&amp;state=&amp;country=", "http://www.zeemaps.com/")
apis["BlueViaSMS"] = Learning("BlueVia SMS", "Send and receive SMS messages with the BlueVia SMS API. BlueVia is a developer initiative from communications company TelefÃ¯Â¿Â½nica. The SMS API helps you include two-way SMS functionality in your applications. To receive messages, you register a keyword with one of the BlueVia short codes (which differ by country). Free SMS credits are available for testing.", "https://api.bluevia.com/services/REST/SMS", "https://bluevia.com/en/page/tech.APIs.SMSAPI")
apis["ConvertAPIXps2PDF"] = Learning("ConvertAPI Xps2PDF", "Xps2PDF lets developers create a PDF file of any Xps document. The ConvertAPI Xps2PDF API is a pay-per-credit API. Developers can manipulate many different settings: orientation, page size, margins, cover pages, and more can be set with the Xps2PDF API. Pricing begins at $15 for 1,000 calls.", "http://do.convertapi.com/Xps2Pdf", "http://www.convertapi.com/xps-pdf-api")
apis["Nodester"] = Learning("Nodester", "Nodester provides Node.JS hosting, as platform-as-a-service. The platform is based on a RESTful API running in the cloud. The service supports Node.JS sandboxing of user apps,  which according the the site lets users &amp;quot;install their own NPM modules using the Nodester APPNPM API.&amp;quot; Nodester uses Git to push updates.", "http://api.nodester.com/", "http://nodester.com/api.html")
apis["Wattpad"] = Learning("Wattpad", "Wattpad is an application for web, mobile, and tablets that allows users to create and share stories. Wattpad also allows users to read stories and interact with the authors within the application.The Wattpad API allows developers to access and integrate the functionality of Wattpad with other applications. Some example API methods include retrieving story lists, retrieving story character information, and retrieving story categories.", "http://wattpad.com/apiv2", "http://www.wattpad.com/api_doc")
apis["AreYouWatchingThis"] = Learning("Are You Watching This", "From their site: Get free alerts when televised games get good. Doing Laundry. Raking the leaves. Went to sleep early. Are any of these worthwhile reasons for missing the next instant classic? No, we did not think so either. Sign up for our free alerts and RUWTbot will hit you up by email or text message with the score, time left, and channel you need to turn to to catch the game.", "http://areyouwatchingthis.com/api/", "http://areyouwatchingthis.com/api/")
apis["CSSMania"] = Learning("CSS Mania", "The API provides access to the CSS showcases that are submitted to CSS Mania. It provides search access to various CSS showcases with their screenshots, url, rating, votes, top 5 colors used, and more.", "http://cssmania.com/api/api.php", "http://www.cssmania.com/api/")
apis["ChinaHistoricalGIS"] = Learning("China Historical GIS", "The service maintains a geographic information database of historical information related to placenames in China. The placenames are cross-referenced by spelling variants comprising 250,000 or more records referring to more than 175,000 locations, including 50,000 places significant in Chinese history. Information provided documents historical events linked to the places specified. API methods support queries against the same database accessed by search tools on the CHGIS website. Queries can specify placenames as romanized ASCII strings of UTF-8 encoded Chinese characters (either simplified or complex glyphs). Responses can be limited for particular date ranges, if desired.", "http://chgis.hmdc.harvard.edu/xml/", "http://chgis.hmdc.harvard.edu/xml/")
apis["Urloid"] = Learning("Urloid", "From their site: Allows users to implement link optimization services into third party applications or services. The API is simple to use and can be customized with CSS or other HTML attributes.", "http://urloid.com/api/", "http://urloid.com/")
apis["Historicalcurrencyconverter"] = Learning("Historical currency converter", "The service provides historical exchange rates for selected currency pairs using data from the U.S. Federal Reserve System and the European Central Bank (ECB). It can provide either current exchange rates or values in effect on specified dates starting in 1971. Exchange rates are available for more than 170 world currencies.API methods support retrieval of the latest exchange rate for a specified pair of currencies. Methods also provide a historical rate for a pair of currencies on a specified date or a range of exchange rates in effect between specified start and end dates.", "http://currencies.apps.grandtrunk.net/", "http://currencies.apps.grandtrunk.net/")
apis["WashingtonDCOpen311"] = Learning("Washington DC Open 311", "Open 311 API will allow to programmatically submit and query service requests to the Washington DC Mayor&amp;#039;s Call Center (311). The Open 311 API will support variety of types of service requests (e.g. broken signal, trash pickup, pothole, etc.) Each service request will have list of fields describing the service request, some of them are mandatary (e.g. location field, tied to DC GIS MAR), some of them will be optional (e.g. description, link to service request info in external system (such us future community website, built as part of Apps for Democracy))", "http://api.dc.gov/open311/v1", "http://octolabs.pbworks.com/Open-311-API")
apis["YorkUniversityLibrary"] = Learning("York University Library", "The service provides access to a number of library resources important to students. A research guide function allows export of topic-specific and course-specific resource lists targeted to a student&amp;#039;s registration selections and program affiliations. Additional functions provide lists of library staff with expertise and topical focus relevant to a student&amp;#039;s program and details of current status for the student&amp;#039;s library account.API methods support generation of RSS feeds for topic-related and course-related research resources, or for library staff with relevant expertise, either matched to a specific student (with authentication) or based on program lists specified in the request. Methods also support access to a student&amp;#039;s current library account status information formatted in XML.", "http://www.library.yorku.ca/", "http://www.library.yorku.ca/cms/web/docs/apis/")
apis["MapBox"] = Learning("MapBox", "MapBox is a suite of open source mapping tools. This API can be used to create interactive maps using a wide range of file formats and databases. It also allows users to host their maps so that they can be embedded on webpages and shared with a wider audience. All maps created using MapBox are compatible with Android and iOS devices.", "api.tiles.mapbox.com/v2 AND api.tiles.mapbox.com/v3/", "http://www.mapbox.com/developers/api/")
apis["twitsnaps"] = Learning("twitsnaps", "Twitsnaps is a service that allows users to share their photographs from their twitter accounts. The Twitsnaps API can be used to upload photos or get data about the photos. The API is free and available for use.", "http://www.twitsnaps.com/", "http://twitsnaps.com/takeapi.php")
apis["Digg"] = Learning("Digg", "From their site: The Digg Application Programming Interface (API) has been created to let users and partners interact programmatically with Digg. Digg is a place for people to discover and share content from anywhere on the web. From the largest sties to the smallest blogs, Digg surfaces the best stuff as voted on by users. The API returns Digg data in a form that can be integrated into an application or a web site. The API is available to everyone free of charge, but its use is subject to acceptance of the API License Agreement.Make most of the data on Digg.com available through the API. Currently, you can use the API to request very specific information about news stories, images and videos submitted to Digg, digging activity, comments, and users. The API accepts REST-like requests and offers several response types: XML, JSON, and Javascript. In addition, a Digg sponsored PEAR module is available for PHP as well other open-source toolkits.", "http://services.digg.com/", "http://developers.digg.com/")
apis["OckhamSpell"] = Learning("Ockham Spell", "The service provides spelling suggestions, including alternatives spellings, for words provided as part of a request. It can draw recommendations either from a collection of dictionaries or from a particular one specified in a request. Dictionaries focused on particular fields and topic domains help to accommodate differences in use of the same word in varying contexts.API methods support submission of a word as a string in the request URL to return a list of close matches from the service&amp;#039;s master dictionary. Methods also support restriction of a request to field-specific dictionaries for biology, earth sciences, mathematics, and library science. Returned data then list only the words that closely match the requested string as used within that particular discipline.", "http://spell.ockham.org/?word=", "http://spell.ockham.org/about/index.html")
apis["14XMLBible"] = Learning("4:14 XML Bible", "The service provides text from Christian scripture as specified in submitted requests. It complements similar biblical verse service by providing translations in multiple languages and versions of the scripture. King James versions are the default, but requests can choose from 53 others based on different Greek and Hebrew texts. The database of nearly 2.5 million verses includes text in many languages.API methods support submission of a request with a bibilical passage citation. Requests may also specify a language and text version. Returned data provide up to 500 matching verses.", "http://api.preachingcentral.com/bible.php?passage=", "http://www.4-14.org.uk/xml-bible-web-service-api")
apis["Blipfm"] = Learning("Blip.fm", "Use the Blip.fm API to access Blip.fm users and their data. Get a Blip by user ID, or for multiple user IDs. Get the most recent Blips for a user, sequentially listed by most recent. Create your customized music station with Blip.fm. Be your own DJ and then share your station with your friends, or have your friends program your station for you. Share your musical interests with millions.", "http://api.blip.fm/", "http://api.blip.fm/")
apis["MECAPI"] = Learning("MECAPI", "The service provides web access to the MeCab language analysis tool, which breaks down Japanese texts into parts of speech and other morphological elements. It seeks to analyze a text passage based on a general-purpose dictionary and reference collection to reveal structure and word use embedded in the sample. It builds on a Markov model of word sequence, but attempts to improve analytical performance by introducing randomized elements. An open-source installed version is available.API methods support submission of a Japanese-language text passage (assumed to be a complete sentence) with filters to select only nouns or only unique words. Methods return analysis and breakdown of the passage according to its word choice, parts of speech, implied inflection, and related characteristics.", "http://chasen.org/~taku/software/mecapi/mecapi.cgi", "http://chasen.org/~taku/software/mecapi/mecapi.cgi")
apis["Luzme"] = Learning("Luzme", "Luzme is now used by people all over the world to find eBooks, and by corporate customers to source timely and accurate eBook price information. The Luzme API allows access to accurate and comprehensive ebook data in LuzmeÂs ebook database, including price, author, all major US and UK stores, and all ebook formats. The Luzme API is currently in beta test mode; if you would like to try it, sign up for a free account on the Luzme website.", "http://luzme.com/api/beta", "http://luzme.readthedocs.org/en/latest/?redir")
apis["Let039sBeTrends"] = Learning("Let&#039;s Be Trends", "Let&amp;#039;s Be Trends is a web service API for getting information about trending topics on Twitter. The explanations for trends are provided by users of Brizzly. The API lets you get a list of current trends, details on a specific trend, or international explanations. The international service will find information on a given trend for a specific locale. These services are developed by Thing Labs.", "http://letsbetrends.com/api/", "http://letsbetrends.com/")
apis["LivingStones"] = Learning("Living Stones", "Living Stones is a web service for any website to be able to search any of three Bible translations that are in the public domain (KJV, AKJV, ASV) and to lookup passages from those translations.", "http://api.seek-first.com/", "http://www.lstones.com/webservices.php")
apis["hostipinfo"] = Learning("hostip.info", "Hostip.info is a community-based project to geolocate IP addresses, making the database freely available but it needs you to put in your city to make it work. Available as a Firefox plug-in, or embeddable in your website.", "http://api.hostip.info/get_html.php", "http://www.hostip.info/use.html")
apis["OpenDOAR"] = Learning("OpenDOAR", "From their site: OpenDOAR is constructing a comprehensive and authoritative list of institutional and subject-based repositories. The API is a machine-to-machine interface that lets third party applications run a wide variety of queries against the OpenDOAR Database and get back XML data. You can choose to receive just repository titles &amp; URLs (suitable for OAI-PMH harvesting), or all the available OpenDOAR data, or intermediate levels of detail.", "http://opendoar.org/api.php", "http://www.opendoar.org/tools/api.html")
apis["TheOldBailey"] = Learning("The Old Bailey", "The service allows search against records of legal proceedings at the Old Bailey, London&amp;#039;s central criminal court, from 1674 to 1913. The fully searchable repository gives access to documentation of almost 200,000 criminal trials either by specific case or for all cases that match specified terms.API methods support submission of search criteria, either a trial number, text to match, or both, along with the number of desired results (maximum of 1000 per request) and the desired output format, either text or zip file. If both a trial number and match text are specified, output tags the specified terms within the text returned.", "http://www.oldbaileyonline.org/obapi/", "http://criminalintent.org/for-developers/")
apis["Outsidein"] = Learning("Outside.in", "The Outside.in API lets you easily integrate hyperlocal news in your sites and applications by providing recent news stories and blog posts for any neighborhood, ZIP code, city, or state in the United States.", "http://hyperlocal-api.outside.in/", "http://developers.outside.in/")
apis["FlyMine"] = Learning("FlyMine", "The service aggregates genetic data about fly organisms commonly used in biological research: Drosophila, Anopheles and C. elegans. It documents the genomes and protein data for these animals, supporting data mining across domains within biological research.API methods support submission of queries against the database specifying the animals of interest via constraints such as genus, species, and genetic symbol. Methods also allow control of result sets, including number of results returned and output format.", "http://www.flymine.org/query", "http://www.flymine.org/release-37.1/api.do")
apis["RequestBin"] = Learning("RequestBin", "RequestBin is a service that allows users to collect and analyze HTTP requests. RequestBin can be used to see what HTTP clients are sending and to look at webhook requests.The RequestBin API allows developers to access and integrate the functionality of RequestBin with other applications and to create new applications. Some example API methods include creating bins, managing bins, and retrieving information from bins.", "http://requestb.in/api/v1", "http://requestb.in/docs/API")
apis["Socialbel"] = Learning("Socialbel", "The Socialbel API provides a simple way to request data from Socialbel.com via HTTP requests. Socialbel is a community driven translation service where anyone can contribute. You can create, edit, share and translate terms on several different languages.", "http://socialbel.com/api/", "http://socialbel.com/help/api/")
apis["Freebase"] = Learning("Freebase", "Freebase is an open database of the over 22 million real world entities like people, places, organizations and much more. It&amp;#039;s built by the community and for the community free for anyone to query, contribute to, build applications on top of, or integrate into their websites.The Freebase API is an aggregate of HTTP APIs that provide you with read/write access to the data stored in Freebase. The APIs support different use cases and allow you to get access the same Freebase data in many different ways. The search API returns freebase data given a free text user query. The search service indexes freebase data for any given entity, as well as other sources such as Wikipedia content.", "http://www.freebase.com/api/", "http://wiki.freebase.com/wiki/Freebase_API")
apis["Sublight"] = Learning("Sublight", "Sublight allows users to search for and download subtitles for movies and TV shows from a collection of databases. Subtitles are available in dozens of languages, including English, Spanish, French, German, Chinese, Japanese, and Swedish. The API provides a way to integrate automatic subtitle downloading into other sites or applications.", "http://www.sublight.si/API/Simple/", "http://www.sublight.si/developers/api")
apis["NWQMCWaterQualityPortal"] = Learning("NWQMC Water Quality Portal", "The National Water Quality Monitoring Council (NWQMC) provides the Water Quality Portal web service to provide users with programmatic access to the large quantities of water quality data in various national databases.Queries are constructed and submitted through the addition of REST-like parameters to one of two base URL&amp;#039;s. Location can be searched by latitude and longitude with radius, coordinate boxing, state, county, and country. Specific site ID&amp;#039;s can be used to target an individual station, and searches can be made by other criteria such as site type, organization, and date.", "http://cida.usgs.gov/qw_portal_core/Results/search?", "http://cida.usgs.gov/qw_portal_core/webservices_documentation.html")
apis["tracks"] = Learning("8tracks", "8tracks is a simple way for people to create or listen to a mix, a short playlist containing at least 30 minutes - roughly 8 tracks - of music. This API enables you to play back your 8tracks mixes through your website or app.8tracks playback is provided through the Playback API.  The 8tracks player &amp;quot;discovers&amp;quot; content through the API.  The API is also available for 3rd parties to integrate the 8tracks service.", "http://api.8tracks.com/", "http://8tracks.com/developers")
apis["BooRahRestaurantSearch"] = Learning("BooRah Restaurant Search", "The BooRah Restaurant Search API returns a list of restaurants based on specified name and location parameters. The name can be a full or partial restaurant name, a type of cuisine, or a type of food. The location can be identified as a city, zip code, neighborhood, address, or latitude and longitude.", "http://api.boorah.com/restaurants/WebServices/RestaurantSearch", "http://business.intuit.com/boorah/docs/syndication/integration.html")
apis["Bandsintown"] = Learning("Bandsintown", "Bandsintown allows users to view local concerts and gives live music recommendations. The Bandsintown concert API allows any website or mobile application to display the information Bandsintown offers. Developers can earn commissions by displaying and selling concert tickets for any artist or venue in the world.", "http://api.bandsintown.com/", "http://www.bandsintown.com/api/overview")
apis["MuseumofLondon"] = Learning("Museum of London", "The Museum of London API is a REST interface to the following data sources: publications from the Archaeology Service; events at the Museum of London, Museum in Docklands, and London; Archaeological Archive and Resource Centre; and a converter from OSGB grid references to latitude/longitude. Also there is archaeological sites to the publications API, which means that KML output.", "http://www.museumoflondon.org.uk/MuseumofLondon/food/rest.aspx", "http://www.museumoflondon.org.uk/museumoflondon/food/rest.aspx")
apis["SBMLValidator"] = Learning("SBML Validator", "The service provides a review and format validation for samples of systems biology markup language (SBML), a specialized flavor of XML common to a specific category of researchers in biological science. It ingests the sample markup and checks it against the SBML standard, then notes any variations from proper syntax or inconsistency in formatting that would prevent its use by applications that rely on the language. API methods support submission of the URI for accessing a sample SBML file to be validated. The API returns notation identifying syntax and formatting problems and stating the nature of the problem. Methods allow control of validation methods to disable certain syntax checks, such as validation of consistency of reporting for units of measurement, to tailor results to desired level of completeness.", "http://sbml.org/validator/", "http://sbml.org/Facilities/Documentation/Validator_Web_API")
apis["PicPlz"] = Learning("PicPlz", "Photo sharing mobile application picplz has a new API that has entered beta. The service provides read/write access to the picplz platform for sharing and editing photos. Developers can upload photos and use filter effects including &amp;quot;Instant Film,&amp;quot; &amp;quot;Russian Toy Camera,&amp;quot; &amp;quot;the 70s&amp;quot; and &amp;quot;High Contrast Monochrome.&amp;quot; The API also provides read access to others&amp;#039; photos. Like its mobile apps, the API likely lets you add a caption and tag your location.", "http://api.picplz.com/api/v2/", "https://sites.google.com/site/picplzapi/")
apis["Avatarsio"] = Learning("Avatars.io", "Avatars.io is an avatar hosting service. It is designed for integration with mobile apps and websites. Developers can use the Avatars.io to host the avatars their users assign themselves. After they are uploaded, the avatars can be retrieved at different sizes. Avatars.io is fully compatible with Gravatars and social media sites like Twitter, Instagram, and Facebook. The entirety of Avatars.io functionality is a RESTful API that exposes avatar upload and retrieval. It returns JSON-formatted data.", "http://avatars.io/", "http://avatars.io/")
apis["CowntUs"] = Learning("Cownt Us", "From their site: Cownter is a service that allows website visitors to see how many people are currently looking at different pages within the site. This API is designed to give website owners programmatic access to this data.", "http://ws.cownt.us/ws", "http://cownt.us/api.html")
apis["Follerme"] = Learning("Foller.me", "The Foller.me API is a service related to Twitter (no official association, though) that can provide you with the most detailed information about a specific Twitter user in the least amount of time. You can use the Foller.me real-time data via the API. The general request format is http://api.foller.me/{who}/{what}.{format} where {who} is the screen name of the person you&amp;#039;re querying, {what} is either topics, hashtags or mentions and {format } is the response format (json or xhtml). You can optionally exclude some entries from certain Web sources, too, that you specify (such as Wordpress).", "http://api.foller.me", "http://follerme.pbworks.com/w/page/9885800/FrontPage")
apis["GoPollGo"] = Learning("GoPollGo", "GoPollGo is an online and mobile tool for surveys, polls, and gathering opinions and answers from people. GoPollGo can be used with Facebook, Twitter, email, and by embedding links. GoPollGo offers reporting features and answer analysis.The GoPollGo API allows developers to access and integrate the functionality of GoPollGo with other applications. Some example API methods include retrieving poll data, posting raw data, and returning embedding links.", "http://gopollgo.com/api", "http://gopollgo.com/docs")
apis["LibraryofCongressSubjectHeadings"] = Learning("Library of Congress Subject Headings", "This is an experimental service that makes the Library of Congress Subject Headings available as  linked-data using the SKOS vocabulary. The goal of lcsh.info is to encourage experimentation and use of LCSH on the web with the hopes of informing a similar effort at the Library of Congress to make a continually updated version available.", "http://lcsh.info/{lccn}", "http://loc.gov")
apis["Lastfm"] = Learning("Last.fm", "The Last.fm API gives users the ability to build programs using Last.fm data, whether on the web, the desktop or mobile devices. The RESTful API allows for read and write access to the full slate of last.fm music data resources - albums, artists, playlists, events, users, and more. It allows users to call methods that respond in either XML or JSON.", "http://ws.audioscrobbler.com/2.0/", "http://www.last.fm/api")
apis["ParkWhiz"] = Learning("ParkWhiz", "The ParkWhiz API gives developers access all of ParkWhiz&amp;#039;s real-time parking and event data in major US cities and around sports venues. The API features a RESTful interface and returns data via the JSON format. Calls are limited to 1000 a day and are authorized via an API Key.", "http://www.parkwhiz.com/json_api/", "http://www.parkwhiz.com/developers/")
apis["SingaporeGeocoder"] = Learning("Singapore Geocoder", "Convert Singapore postal code to Lat and Long. Other Singapore address resources are also available at www.best.sg/mash/sggeocoder.jsp.", "http://www.best.sg/mash/postalcode_latlng_xml.jsp?pc=123&amp;key=123", "http://www.best.sg/mash/sggeocoderpostal.jsp")
apis["PublicationsNZBookCover"] = Learning("Publications NZ Book Cover", "The service provides images of book covers for publications from New Zealand as a way to support the country&amp;#039;s libraries and promote its publications in catalogs of relevant works. Licensing terms do not allow access by libraries and other users outside  New Zealand.API methods accept queries to identify books and other printed resources as HTTP GET requests providing unique resource identifiers such as ISBN, ISSN, ISMN, or NBD number. If found, the API returns URLs for both full-size and thumbnail images from the namespace http://digital.natlib.govt.nz that can be incorporated in the &amp;lt;img&amp;gt; tag to include the cover image in a catalog web display.", "http://digital.natlib.govt.nz/bookcover/get/", "http://www.natlib.govt.nz/catalogues/library-documents/book-cover-images-guide")
apis["ResearchDataAustralia"] = Learning("Research Data Australia", "The service provides a single, comprehensive point of access for research conducted or sponsored by the Australian government or its agencies. The national government has established an Australian Research Data Commons and registry with standardized storage and retrieval methods across research projects with the goal of unified and simplified access to result sets, promoting access to and reuse of data. An additional goal is improved visibility of Australian research within search engine results.API methods support search access to stored data sets compliant with Open Search and Open Archives Initiative (OAI) formats. Methods support retrieval of data objects from the ANDS registry and of groupings in which objects are organized, including spatial data. Methods also provide lists of registered data sources with descriptive metadata detailing the data they provide.", "https://researchdata.ands.org.au/registry/orca/services/", "http://ands.org.au/resource/java-api.html")
apis["ThisIsMyJam"] = Learning("This Is My Jam", "On this music recommendation site users share the single song they are currently obsessed with. This Is My Jam allows you to share your current jam through Facebook and Twitter, and to follow those users who&amp;#039;s musical tastes you admire. The API expects to allow access to all of This Is My Jam&amp;#039;s functions: following users, setting and previewing jams.", "http://api.thisismyjam.com/", "https://www.thisismyjam.com/developers")
apis["MyTweeple"] = Learning("My Tweeple", "My Tweeple is a people information management tool. The majority of its data comes from Twitter and its primary purpose is to help users decide which people to follow on Twitter. My Tweeple has a number of export features, including its API. The API features a RESTful inteface and returns data in the XML format.", "http://api.mytweeple.com/1.0", "http://api.mytweeple.com")
apis["mobiAPI"] = Learning("mobiAPI", "mobiAPI is a data reporting solution for mobile applications creators to make profit-generating decisions. Use mobiAPI to gain insight into your user&amp;#039;s behavior, patterns and data usage in real time. mobiAPI works with all mobile devices, does not require the integration of additional code or infrastructure maintenance.", "http://www.mobiapi.com/", "http://mobiapi.proximitymatch.com")
apis["Wookmark"] = Learning("Wookmark", "Wookmark is a social site for collecting and sharing images and videos. Users can organize their images with groups and follow other users for inspiration. The Wookmark Plus upgrade allows users to have private images, videos, and groups. It also enables them to upload their own images, have groups with multiple members, sync with Dropbox, and archive old groups.Wookmark&amp;#039;s RSS API allows users to follow popular images, new images, a particular user&amp;#039;s images, or a particular group&amp;#039;s images. Wookmark&amp;#039;s JSON/JSONP API allows users to access popular images, new images, images by user, images by group, images matching a color, and source images. This API also enables users to search through Wookmark&amp;#039;s images.", "http://www.wookmark.com/api/rss", "http://www.wookmark.com/about/api")
apis["MakeTheChange"] = Learning("Make The Change", "The service provides access to Canadian community data by mapping postal coded to electoral district identifier, which is the key to mapping districts, or &amp;quot;ridings,&amp;quot; and giving access to demographic data. Initially limited to data about federal parliamentary districts in Canada, plans include access to value-added local data to support effective activism in elections.API methods support submission of postal codes and return electoral district identifier (edid) values. Methods also allow searches based on the names of Members of Parliament (MPs).", "http://makethechange.ca/pc2csv/?", "http://www.makethechange.ca/electoral-data-consortium-api")
apis["GroupsNearYou"] = Learning("Groups Near You", "The GroupsNearYou API helps you to find local email lists, discussion forums, or any other kind of local online community. You can search the database by UK or USA zip code and also by longitude and latitude. Use these feeds to access the Groups Near You data programmatically. Then use desktop GIS tools, such as mapufacture, Google Maps, or Yahoo Pipes to build new apps.", "http://www.groupsnearyou.com/rss.php", "http://www.groupsnearyou.com/api")
apis["Active"] = Learning("Active", "The Active.com API provides read-only access to data produced by systems within The Active Network.  This includes things like running events, tennis tournaments, triathlons and highschool sports data.  Several companies, including livestrong.com and ESPN, are active consumers of the API. Monetize your API: Sign up for our referral program to earn a revenue share - http://www.activenetwork.com/affiliates.htm", "http://api.amp.active.com", "http://developer.active.com/docs/Home")
apis["IRateMyDay"] = Learning("I Rate My Day", "Use the IRateMyDay API to get the last 10 ratings of all users, get the last 10 ratings of a certain user, get specific rating details, and get details for a certain user.", "http://api.iratemyday.com", "http://iratemyday.com/Help/Api.aspx")
apis["CornelleBird"] = Learning("Cornell eBird", "The service from Cornell University&amp;#039;s Lab of Ornithology provides descriptive information about bird species to support bird watchers and biological researchers. Along with related services Avian Knowledge Network and Neotropical Birds Online, it gives free access to authoritative information about individual species. Also available is information about bird populations for specific locations, including a mapping interface.API methods support information retrieval by species or location. Applications can also log sightings of particular species and tracking of individual contributors&amp;#039; sightings. The provider invites birders to share their sightings across the eBird community for use by hobbyists, science research, and conservation efforts.", "http://ebird.org/ws1.1/ref/", "https://confluence.cornell.edu/display/CLOISAPI/eBird+API+1.1")
apis["OaklandCrimeReports"] = Learning("Oakland Crime Reports", "Services to retrieve Oakland Police Dept. report data by OPD beat, lagged one week. Crime report data is summarized by the week, Sunday - Saturday. Starting date represents the first instance of a report for the week within that beat.", "http://rest.infoalamedacounty.org/index.php/api/usc/crimeAggregate", "http://www.infoalamedacounty.org/index.php/Data/Data-Portal/Data-Feeds-APIs.html")
apis["BiofabDataAccess"] = Learning("Biofab Data Access", "The service provides access to a repository of data collections documenting annotated parts, which are DNA sequences with a single known biological function. Datasets support local research while also promoting consistency across researchers. Datasets are or will be in compliance with the Synthetic Biology Open Language (SBOL) standard.API methods support retrieval of raw data listing annotated parts, as well as collections encompassing subsets of the total repository. Methods also allow retrieval of DNA sequence constructs and construct designs.", "http://biofab.jbei.org/services/data/", "http://www.biofab.org/data/docs/daws")
apis["CopacSALTrecommender"] = Learning("Copac SALT recommender", "The service provides recommendations for resources of interest to a user based on selections that previous users have made. It links resources and generates recommendations based on circulation data collected over 10 years beginning in 2001 by John Rylands Library at the University of Manchester in the U.K. API methods support submission of a query containing an identifier for a resource of interest, either ISBN or a local workID value, along with a numerical threshold for the number of users who have accessed a pair of resources. Returned data provide links to records for up to 40 resources accessed in combination with the resource of interest.", "http://vm-salt.mimas.ac.uk/getSuggestions.api", "http://copac.ac.uk/innovations/activity-data/?page_id=227")
apis["RetroAvatar"] = Learning("Retro Avatar", "This API creates a unique random pixel image with a retro look for a given seed value. These values can be name, email, profile id and more.", "http://retroavatar.appspot.com/api?", "http://retroavatar.appspot.com/")
apis["Vimeo"] = Learning("Vimeo", "The Vimeo API provides an interface to access much of the public data from Vimeo. Share videos with your friends. Access privacy settings to share videos with only select people. The API uses RESTful calls and responses are formatted in either XML, JSON, JSONP or serialized PHP", "http://vimeo.com/api/rest/v2", "http://developer.vimeo.com/apis")
apis["AgentRank"] = Learning("AgentRank", "Access to real estate agent sales, forecasts, and reviews from AgentRank.com.", "http://www.agentrank.com:80/api/rest", "http://www.agentrank.com/api/")
apis["CTACustomerAlerts"] = Learning("CTA Customer Alerts", "The service, a companion to the CTA Bus Tracker, gives access to alerts from transitchicago.com highlighting service disruptions and other events that might affect transit service in Chicago. Alerts distribute information about system status, route changes, and news from RSS feeds, ranked by potential to affect transit services and categorized by routes and stations affected.API methods support submission of requests by service category (bus, train, systemwide, etc.), route, and station. Responses include a time-date stamp, route status message and color-coded indicator, plus specific alert content for notifications matching the request parameters.  Detailed alert content specifies affect on handicap-accessible service, if appropriate, and whether the system affect results from planned maintenance.", "http://www.transitchicago.com/api/1.0/", "http://www.transitchicago.com/developers/alerts.aspx")
apis["SanFranciscoCrimespotting"] = Learning("San Francisco Crimespotting", "The service operates independently of the city of San Francisco, Calif., and San Francisco Police Department, but it repackages data from the city&amp;#039;s own crime-mapping program, CrimeWatch. It emphasizes location-aware mapping of crime reports by date, type of offense, police precinct, and related details. Its goal is to aid in discovery of crime activity within the areas of specific homes, schools, and workplaces.API methods allow retrieval of crime reports for specified crime types, police beats, and date ranges. Methods return reports with location information -- street address as well as latitude and longitude -- to aid in mapping.", "http://sanfrancisco.crimespotting.org/crime-data?", "http://sanfrancisco.crimespotting.org/api")
apis["Ribbet"] = Learning("Ribbet", "Ribbet is an online photo editor with free cloud storage, complete editing history, thousands of effects, filters, hand-picked shapes, designer fonts and borders. Ribbet also has bookmarking to allow favorite effects to be stored.With the Ribbet API, developers can integrate the full functionality of Ribbet into their application or website.", "http://www.ribbet.com/app", "http://www.ribbet.com/photo-editing-api")
apis["Rhapsody"] = Learning("Rhapsody", "Rhapsody Web Services (RWS) exposes RhapsodyÂs playlist creation, user listening history, web page mark-up, RSS feeds, REST XML, search API, JavaScript playback API and friendly URLs (e.g. www.rhapsody.com/beck.) WSDL is pending.", "http://webservices.rhapsody.com/", "http://webservices.rhapsody.com/")
apis["Bikko"] = Learning("Bikko", "The service provides training tools and social interactions for bicycling hobbyists. It is under development by avid cyclists from Austin, Texas, to help others track rides and record performance, with plans for route guidance and suggestions. Social networking tools for interactions among cyclists also are anticipated.API methods currently support retrieval of route information with location and altitude as well as speed and power ratings. Returned data support interaction with mapping applications.", "http://bikko.net/route/", "http://blog.bikko.net/?p=71")
apis["AmnestyInternational"] = Learning("Amnesty International", "From their site: Amnesty International is working with the OpenNet Initiative (ONI) to help raise awareness of internet censorship around the world. ts 11 country reports have documented the scope, scale and sophistication of numerous filtering regimes worldwide, and have helped verify the use of US commercial filtering technologies, such as Smartfilter and Websense that are used in some ways to underpin these regimes. Irrepressible.info features a powerful API which can be used to build custom applications using the same database of irrepressible content, currently used to to power our banners.", "http://irrepressible.info/query", "http://irrepressible.info/api")
apis["Greendizer"] = Learning("Greendizer", "Greendizer is a simple REST API that allows you to build invoices, messages, budgets and payments inside any application.Applications invoicers and third party developers can build range from incorporating invoice sending into their workflow, to building dashboards deeply integrated with their billing and CRM systems.Greendizer comes with a set of powerful HTML5 applications - built with this very same API - and makes it easy for them and their users to instantly access their data.It relies exclusively on standards and can be plugged to any existing system. The layout and design of invoices is customizable using XSL.The Greendizer API documentation is available upon request during its beta testing phase.", "https://api.greendizer.com/", "https://www.greendizer.com/docs/")
apis["Connotea"] = Learning("Connotea", "From their site: Free online reference management for all researchers, clinicians and scientists.", "http://www.connotea.org/data", "http://www.connotea.org/wiki/WebAPI")
apis["WebLaws"] = Learning("WebLaws", "The WebLaws API gives developers access to both the WebLaws.org and OregonLaws.org legal glossary. It features responses in JSON and XML, and is offered with no service fees.", "http://www.weblaws.org/api/glossary/v1/API_KEY/", "https://www.weblaws.org/page/api_documentation")
apis["IntegratedEarthDataApplications"] = Learning("Integrated Earth Data Applications", "The service provides geology data and mapping through a set of web services built on the MapService platform of the Open Geospatial Consortium (OGC). That architecture exposes datasets to a number of OGC-compliant desktop clients as well as the service&amp;#039;s own REST and SOAP APIs. Data include datasets for seismograph recordings and geological sample profiles from the System for Earth Sample Registration (SESAR). API methods support queries against XML records of seismology datasets recording earthquakes and other geological events. Methods also support retrieval of analytical data for samples of rock, minerals, and other geological materials by universal identifiers created at the time the samples are collected. Methods for managing samples also allow uploading of new records documenting sample collections for users who have registered accounts with the service.", "http://app.geosamples.org/webservices/", "http://www.iedadata.org/services/webservices")
apis["Bliptv"] = Learning("Blip.tv", "Build apps that use blip.tv, which has features including advanced file management, transcoding, distribution services, and advertising services.", "http://blip.tv/", "http://blip.tv/developers")
apis["Watchdog"] = Learning("Watchdog", "From their site: watchdog.net lets you find out what&amp;#039;s going on in politics and make your voice heard about it. We&amp;#039;re trying to build a hub for politics on the Internet. Data: there&amp;#039;s a lot of great information out there about politics Â district demographics, votes, lobbying records, campaign finance reports Â but unfortunately it&amp;#039;s split across a dozen different web sites and often hidden behind confusing interfaces. We&amp;#039;re pulling all of that together and letting you explore it in one elegant, unified interface. (Plus, we&amp;#039;re sharing all the results in an API so you can come up with new ways to explore it.)", "http://watchdog.net", "http://watchdog.net/about/api")
apis["TradeMe"] = Learning("Trade Me", "Trade Me is a New Zealand-based auction site that claims it&amp;#039;s &amp;quot;where Kiwi&amp;#039;s buy and sell.&amp;quot; The service provides a place to list all sorts of collectibles, electronics and even vehicles. The Trade Me API provides access to listings via its REST interface with many options for data formats. The API also supports OAuth authentication, which can be used in combination with many features that require a login, such as creating listings and bidding on items.", "http://api.trademe.co.nz/{version}", "http://developer.trademe.co.nz/")
apis["IHeartQuotes"] = Learning("I Heart Quotes", "Use the I Heart Quotes API to get a quote of the day to put on your site. You can get geek quotes from sources such as Joel on Software, Paul Graham, Humorix, and more. In addition to geek quotes, you can get one-liner jokes, riddles, sci-fi quotes, religious quotes, literature quotes, popular culture quotes, and more.", "http://www.iheartquotes.com/api/v1/random", "http://www.iheartquotes.com/api")
apis["CancerBioinformaticsInfrastructureObjects"] = Learning("Cancer Bioinformatics Infrastructure Objects", "The service provides an integrated collection biomedical data on cancer. Resources cover a range of detailed, technical information about genes and proteins, along with information about treatments, including clinical protocols, disease ontologies, and drugs. The service gathers data from 23 authoritative sources into one comprehensive repository.APIs expose all Cancer Gene Index data about the structure and behavior important in the disease. Also available are metadata and annotations describing the service&amp;#039;s information and explaining its use. https://wiki.nci.nih.gov/display/caBIO/REST+API+with+Ajax", "http://cabioapi.nci.nih.gov/cabio41/GetXML", "https://wiki.nci.nih.gov/display/caBIO/REST+API+with+Ajax")
apis["JISCMonitoringUnit"] = Learning("JISC Monitoring Unit", "The service is provided by the UK government organization that champions integration of technology within higher education. Its role includes overseeing technology initiatives it funds within UK colleges and universities, which file required reports tracking their service performance against established metrics. The Monitoring Unit provides access to reported data, both to JISC to measure service usage over time and to inform interested third parties.API methods support search against the database of technology programs within institutions and sites monitored by JISC. Methods allow retrieval of summaries across sites or detailed reporting on individual sites.", "http://data.jiscmu.ac.uk/rest/organisations", "http://www.jiscmu.ac.uk/api/")
apis["SpeakingURL"] = Learning("Speaking URL", "Speakingurl.com is a free web service capable of converting arbitrary, multilingual text into a human and SEO friendly URL. This RESTful service accepts simple JSON formatted GET calls and returns a JSON formatted URL. The API currently supports English, French, German, Spanish, Russian, and Chinese.", "http://speakingurl.com/", "http://speakingurl.com")
apis["FreeGeoIP"] = Learning("FreeGeoIP", "The service provides search access to a database of geolocation information for IP addresses and host names. An application can query with an IP or host name and retrieve the geographic location of the associated server.API methods support submission of a query specifying either IP address or host name and the desired output format for the data. Returned data include the city code and name, the region code and name (e.g., U.S. state or Canadian province), the country code and name, postal code, latitude and longitude.", "http://freegeoip.net/", "http://freegeoip.net/static/")
apis["Everlapse"] = Learning("Everlapse", "Everlapse is an image and photo sharing application. Everlapse allows users to share images, photos, and slideshows with others. The Everlapse API allows developers to access and integrate the functionality of Everlapse with other applications. Some example API methods include retrieving user IDs and showing clips and photos.", "https://everlapse.com/api/v1", "http://developer.everlapse.com/")
apis["SKGAGolfHadicap"] = Learning("SKGA Golf Hadicap", "The SKGA Golf Handicap is a mobile app that allows users to list and lookup their handicaps on different Slovakian courses. The API itself is RESTful with responses formatted in XML.", "kga-radim.rhcloud.com/rest", "http://skga-radim.rhcloud.com/rest/members/1")
apis["CapitolWords"] = Learning("Capitol Words", "The service extracts language daily from the Congressional Record, which reports the full text of deliberations in the U.S. House of Representatives and Senate. Applications can query those search terms to receive mentions, by title and speaker, from 1996 forward.Methods support retrieval of statements in Congress by date, phrase, or free-text match. Retrieval can also specify which chamber of Congress, the speaker&amp;#039;s state and/or party affiliation, or the name of a speaker to select for biographical data.", "http://capitolwords.org/api/", "http://capitolwords.org/about/")
apis["mapme"] = Learning("mapme", "mapme.at provides tools to allow users to store and share their location history online. You can use it to share with your contacts places you visited on holiday or to show the path you ran in a marathon. There are many ways to update your location, including iPhone apps, via email and using the FireEagle API.", "http://mapme.at/api/", "http://blog.mapme.at/developer-api/")
apis["Veoh"] = Learning("Veoh", "Veoh has both Veoh.com and VeohTV. Veoh.com is for video hosting, aggregating, and sharing (700,000+ uploaders, independent producers, major networks). VeohTV is an app where you play videos or download high-res video, and VeohTV has a TV-like guide with search and organization features.", "http://www.veoh.com/rest/v2/", "http://www.veoh.com/rest/v2/doc.html")
apis["CIPFRENATO"] = Learning("CIPF RENATO", "The service provides a RESTful interface to RENATO (REgulatory Network Analysis TOol) which provides network-based analysis to identify regulatory elements common to a list of genes. It is intended for interpretation and visualization of information about gene regulation by mapping genes submitted to the regulatory network and extracting connections. It also highlights over-representation of specific regulatory connections among genes in the list.API methods support submission of a list of genes with parameters to specify regulatory connections of interest. Methods generate data showing transcriptional and post-transcriptional regulatory connections and highlighting regulatory links common among genes within the specified list.", "http://ws.bioinfo.cipf.es/cellbase/rest/", "http://bioinfo.cipf.es/docs/renato/restful_web_services")
apis["GoogleChart"] = Learning("Google Chart", "The Google Chart API lets you dynamically generate charts with a URL string and embed these charts on a web page, or download the image for local or offline use. The Google Chart Tools enable adding live charts to any web page. They provide advantages such as a rich gallery of visualizations provided as image charts and interactive charts and they can read live data from a variety of data sources.Users embed the data and formatting parameters in an HTTP request, and Google returns a PNG image of the chart. Many types of chart are supported, and by making the request into an image tag the chart can be included in a web page.", "http://chart.apis.google.com/chart", "https://developers.google.com/chart/")
apis["GEMET"] = Learning("GEMET", "The service maintains a database of multi-language thesauri, i.e. collections of terms with semantic relationships such as equivalent in meaning, broader or narrower in meaning, or associated in some other way. It provides access to each documented thesaurus and to lists of thesauri. Maintaining thesauri across different languages helps to encourage interoperability through connections between terms expressing similar concepts in different languages.API methods support retrieval of concept lists from one or more thesauri at multiple levels, either top-most concepts, all concepts, or subsets. Methods also support submission of one concept and retrieval of all concepts from the database related to the one in the request, including those in different languages.", "http://www.eionet.europa.eu/gemet/", "http://taskman.eionet.europa.eu/projects/zope/wiki/GEMETWebServiceAPI")
apis["PHINVADS"] = Learning("PHIN VADS", "The service provides access to managed vocabulary resources of the Public Health Information Network (PHIN), which help to standardize terminology and information interactions among practitioners and promote interoperability of public health applications. The Vocabulary Access and Distribution Service (VADS) supports these interactions by defining web methods and other functional elements for transferring data between applications.API methods support search against the vocabulary assets and retrieval of term listings, either individually or in bulk. Methods also support direct object access and retrieval of related objects. The API also allows validation of an application&amp;#039;s terminology against the PHIN vocabulary.", "http://phinvads.cdc.gov/vocabService/v2", "http://phinvads.cdc.gov/vads/developersGuide.action")
apis["WhoismyRepresentative"] = Learning("Who is my Representative", "From their site: A simple tool for a simple task. Here you can look up your representation in the U.S. government. Simply enter your zip code or zip+4 (for better results) and information on your representation in Congress will be returned.", "http://whoismyrepresentative.com/", "http://whoismyrepresentative.com/api")
apis["QuizletFlashcards"] = Learning("Quizlet Flashcards", "The Quizlet API lets developers use Quizlet&amp;#039;s vast database of over 200 million flashcards covering every possible subject. With over 2 million registered users and more than 7 million flashcard sets, Quizlet is the largest flash cards and study games website.The Quizlet API lets users search, download, edit and upload flashcard sets for use in their own applications. Developers can also mark sets as favorites (which show up on the website), create, edit and join groups that can be used for grouping both classmates and sets. Developers can also search for definitions and more.The API uses RESTful calls and responses are formatted in JSON. Quizlet&amp;#039;s API also suppors OAuth2 which allows developer to authenticate and act on behalf of Quizlet users.", "https://api.quizlet.com/2.0/", "https://quizlet.com/api/2.0/docs/")
apis["SNOCAP"] = Learning("SNOCAP", "From their site: Through the SNOCAP proprietary Digital Registry, artists and labels are empowered to easily promote and sell their music through digital retailers or through their own unique artist store. In turn, these retailers have a growing inventory, offering more music to more music fans. The MyStore Search API allows web applications to search for SNOCAP MyStores and display them on a web page. The API accepts artist names and/or track titles passed as URL parameters and returns results as an object in javascript object notation (JSON). This interface is useful for applications that wish to render MyStore storefronts on web pages based on contextual metadata matching.", "http://restsearch.snocap.com/RESTSearch/snocapsearch.php", "http://snocap.wordpress.com/software/mystore-search-api/")
apis["ConvertAPIWeb2Image"] = Learning("ConvertAPI Web2Image", "Web2Image lets developers create a screen capture image from any URL. The ConvertAPI Web2Image API is a pay-per-credit API that allows website URLs to be converted into various image formats. Available image formats are BMP, TIFF, JPG, and PNG. Pricing begins at $15 for 1,000 calls.", "http://do.convertapi.com/web2image", "http://www.convertapi.com/web-image-api")
apis["Dirble"] = Learning("Dirble", "Dirble is an open radio station directory. It stores internet radio stations by category or by country. The API lets users get the stations for a specific category or a specific country. The API uses RESTful calls and responses are formatted in XML and JSON.", "http://dirble.com/dirapi/", "http://dirble.com/api")
apis["Etsy"] = Learning("Etsy", "Etsy is an online marketplace for buying and selling handmade things. The Etsy API lets you develop applications built on this fast growing e-commerce platform.", "http://openapi.etsy.com/v2", "http://www.etsy.com/developers/")
apis["ZapierStatus"] = Learning("Zapier Status", "Zapier is an application that integrates applications together. Zapier Status is a dashboard that displays the current status of every API that Zapier integrates. Zapier Status&amp;#039;s dashboard also allows users to get updates via multiple channels about the status of APIs.The Zapier Status API allows developers to access and integrate the data and status of the APIs with other applications. The main API method is retrieving the status of APIs.", "https://zapier.com/status/json/", "https://zapier.com/status/")
apis["LibraryofCongressPrintsPhotographs"] = Learning("Library of Congress Prints & Photographs", "The service is part of a re-release by the Library of Congress of its Print &amp; Photographs Online Catalog. It provides access to a rich image collection for incorporation into other applications. Applications can search the catalog by description term, and if desired within particular collections, for specific image types, etc. Results can include just descriptive metadata or the images themselves, presented as a list, grid, slideshow, or gallery.API methods support specification of a search query, either across the entire collection or restricted to certain elements, along with optional filtering criteria like subject and format. Methods also enable structuring of results and retrieval of related items.", "http://www.loc.gov/pictures", "http://www.loc.gov/pictures/api")
apis["TweetBoner"] = Learning("TweetBoner", "The service provides a list of the users followed by a Twitter user based on the number of tweets from that source marked as favorites. The preferred users are ranked in order by number of tweets favorited, giving a list in sequence by preference. API methods support submission of a Twitter username with optional designation of desired output format. Methods return a listing of users preferred for that account. Default formatting in HTML shows each preferred username and account photo plus a count of tweets from that user marked as favorites by the username specified in the request. Various error messages are possible, depending on conditions of the requested username.", "http://tweetboner.biz/", "http://tweetboner.biz/api")
apis["Enrycher"] = Learning("Enrycher", "The service provides text analysis and processing at two levels. Shallow text processing reviews a sample to detect topic and keyword coverage and extract named entities, including people, places, organizations, and some numerical entities like percentages and amounts of money. Deep text processing attempts to resolve named entities detected with standard sources and linked datasets, including DBpedia, while also merging references to identical named entities, disambiguating word senses, and performing other complex semantic processing.API methods support identification of named entities within sample text and merging of separate references to a specific entity. Methods also detect matches for those entities within standard repositories, disambiguation of references to different entities, categorization, and export to RDF formats.", "http://enrycher.ijs.si/run", "http://ailab.ijs.si/tools/enrycher/")
apis["AdobeonAIRBusTour"] = Learning("Adobe on AIR Bus Tour", "From their site: You can use these APIs and feeds to keep up with the latest news and content from the [Adobe on AIR] tour, or to build web and AIR based applications and mash-ups. The Adobe Integrated Runtime (AIR), previously referred to by its code-name of &amp;quot;Apollo&amp;quot;, is a cross-operating system runtime that allows web developers to leverage their existing web development skills (such as Flash, Flex, HTML and JavaScript) to build and deploy web applications and content to the desktop.", "http://onair.adobe.com/services", "http://www.adobe.com/devnet/air/documentation.html")
apis["LongURLPlease"] = Learning("Long URL Please", "The Long Url Please service expands shortened url&amp;#039;s. The API currently supports 30 url shortening services including reallytinyurl.com, rubyurl.com, short.ie, smallr.com, snipr.com and many more.", "http://www.longurlplease.com/api/v1.1", "http://www.longurlplease.com/docs")
apis["CEERN"] = Learning("CEERN", "CEERN is the Conservation &amp; Environmental Education Resource Network, a complete online network of conservation and environmental education resources - a clearinghouse of lesson plans, videos, programs, events, destinations and ideas. The CEERN API is a RESTful API that allows developers to create their own applications that use the CEERN database.", "http://api.resourcecommons.org/services/rest", "http://api.resourcecommons.org/")
apis["PythonPackageIndex"] = Learning("Python Package Index", "The PyPI API allows users to interoperate with the Python Package Index, a publicly-available repository of software for the Python programming language. Over 18,000 code packages are stored in the Package Index. Both XML-RPC and JSON versions of the API are available.", "http://pypi.python.org/pypi", "https://pypi.python.org/pypi")
apis["FedSpendingorg"] = Learning("FedSpending.org", "From their site: A tool for the public and journalists to find out about US government spending. The data is largely from two sources: the Federal Procurement Data System, which contains information about federal contracts and the Federal Assistance Award Data System, which contains information about federal financial assistance such as grants, loans, insurance, and direct subsidies like Social Security", "http://www.fedspending.org", "http://www.fedspending.org/apidoc.php")
apis["BurningMan"] = Learning("Burning Man", "Burning Man is an art event and temporary community &amp;quot;based on radical self expression and self-reliance&amp;quot; that takes place each summer at Black Rock City of Nevada It has its own API that gives users all sorts of data pertaining to it. Features include access to data concerning maps, events, themes, and more.", "http://earth.burningman.com/api/", "http://earth.burningman.com/api/docs/")
apis["tagdef"] = Learning("tagdef", "Tagdef.com gives users an easy way to define and look up Twitter hashtags. Through its RESTful API, users can retrieve the definitions, returned in XML format, and integrate the data into their website or webapp.", "http://api.tagdef.com/", "http://api.tagdef.com/")
apis["Tagalus"] = Learning("Tagalus", "Tagalus lets you declare the meaning of Twitter hash tags. There can be more than one version, with users voting up the best definition. You can also add and view tags on its site. The Tagalus API accesses both getting and setting of definitions.", "http://api.tagal.us", "http://blog.tagal.us/api-documentation/")
apis["EBI"] = Learning("EBI", "The EBI Web services let you access nucleic acid, protein sequence, and macromolecular structure data. Choose from about 35 EBI Web Services. The European Bioinformatics Institute (EBI) is part of the European Molecular Biology Laboratory (EMBL). The Web services offer DNA and protein sequences, text mining, structure comparisons, various BLASTs, transmembrane topology predictions, microarray searching, and more.", "http://www.ebi.ac.uk", "http://www.ebi.ac.uk/Tools/webservices/")
apis["Destinde"] = Learning("Destinde", "With Destinde you can find new articles about travel, vacation and leisure time. You can include Destinde RSS feeds in applications. Feeds are publications like USA Today, New York Magazine, and others more specific to travel.", "http://www.destinde.com", "http://www.destinde.com/Partners")
apis["PDBj"] = Learning("PDBj", "Use the Protein Data Bank Japan (PDBj) API to get protein sequence and structure data, useful in biotech research and other research. Protein Data Bank Japan maintains a repository of macromolecular structures and offers tools, in collaboration with the RCSB in the US and the MSD-EBI in the EU. PDBj is supported by JST-BIRD. The head of PDBj is a professor at Osaka University.", "http://rest.pdbj.org", "http://pdbj.org/#!help?PID=515")
apis["ImpactStory"] = Learning("ImpactStory", "The service provides a number of indicators for the social impact of published works, including traditional scholarly papers but also blog posts and other more casual publications. It is part of a movement for altmetrics intended to indicate affects of an author&amp;#039;s publications on a discipline based on statistics like number of times a work is cited by other authors, how often it is downloaded and saved, and the frequency of conversations in social media outlets about the work. Code embedded in the web version of a work updates the service&amp;#039;s statistics when that work is accessed, leading to a cumulative measure of its overall popularity and potential influence.API methods begin with embedded identifiers for the work and the namespace where it is published. Methods allow retrieval of cumulative influence statistics, or altmetrics, by combining data about the work from a number of tracking services. Methods also support grouping of related individual works into collections to be tracked as a whole.", "http://api.impactstory.org", "http://impactstory.org/api-docs")
apis["JavaGameTome"] = Learning("Java Game Tome", "The Java Game Tome (JGT) API lets you access the Java Game Tome, providing game listings and more. You can get games by topic, count the total number of games, and search games. REST interface is not well documented, but a PHP library is provided.", "http://api.javagametome.com/api", "http://www.javagametome.com/api.html")
apis["Unfuddle"] = Learning("Unfuddle", "From their site: Provides developers with a very simple medium for creating new Unfuddle-based applications or integrating Unfuddle with their existing development workflow. It offers direct access to practically all the features of your Unfuddle account. Unfuddle is a secure, hosted software development environment and project management solution for small software development teams.", "http://mysubdomain.unfuddle.com/api/v1", "https://unfuddle.com/support/docs/api")
apis["WorldCatxISBN"] = Learning("WorldCat xISBN", "The web service associates library catalog records from WorldCat with related resources based on ISBN. Submitting an ISBN retrieves a list of ISBNs for records related by an algorithm from OCLC, the primary organization managing professionally cataloged bibliographic records, along with selected metadata from those records. The linkages support &amp;quot;FRBRized&amp;quot; grouping of related editions, such as other expressions of the same work and manifestations of the same expression.API methods get records and/or metadata for resources related to the one whose ISBN is submitted. Methods also support mapping of other books-related identifiers, such as xOCLCNUM and convert between 10- and 130-digit ISBNs.", "http://xisbn.worldcat.org/webservices/xid/isbn/", "http://xisbn.worldcat.org/xisbnadmin/index.htm")
apis["NationalWeatherServiceNDFD"] = Learning("National Weather Service NDFD", "The National Oceanic and Atmospheric Administration (NOAA) provides the public, government agencies, and commercial enterprises with XML data from the National Weather Service&amp;#039;s (NWS) digital forecast database.This API is available through SOAP or REST protocols, and provides an array of parameters allowing users to create customizable queries to the digital forecast database. Users can search the database by specific latitude/longitude, time, unit of measurement, and weather parameters. This service is provided free of charge by the U.S. government.Users interested in REST implementations of this API can find documentation [[http://graphical.weather.gov/xml/rest.php here]].", "http://graphical.weather.gov/xml/sample_products/browser_interface/ndfdXML.htm", "http://graphical.weather.gov/xml/")
apis["dopplr"] = Learning("dopplr", "From their site: Dopplr lets you share your travel plans privately with a group of friends and colleagues whom you have chosen. It then tells you when people you know will be in the same cities. It also reminds you of people who live in the places you&amp;#039;re planning to visit. The API is based on Google AuthSub. We intend to replace this AuthSub clone implementation with OAuth in the near future.", "https://www.dopplr.com/api/", "http://dopplr.pbworks.com/w/disabled/tos_violation")
apis["SubwaySubCard"] = Learning("Subway SubCard", "The unofficial Subway SubCard available in the UK allows cardholders to collect points on all Subway purchases and redeem them for free subs. The card functions by using a JSON API to send data. Once exposed, the API can be used by cardholders to access their data and even integrate it into applications.This API has been made available by an individual not affiliated with Subway.", "http://subwayeu.transactortech.co.nz/j2ee/servlet/JSONTraderEnquiry;interface=wifi", "http://www.ifc0nfig.com/exposing-the-subway-subcard-api/")
apis["KarniyarikProductSearch"] = Learning("Karniyarik Product Search", "Karniyarik is a discovery shopping engine targeting audience in Turkey. Its API provides almost any products that are being sold in Turkey with structured information. It offers a RESTful interface.", "http://www.karniyarik.com/rest/{xml/json}/{product/car}", "http://www.karniyarik.com/api.jsp")
apis["Keypic"] = Learning("Keypic", "The protects against spam and other fraudulent and unwanted use of an application&amp;#039;s interactive features, such as submitted comments, without forcing users to solve CAPTCHA puzzles. Rather than confronting users with a test to prove they&amp;#039;re human, the service aims to make that determination by evaluating their activity on the protected site. It is implemented as a plug-in for WordPress and other platforms and via API.API methods support interaction with the web service to report spam and verify the form submitting requests. Methods also support requesting code to detect spammer behavior as an iframe or embedded image.", "http://ws.keypic.com", "http://keypic.com/?tid=homepage_resources")
apis["BolivenPatents"] = Learning("Boliven Patents", "Use Boliven APIs to integrate patent data into a website or application. The REST API provides developers access to Boliven&amp;#039;s store of 55 million+ patent document data in either JSON or XML data. Boliven.com hosts a collection of over 100 million indexed and digitized patents and other science documents.More data sources coming online soon including drugs, medical devices, publications, company information, trademarks and more.", "http://www.boliven.com/api/patents/", "http://www.boliven.com/bws/patents_api")
apis["SFpark"] = Learning("SFpark", "The service provides continuously updated information about locations and pricing of available parking in selected areas of San Francisco. DataSF, the city government&amp;#039;s open data initiative, collects and distributes the information to help drivers choose when to drive and when to choose other transportation options. Data is provided by off-street parking providers and by sensors that report status of individual street parking spaces as occupied or vacant.API methods support submission of search parameters, including location (latitude/longitude and preferred radius), type of parking desired (street or off-street), and whether or not to include rate information. Returned data include the locations of currently available parking, the type, and the applicable rate, if requested.", "http://api.sfpark.org/sfpark/rest/availabilityservice", "http://datasf.org/story.php?title=sfpark-real-time-parking-availability-and-pricing-api")
apis["Acromine"] = Learning("Acromine", "The service provides access to a dictionary of abbreviations and matching long-form terms created by automatic text mining of the whole MEDLINE abstract collection as of August 2009. The text mining completed automated analysis of natural language documents to detect and document relationships or patterns that would be difficult or impossible for human readers to detect. The API allows look-up against a compilation of over 68,000 acronyms and 450,000 full terms.API methods support submission of either abbreviations or full terms to the Acromine dictionary, which returns matches including the standard form of the term, frequency of occurrence in the texts mined, and the year of first occurrence. Returned data also provides variants or similar terms found, with their frequency and first occurrence.", "http://www.nactem.ac.uk/software/acromine/dictionary.py", "http://www.nactem.ac.uk/software/acromine/rest.html")
apis["Pin039n039Tag"] = Learning("Pin &#039;n&#039; Tag", "Pin &amp;#039;n&amp;#039; Tag is a location information service. Pin &amp;#039;n&amp;#039; Tag provides information about locations for tagging, application integration, and mapping.The Pin &amp;#039;n&amp;#039; Tag API allows developers to access and integrate the functionality of Pin &amp;#039;n&amp;#039; Tag with other applications. Public documentation is not available; interested developers should email support@pinntag.me for API access.", "http://api.pinntag.com/", "http://info.pinntag.com/")
apis["RawSugar"] = Learning("Raw Sugar", "Note: As of December 2006 Raw Sugar is no longer in business. For more see [[http://www.techcrunch.com/2006/12/30/rawsugar-in-deadpool/ TechCrunch]].", "http://www.rawsugar.com/api", "http://www.rawsugar.com/")
apis["BeliefNetworks"] = Learning("BeliefNetworks", "It&amp;#039;s about The ConceptsThe BeliefNetworks service is about discovering concepts locked within data such as unformatted text documents, HTML documents, Word documents, PDF files, RSS feeds and XML representations dumped from databases. ItÃ¯Â¿Â½s this simple idea, coupled with automation, which provides a foundation for your next-generation, intelligent web application.The discovery of concepts is fundamental to the BeliefNetworks service. If you are familiar with search text discovery, then consider a starting point of &amp;quot;I&amp;#039;m a little teapot&amp;quot;. This, in turn, is the basis for Ã¯Â¿Â½Finding Not SearchingÃ¯Â¿Â½.Ã¯Â¿Â½ Keywords, in this context, have no relevance.However, that&amp;#039;s just scratching the surface. Once DataChasm has mined a document for concepts, or conceptually mapped its concepts, the document becomes a resource for richer search features enabled in applications powered by BeliefNetworks. Up until now, conceptually mapped documents were the potential endpoints of a search scenario, that is, a document to be discovered. However, BeliefNetworks applies an interesting twist by making the conceptually mapped document also the starting point of a search. For example, a conceptually mapped document can be the target of the statement &amp;quot;Find me all documents that are like this document&amp;quot;. And, as soon as you consider that documents don&amp;#039;t have to be literally documents, that they can actually be unstructured information that represents anything in your domain, then the possibilities begin to multiply.Finding Not SearchingTMImagine youÃ¯Â¿Â½re trying to find all documents related to a document about &amp;quot;The History of Military Aircraft&amp;quot; using a straight-up search appliance. First, you read the document closely, extracting the concepts you believe represent the essence of the document, and then you start a search with those concepts as search keywords. We&amp;#039;ve already seen an example of the subtle differences between discovery of search keywords and the discovery of higher-level conceptual meaning. What can you expect? You&amp;#039;ll probably find a lot documents about camels, for starters.With a BeliefNetworksÃ¯Â¿Â½ application, that last step might actually be as simple as &amp;quot;pushing a button&amp;quot;. The action of that button would extract concepts that you would otherwise be forced to do manually, and then search for other documents that represent similar concepts. With a BeliefNetworksÃ¯Â¿Â½ application, if you started with a document on the History of Military Aircraft, you might get results ranging from World War Aircraft and Classic Aircraft to Lethal Aircraft. Bingo.Recommendations based on what you know.That was a discovery scenario. Let&amp;#039;s think about a recommendation scenario. Suppose you are building an application, the premise of which is that you can provide value to a user base by matching pet owners to pet service providers (groomers, walkers, stables, supplies vendors, etc). Both pet owners and pet service providers can register in your system, but they are two separate groups that are managed separately by your application.There are affinities between the two groups that, if discovered, may lead to greater user satisfaction with your service, good buzz, more customers, and ultimately higher profits for you. For instance, obviously you don&amp;#039;t recommend a stable to someone looking for a kennel, but a person looking for a kennel for Roscoe for the weekend may have some particular likes and needs that can be matched to the right kennel with minimal effort for Roscoe&amp;#039;s owner.In this case, the &amp;quot;documents&amp;quot; scanned for concepts are pet owner profiles they freely enter at registration time describing themselves and their pets (with appropriate confidence the details won&amp;#039;t be sold or revealed). Profiles would be fed, as created, into the conceptual mapper. Meanwhile, pet service providers would fill out some forms describing their offerings that ultimately could be rendered as XML documents. As you can see, there are a number of approaches for each major actor in your application.Now, imagine a pet-services discovery service powered by BeliefNetworks. The conceptual information for all pet owners is mapped and placed into one silo, and likewise another silo of conceptual information is built for all pet service providers. Finally, we return to Roscoe&amp;#039;s owner who pushes a button on the BeliefNetworksÃ¯Â¿Â½ powered application to start searching for recommendations in the pet services silo based upon the conceptual information gleaned from their owner&amp;#039;s profile.It could also work another way. Suppose you offer anonymous direct marketing, something that would inform pet owners of goods and services but would not expose their personal data to the service providers. This approach would not be as annoying as a phone call, but could be a message on their customer page linking them to the service provider that they can click on if theyÃ¯Â¿Â½re interested. Conversely, the pet service provider, interested in buying a batch of push marketing, pushes a button and your service discovers pet owners most likely to be interested in their products and services by asking BeliefNetworks to match the pet service provider&amp;#039;s profile to the most conceptually relevant profiles of pet owners.The DataChasmTM ServiceVersion 1.0 of BeliefNetworksÃ¯Â¿Â½ DataChasmÃ¯Â¿Â½ web service provides RESTful programmatic conceptual discovery against two large data repositories - The World Wide Web and Twitter. No additional effort is required on the part of the programmer other than to make the call. These two data repositories are most useful for interesting search applications and mashups. As an example, the MashMeUp web application illustrates the functionality of concept discovery with Twitter and web site recommendations.The DataChasm web service also provides the means to build your own silos of conceptual information, closely tuned to your own application business needs. Once built, those silos become the foundation for recommendation features, that until now, you&amp;#039;ve only wished you could have.But, to use the APIs properly, some conceptual information should be introduced (pun intended).Concepts, Concepts, ConceptsWe started with concepts, and now we return to them. Concepts are key to successful use of the DataChasm service. We like to think of concepts as information thumbnails (actually, we consider them a higher cognitive learning process, but that is another discussion). The habit of pushing simple keyword search, while actionable by the APIs, isnÃ¯Â¿Â½t as successful as starting with a document that expresses and represents the concepts you are interested in discovering. You&amp;#039;ll find many APIs accept a generic &amp;quot;text&amp;quot; parameter. This may refer to as little or as much text as you need to represent your concepts, or it can refer to a fully qualified URL which points to a document or resource on the web (think article, publication, XML output from some other API) that encapsulates the concepts. For instance, you may have better results pointing to an article on The Cramps for a punk band search than simply the text &amp;quot;The Cramps&amp;quot;.RecommendationsA recommendation is the relationship between your starting point (text or URL) and the haystack of information with which you wish to establish an affinity with that starting point in order i to discover the Ã¯Â¿Â½needlesÃ¯Â¿Â½, sorted for relevance. What BeliefNetworks believes to be the most relevant possibilities are returned first; if you wish, you can go deeper into the stack with successive queries. For instance, when you ask for recommendations from Twitter, you are returned ongoing conversations considered most relevant to your conceptual starting point. We like to call that Ã¯Â¿Â½tweaningÃ¯Â¿Â½; in other words, bringing meaning to tweeting.&amp;quot;Weight&amp;quot; is the term we use for the degree of relevance a recommendation has to your chosen starting point. You&amp;#039;ll see various weights returned for recommendations, and you can build logic around this such as sorting, cut-off, etc.Custom APIsOur custom APIs allows you to build applications against your own business data. You can define silos of information by business need, seed them and maintain them with resources, and then query them for recommendations, just like you can with our Twitter and Web APIs. This is a powerful tool that allows you to discover conceptual relationships of the highest relevance against between your own repositories of business data.One Corpus, Many CorporaThe &amp;quot;Corpora&amp;quot; referred to by BeliefNetworksÃ¯Â¿Â½ APIs are your information silos. You create a corpus to hold the results of resources that are related by conceptual consistency. For example, if you were Amazon, one corpus might hold Books, while another might hold Reviewers. A resource list is typically provided at creation time. The corpus resources are subsequently managed and updated as resources come and go. Every 24 hours, DataChasm crawls any new resources for addition to, and removes all those marked for deletion from, your corpus.Once a corpus is created, you may begin to query it for recommendations.", "http://beliefnetworks.net/bnws/", "http://beliefnetworks.net/bnws/")
apis["SoundCloud"] = Learning("SoundCloud", "SoundCloud is the leading audio platform that enables anyone to upload, record, promote and share their sounds across the web. The SoundCloud API makes most of the SoundCloud features from [[SoundCloud.com]] available to app developers. With the help of its SDKs it&amp;#039;s easy to integrate functionality like audio sharing and recording directly into iOS, Android and web apps.", "http://api.soundcloud.com", "http://developers.soundcloud.com")
apis["WeFeelFine"] = Learning("We Feel Fine", "From their site: Since August 2005, We Feel Fine has been harvesting human feelings from a large number of weblogs. Every few minutes, the system searches the world&apos;s newly posted blog entries for occurrences of the phrases &quot;I feel&quot; and &quot;I am feeling&quot;. When it finds such a phrase, it records the full sentence, up to the period, and identifies the &quot;feeling&quot; expressed in that sentence (e.g. sad, happy, depressed, etc.). The result is a database of several million human feelings, increasing by 15,000 - 20,000 new feelings per day.", "Base URL: http://api.wefeelfine.org:8080/ShowFeelings?", "http://www.wefeelfine.org/api.html")
apis["OctopartElectronics"] = Learning("Octopart Electronics", "Use the Octopart Search API to query the Octopart database for parts. Octopart is a search engine for electronic parts. The Octopart Search API returns a JSON object with a response and also has an optional Javascript download. On the main site, you can search for parts, get a datasheet, price, availability listing, and then click a link to Buy Now.", "http://octopart.com/api/v3/", "http://octopart.com/api/home")
apis["lukup"] = Learning("lukup", "Users can enhance their apps using lukup APIs for cross platform messaging, search, news feeds, contacts, location, etc. lukout is a location based search and messaging widget for mobile phones. lukup provides APIs to enable applications &amp;#039;written once, to run on multiple consumer devices (mobile phones, desktops, etc)&amp;#039; and enable them to connect to multiple social networks (facebook, twitter, google, yahoo). Documentation is provided for a RESTful API with responses in JSON. A JavaScript API is also available.", "http://widgets.lukup.com:1024/social/rest/activities/", "http://lukup.wikispaces.com/API+for+REST+services")
apis["DigitalNZ"] = Learning("DigitalNZ", "Find, share and use New Zealand&amp;#039;s digital content lead by the National Library of New Zealand. Access to database of metadata that comes from various institutions around New Zealand including content from government departments, publicly funded organisations, the private sector, and community groups.", "http://api.digitalnz.org/", "http://www.digitalnz.org/developers")
apis["CivicAppsRestaurantInspections"] = Learning("CivicApps Restaurant Inspections", "The service provides safety inspection reports from restaurants in Multnomah County, Oregon, which contains the city of Portland. Default results provide the 25 most recent reports by county inspectors, allowing evaluation of inspection activity during the period. Results cannot be limited to a specific restaurant, however.API methods provide safety inspection scores along with restaurant name and location (both address and geolocation coordinates) as well as inspector name, date, and related detail. Results can be adjusted for a different record count than the default or a specific date range, specified as start date and optional end date.", "http://api.civicapps.org/restaurant-inspections/", "http://www.civicapps.org/datasets/restaurant-inspections")
apis["Yebol"] = Learning("Yebol", "Yebol is a new semantic search engine that currently has 10 million search terms and growing. From the website: &amp;quot; Yebol allows for a multi-dimensional search result instead of the normal one-dimensional search seen by most web search engines today.  This provides a more accurate summary of top sites and categories; a wider array of related search terms; a longer and richer expansion for query results; and a deeper base of links and keywords in search result pages.&amp;quot;", "http://www.yebol.com/yebol_api?api=", "http://www.yebol.com/yebol_apis.htm")
apis["KDFBillionTon"] = Learning("KDF Billion-Ton", "The Knowledge Discovery Framework (KDF) service from the U.S. Department of Energy provides summaries and research data on energy production by conversion of biomass. It gives projections of production and supplies of biomass feedstocks, which may represent business opportunities such as building a refinery for biomass energy. The service summarizes feedstock crop potential, transportation routes, and  related factors to facilitate analysis of the most profitable opportunities for developing biomass energy facilities.API methods provide data such as the market prices of refined biofuels, the prices of agricultural crops with potential for conversion to bioenergy sources, and similar variables for specified time periods. Methods also support analysis of probabilities for certain supply and price combinations within particular time periods.", "https://bioenergykdf.net/appsapi/resources/", "https://bioenergykdf.net/apidocs/BillionTonAPI")
apis["NOAAHistoricalObservingMetadataRepository"] = Learning("NOAA Historical Observing Metadata Repository", "The service provides metadata describing stations maintained by the U.S. National Oceanic and Atmospheric Administration (NOAA) for monitoring weather conditions. It does not provide measurements of weather logged by the stations, rather it gives station locations and describes their surrounding environments. Location is specified as two-letter codes for U.S. state or Canadian province and latitude/longitude pair. Additional conditions noted include elevation, nearby rivers or lakes, etc.API methods support retrieval of descriptive metadata about a weather station, either by NOAA ID value or name, with dates when conditions were assessed. Methods also retrieve stations within a specified state or country and descriptive data recorded during particular date ranges.", "http://www.ncdc.noaa.gov/homr/services/station", "http://www.ncdc.noaa.gov/homr/api")
apis["Pachube"] = Learning("Pachube", "Pachube enables you to store, share and discover real-time sensor, energy and environment data from buildings or other devices. Pachube provides most of its functionality through its API, rather than through its web site. Plug-in to participating projects in real time so that, for example, buildings, interactive environments, networked energy meters, virtual worlds and mobile sensor devices can all talk to each other. Real-time data available. Pachube makes use of Extended Environments Markup Language (EEML), which extends the construction industry protocol IFC.", "http://api.cosm.com/", "https://cosm.com/docs/v2/")
apis["Xurrency"] = Learning("Xurrency", "Use the Xurrency API to obtain exchange rates. Use the data as an input in your app or let your app&amp;#039;s users query the exchange rate. Use the SOAP option, the RSS option, or edit a URL to get currency conversion information.", "http://xurrency.com/api", "http://xurrency.com/api")
apis["Kasabi"] = Learning("Kasabi", "Kasabi is a data marketplace that enables developers to get ready access to both free and commercial data sources. Kasabi provides data hosting, standard APIs for accessing all datasets, as well as the ability for the community to create new APIs over data in the marketplace. The APIs use RESTful calls and response formats include XML and JSON. Kasabi is currently in private beta.", "http://api.kasabi.com", "http://kasabi.com")
apis["DayDetails"] = Learning("DayDetails", "The service provides historical and trivia information pertinent to a specified calendar date. It calculates equivalents for the entered data according the the Islamic, Iranian, and other calendars and time comparisons for various locations. Calculations also include duration from the specified date to the current date in weeks, days, hours, and seconds.", "http://daydetails.com/general.php?", "http://daydetails.com/about.php")
apis["BBAWPlaces"] = Learning("BBAW Places", "The service analyzes text submitted to identify place names within the region of Germany known as Prussia. It interprets text and names according to usage from the 19th century, as recorded in a gazaetteer resources compiled by the provider&amp;#039;s research project. It helps with analysis of text from the relevant period and specific to the region.API methods accept submission of sample text encoded as Unicode and return the place names recognized along with their locations within the submitted text. Methods allow formatting of output as xml, json, or plain text.", "http://pdr.bbaw.de/pdrws/places?text=", "http://pdr.bbaw.de/pdrws/places?doc=api")
apis["Feedoor"] = Learning("Feedoor", "From their site: Feedoor is the ultimate feed service where you can add many items, create and merge many feeds from external sources with different feed formats (RSS, ATOM, RDF) in one single feed. You can also customize the look and the feel of your feed the way you want.", "http://feedoor.com/api", "http://feedoor.com/go/developers")
apis["BOLT"] = Learning("BO.LT", "Bo.lt is a web service that let&amp;#039;s users copy, edit and share web pages and be able to add avatars and comments to the pages they do share. The Bo.lt API is a RESTful API that is available for developers to integrate into their own applications. The API features all of the core functionality of Bo.lt itself, such as sharing and editing webpages. The Bo.lt API uses OAuth for authentication, but if no user is logged in/authenticated, a default Guest User account can be used.", "https://api.bo.lt/", "http://dev.bo.lt/api-details")
apis["DAVIDBioinformatics"] = Learning("DAVID Bioinformatics", "The service provides tools for functional annotation to discover the implications for biological research of specific genes and genetic markers tracked by its database. Formally named Database for Annotation, Visualization and Integrated Discovery (DAVID), it logs descriptions of genetic combinations found by researchers to enhance understanding of likely biological effects and target research.API methods support retrieval of annotations listing biological functions for specified individual genes and gene clusters in both tabular and chart form. Methods also support review of full gene reports for wider-scale informatics applications.", "http://david.abcc.ncifcrf.gov/api.jsp?type=", "http://david.abcc.ncifcrf.gov/content.jsp?file=DAVID_API.html")
apis["WorldCatIdentities"] = Learning("WorldCat Identities", "The WorldCat Idententies API mines the Worldcat database for individual identities and creates a page for each identity. Response include related ISBN&amp;#039;s or other identifiers, as well as metadata. If you have heard of xISBN, xISSN, or xOCLCnum APIs, this is comprised of those.", "http://xisbn.worldcat.org/webservices/xid", "http://oclc.org/developer/services")
apis["GoogleAjaxFeeds"] = Learning("Google Ajax Feeds", "With the AJAX Feed API, users can download any public Atom or RSS feed using only JavaScript, allowing for easy mash up feeds with their content and other APIs like the Google Maps API. The Google AJAX Feed API lets users mash up feeds using only a few lines of JavaScript, rather than dealing with complex server-side proxies. This makes it easy to quickly integrate feeds on a website.For Flash, and other Non-Javascript environments, the API exposes a raw RESTful interface that returns JSON encoded results. These results are easily processed by most languages and runtimes.", "http://www.google.com/jsapi", "https://developers.google.com/feed/v1/")
apis["BritishMuseum"] = Learning("British Museum", "Linked Data and SPARQL query service provides access to the same collection data available through the British MuseumÃ¢ÂÂs web interface, Collection Online, but in a computer readable format. The RDF open data standard allows use of the collection data within linked data applications interested in promoting accessibility and collaboration. Also provides for JSON output of metadata about objects in the British Museum collection.", "http://collection.britishmuseum.org/sparql", "http://collection.britishmuseum.org/Sparql/Help")
apis["TimeAPI"] = Learning("TimeAPI", "The TimeAPI is web service to get dates/times from natural language queries based on Chronic. Source code is available on GitHub.", "http://www.timeapi.org/", "http://www.timeapi.org/")
apis["Qik"] = Learning("Qik", "The Qik Platform Application Programming Interface enables anyone to integrate or build web, desktop, phone applications to take advantage of Qik&amp;#039;s mobile video sharing platform.", "http://qik.ly/api/", "http://qikapi.pbworks.com/w/page/5534962/FrontPage")
apis["OpenSpreety"] = Learning("Open Spreety", "The service provides lookup access to an extensive database of video and media content available in varying formats and from different suppliers. Video resource listings are categorized by genre and other content categories and provider along with more technical criteria like file format, image size and quality, and access location.API methods support access to the record for a specific video by unique identifier or to listings by format, genre, decade, recently added or new, and other filtering criteria. Methods also allow search against the database for a character string specified in the request. Methods return descriptions of matching videos with still image, provider, and access URL.", "http://www.spreety.com/Membership-APIs.aspx?apiCall=", "http://www.spreety.com/Membership-APIs.aspx")
apis["LiveAddressVerification"] = Learning("LiveAddress Verification", "Super-simple and super-fast US address verification. Validate street addresses within your application or on your website. Obtain valuable information about addresses, including whether they can receive mail and shipments.LiveAddress API scales in the cloud based on demand, and is hosted out of 3 reliable and redundant datacenters across the nation. Submit up to 100 addresses per request, and don&amp;#039;t pay for addresses that don&amp;#039;t validate. Get started anytime with a &amp;quot;free forever&amp;quot; subscription of 250 lookups/mo. Unlimited and reseller plans are available.", "https://api.qualifiedaddress.com/street-address/", "http://smartystreets.com/products/liveaddress-api")
apis["SafeCreative"] = Learning("Safe Creative", "Safe Creative is an on-line world wide copyright registry, free and open to use. It allows creators/rightholders to register their works. The service supports many license types: traditional copyright, Creative Commons, custom, etc.", "http[s]://api[-search].safecreative.org/v2/", "http://wiki.safecreative.net/wiki/API_Overview")
apis["Seattle20"] = Learning("Seattle 2.0", "Use the Seattle 2.0 API to get upcoming events in Seattle. Seattle 2.0 was founded in 2007 to help tech entrepreneurs build great companies. It is different because it&amp;#039;s written by doers. Seattle 2.0 consists of entrepreneurs, investors, advisors, consultants and members of the Seattle startup community.", "http://www.seattle20.com/api/v1", "http://www.geekwire.com/seattle-20/")
apis["cBioCancerGenomicsDataServerCGDS"] = Learning("cBio Cancer Genomics Data Server (CGDS)", "The service provides direct access by applications to genetic and genomic data stored by the Memorial Sloan-Kettering Cancer Center. Applications can retrieve information about cancer studies and their genetic findings, genetic profiles and indicators for specific cancer types and gene structures, and similar highly detailed data. Datasets document more than 5000 tumor samples from 20 research studies. API methods support retrieval of cancer research studies, with detailed filtering by specific topics and findings. Methods also allow retrieval of genetic profiles and case lists reported in cancer research, extended mutation data, protein and antibody information, and clinical data.", "http://www.cbioportal.org/public-portal/webservice.do", "http://www.cbioportal.org/public-portal/web_api.jsp")
apis["Omnidrive"] = Learning("Omnidrive", "NOTE: As of June 2008 this service appears to be no longer in operation.The Omnidrive API is REST-like web service for the storage, sharing and publishing of files, content and media. Omnidrive offers interfaces for developers both for web and desktop applications and provides all users with simple to use file browsers on multiple platforms.", "http://api.omnidrive.com/APIServer/", "http://dev.omnidrive.com/HomePage")
apis["Mobypicture"] = Learning("Mobypicture", "The Moby API allows you to post photos and other content to their website and access that content from anywhere in the world. The API supports both posting and reading of images.", "http://api.mobypicture.com/", "http://api.mobypicture.com/doc.html")
apis["OpentrackerDeveloperAnalytics"] = Learning("Opentracker Developer Analytics", "Opentracker provides subscribers with the ability to track visitors on their sites. It collects information about where the visitor is geographically, what OS they&amp;#039;re using, how they got to the subscribers&amp;#039; sites, what links they followed to navigate the sites, and how long they spent on the sites. Profiles are created for each visitor so that subscribers can look at individual behavior as well as overall patterns.The Opentracker API allows subscribers to access their collected data and statistics to automate report generation, create customized data tables, display visitor information on their sites, or combine Opentracker data with other APIs in mashups.", "http://www.opentracker.net", "http://www2.opentracker.net/web-analytics/feature/analytics-reporting-api")
apis["QuickGO"] = Learning("QuickGO", "The service maintains an ontology of terms describing concepts important in genetic research and related biological science. It&amp;#039;s structure defines standard language for concepts from the topic domain, with annotations describing the meanings and proper uses of the terms. This standardization of language use encourages consistent treatment and discussion across genetic research efforts.API methods support access to the ontology&amp;#039;s list of standard terms for proteins and descriptive properties, with annotations about correct usage and taxonomic relationships between terms, including those with broader meanings, narrower meanings, and related usage. Methods allow control of the scope of a result set depending on an application&amp;#039;s need for complete or streamlined data.", "http://www.ebi.ac.uk/QuickGO/", "http://www.ebi.ac.uk/QuickGO/WebServices.html")
apis["Songsterr"] = Learning("Songsterr", "The Songsterr API allows you to search, get and present songs and guitar tabs from the Songsterr database. You can search by artist or song.", "http://www.songsterr.com/a/rest/", "http://www.songsterr.com/a/wa/api")
apis["CivicFootprint"] = Learning("Civic Footprint", "The Civic Footprint API lets you look up the political geography of an address in Cook County, Illinois.", "http://www.civicfootprint.org/api", "http://www.civicfootprint.org/about/api")
apis["Myplaylist"] = Learning("Myplaylist", "From their site: The Myplaylist API allows third party websites to call our API with an artist / track name and in return will receive an embeddable playlist Flash widget. Many different players are available. You can import complete playlists for artists and single songs with up to 30 images per single.", "http://www.myplaylist.biz/api", "http://www.myplaylist.biz/api/")
apis["SECWatch"] = Learning("SEC Watch", "API for accessing SEC Filings by company, type, or company and type (ie. Google Filings, 10-Q (Quarterly Reports) Filings, or Google 10-Q Filings)", "http://secwatch.com/s/api", "http://marketbrief.com/api.jsp?secwatch")
apis["SBACityandCountyData"] = Learning("SBA City and County Data", "The Small Business Administration (SBA) strives to act as an engine of opportunity and economic growth in America by providing a variety of programs and support services for both current and prospective small business owners.The U.S. City and County Data API provides developers with programmatic access to a geographic names data set for official city and county government websites, as well as data from the U.S. Geological Survey (USGS) Geographic Names Information System (GNIS). This data is composed of a variety of data types relating to geographical features such as the county they are found in, their official classification type, descriptions, links to associated governmental URLs, and latitude/longitude coordinates.  This is a completely open and free RESTful API that returns data as either XML or JSON.", "http://api.sba.gov/geodata/", "http://www.sba.gov/about-sba/sba_performance/sba_data_store/web_service_api/u_s_city_and_county_web_data_api")
apis["in2Era"] = Learning("in2Era", "The service provides embedded links to purchase books and other educational materials intended for children in kindergarten and primary grades. Educational content and activities are also provided, all integrated in websites of registered distributors reaching children or their parents. API methods provide access to information from the product catalog to support display of item listings and provide content purchased via the integration. Information is updated only as products are added, so the provider recommends caching product records locally for improved performance.", "http://dev.in2era-web-service.com/api/", "http://dev.in2era-web-service.com/implementation")
apis["SesameVault"] = Learning("SesameVault", "Upload videos, encode videos, tag videos, filter videos, and create reports. Ruby, PHP, and Javascript libraries are available.", "http://www.sesamevault.com", "http://api.sesamevault.com/api")
apis["WikiLocation"] = Learning("WikiLocation", "The WikiLocation API is for developers wishing to search for Wikipedia articles by location. The data is gathered by downloading the Wikipedia database on a weekly basis and then parsing all of the geocoded entries. This data is stored in a database where it is able to be accessed via the API. WikiLocation supports 36 languages, totaling over 3.8 million articles. At present, there are over 1 million entries from en.wikipedia.org alone.In addition to searching via location, users can also search via the venue and spot IDs of the two most popular geo-location networks; Foursquare and Gowalla as well as by Yahoo! WOEID. The API uses RESTful protocol and responses are formatted in XML, JSON, or JSONP.", "http://api.wikilocation.org/", "http://wikilocation.org/documentation/")
apis["Wellynews"] = Learning("Wellynews", "The Wellynews API provides RSS and JSON interfaces to a collection of local news items aggregated from community groups in Wellington, New Zealand.", "http://wellington.gen.nz/", "http://wellington.gen.nz/api")
apis["ScreenTunes"] = Learning("ScreenTunes", "ScreenTunes is a media-based search engine. The ScreenTunes API offers a basic data feed for developers wishing to add a soundtrack or reverse-soundtrack search to their application or site. Data can be retrieved in both JSON and XML formats.", "api.screentunes.com/", "http://www.screentunes.com/api.html")
apis["ChemicalIdentifierResolver"] = Learning("Chemical Identifier Resolver", "The service helps with understanding and uses of identifiers for chemical structures. It takes in identifiers  for chemical compounds and resolves them against standard nomenclature. It also provides information about the molecular structure indicated by an identifier and/or converts to different identifier notations.API methods support submission of a chemical structure identifier in a range of formats, including SMILES and InChI. Methods return a standard chemical name and structure information, optionally including a gif or png image of the structure and an equivalent identifier in a different format.", "http://cactus.nci.nih.gov/chemical/structure/", "http://cactus.nci.nih.gov/chemical/structure")
apis["Freelancer"] = Learning("Freelancer", "From their site: &amp;quot;The Freelancers API lets users access public information on Freelancer.com programmatically. Such information has to be used in accordance with the Freelancer.com and Affiliate Program Terms of Service. Allowed uses include displaying open public projects or information from user profiles on affiliate websites with appropriate links to Freelancer.com projects or profiles. This information will be useful for all Freelancer.com members. Users who are experienced in programming will be able to create their own widgets with a large degree of flexibility (see API calls). Less experienced users can simply paste the code given in the examples on their web page to enjoy the benefits of our web widgets.&amp;quot;", "http://api.freelancer.com/", "http://www.freelancer.com/info/api.php")
apis["PathwayCommons"] = Learning("Pathway Commons", "The API provides a convenient point of access to information about biological pathways involving a specified physical entity (e.g. protein or small molecule) collected from public pathway databases. It gives machine-readable access to the same information browsed and searched by biologists and downloaded by computational biologists in BioPAX format for global analysis. Users can also download and install the cPath software to create a local mirror. All data is freely available, under the license terms of each contributing database.", "http://www.pathwaycommons.org/pc/webservice.do", "http://www.pathwaycommons.org/pc/webservice.do?cmd=help")
apis["MobileCommonsLegislativeLookup"] = Learning("Mobile Commons Legislative Lookup", "The service retrieves information about representatives in the U.S. Congress and state legislatures for a location specified by latitude and longitude. Data returned include contact information, so an application can automatically route users directly to their legislative representatives to support calls for action as part of advocacy campaigns. Another use would be to target advocacy messages to specific legislative districts served by members casting key votes on an issue.API methods accept latitude and longitude and return legislative district for both the U.S. House of Representatives and state legislative houses, as applicable. The service returns error messages for submissions without latitude/longitude data or for locations outside the United States.", "http://congress.mcommons.com/", "http://www.mobilecommons.com/mobile-commons-api/legislative-lookup/")
apis["TheMovieDB"] = Learning("The Movie DB", "The TMDb API is a resource for any developers that want to integrate movie &amp; cast data along with posters or movie fanart. themoviedb.org is a free and open movie database. TMDb is currently used by millions of people every month and also used by many popular media centers like Moovida, XBMC, Plex, MythTV  and MediaPortal.", "http://api.themoviedb.org/3/", "http://docs.themoviedb.apiary.io")
apis["coRank"] = Learning("coRank", "From their site: coRank is the first service on the net where you can create your own social news site, social bookmarking network or co-ranking site in just minutes.", "http://sitename.corank.com/api/", "http://www.corank.com/api.html")
apis["IPloc"] = Learning("IPloc", "The IPloc API is a free IP geolocater. Give an IP address and get its location back in pretty much any format you want. Plus, get that country&amp;#039;s flag in the response. Also, it is cross-domain, and accessible from Flash and Flex regardless of domain.", "http://iploc.mwudka.com/iploc/IPaddress/Format", "http://iploc.mwudka.com/")
apis["Bistip"] = Learning("Bistip", "Bistip is a service that connects travellers with people who need or want items bought in other places. Bistip lets users post their upcoming trips so other users can see if someone is going to a place where they want something from. Users can request the travellers buy whatever the item is that they want.The Bistip API is read-only but allows developers to access content from Bistip. The available API methods are retrieving a list of upcoming trips and retrieving a list of items wanted.", "http://www.bistip.com/api/v1", "http://www.bistip.com/api")
apis["CareerOneStop"] = Learning("CareerOneStop", "The service provides information from the U.S. Labor Department about career opportunities, their future prospects, and their requirements. It gives access to listings of careers by title, keyword, or code along with detailed information about individual careers from the provider&amp;#039;s O*NET service. Information about qualifications and requirements is also available.API methods support retrieval of listings of career names by keyword or unique identifier codes. Methods also support detailed descriptions of career activities along with salary and compensation estimates and detailed qualifications required such as education and training, licensing, and certification. Methods can cross-reference military job codes to Labor Department codes for consistent access to related information.", "http://www.careeronestop.org/WebService/demo.aspx?webService=", "http://www.careeronestop.org/WebServices/WebServices.aspx")
apis["GroupMe"] = Learning("GroupMe", "From their site: Extends the idea of social tagging systems like del.icio.us, Flickr or BibSonomy by introducing the group dimension. The foundation of social tagging systems are folksonomies. A folksonomy is just a collection of tag assignments. Over time it is likely that semantics emerge--tags that are often assigned to the same resources may be synonyms. With GroupMe&amp;#039;s approach of taggable groups we extend tag assignments with a group dimension.", "http://groupme.org/api/export.do", "http://groupme.org/GroupMe/api/")
apis["OpenColorado"] = Learning("OpenColorado", "OpenColorado is working to make public data available and accessible to the citizens of Colorado from cities, counties, school districts, and special districts across the state. The OpenColorado Data Catalog and the catalog API provide access to a wealth of government data becoming available from participating jurisdictions.", "http://data.opencolorado.org/api/2", "http://data.opencolorado.org")
apis["RecipePuppy"] = Learning("Recipe Puppy", "The Recipe Puppy is an ingredient based recipe search engine. The Recipe Puppy API gives developers access to a database of over a million recipes, searching by ingredient or keyword. Access is gained via HTTP and results can be returned in JSON or XML", "http://www.recipepuppy.com/api/", "http://www.recipepuppy.com/about/api/")
apis["NationalRenewableEnergyLab"] = Learning("National Renewable Energy Lab", "The service provides access to authoritative information on uses of alternative energy technologies from the U.S. National Renewable Energy Laboratory (NREL). It provides energy usage and rate data to enable development of renewable energy installations and use of alternative fuels. Resources emphasize electricity generation, solar-power installations in general, and transportation solutions.API methods support access to utilities serving specific locations and electricity rates charged, energy generation and cost savings from photovoltaic (PV) energy systems, and locations of alternative fuel stations.", "http://developer.nrel.gov/api/", "http://developer.nrel.gov/")
apis["geocoderca"] = Learning("geocoder.ca", "We strive to provide the most reliable and accurate geocoding services for Canada and the USA. Using our xml port you can integrate geocoding functionalities into your application in real time. We currently provide forward and reverse geocoding of street addresses, postal/zip codes and street intersections in both the USA and Canada.", "http://geocoder.ca", "http://geocoder.ca/?api=1")
apis["YottaShare"] = Learning("YottaShare", "YottaShare offers an API for expansion of shortened URLs. The service works for bit.ly, tr.im, snipr, and retwt.me services. It offers a RESTful interface, returning data in XML. There are no signup requirements.", "http://www.yottashare.com/unshortener/v1/Expand.ashx", "http://www.yottashare.com/unshortener/Default.aspx")
apis["LiveNationEventData"] = Learning("Live Nation Event Data", "From their site: Live Nation&amp;#039;s concert event database features a comprehensive listing of worldwide live music events. The Event Data API includes artist names, venue names, event location, show dates and times, ticket presale and on sale dates, ticket links, and more.", "http://developers.livenation.com", "http://developers.livenation.com/index.html")
apis["Tailrank"] = Learning("Tailrank", "The blogosphere publishes - we index, interpret, filter, and cleanse. All you have to do is tune in and listen. Every day we monitor over 500 thousand pieces of unique content published by 12 million weblogs; a publishing pace that accelerates every single day as more individuals publish their unique views and perspectives online.", "http://api.tailrank.com/rss/feed.getDelta", "http://spinn3r.com/service")
apis["EnvironmentCanterburyGIS"] = Learning("Environment Canterbury GIS", "The service is provided by the Environment Canterbury Regional Council, a regional authority within New Zealand. It exposes geographic information service (GIS) data for open public access. GIS services available include OGC-compliant map services for standardized access by GIS clients and applications. Datasets make available aerial photography, regional planning zones, natural resources profiles, and more.API methods support access to a number of interrelated datasets, including color aerial photographs and planning zone boundaries. Natural resources within the region are documented, as are existing permitted uses. Environmental monitoring stations and other facilities are mapped.", "http://gis.ecan.govt.nz/arcgis/rest/", "http://ecan.govt.nz/services/online-services/gis-mapping/pages/gisonlineservices.aspx")
apis["Mefeedia"] = Learning("Mefeedia", "Access Mefeedia data, including video feeds, videos, and thumbnails. Users of this site create channels, subscribe to shows, create playlists, share videos with friends, and view what&amp;#039;s popular with all users or specific users.", "http://mefeedia.com/", "http://www.mefeedia.com/customsearch.php")
apis["isgd"] = Learning("is.gd", "The is.gd API lets you create short versions of long URLs.is.gd&amp;#039;s sister service, [[http://is.gd/apilookupreference.php is.gd Lookup]], allows you to submit a URL shortened by is.gd, and returns the original URL.", "http://is.gd/api.php", "http://is.gd/apishorteningreference.php")
apis["Sifter"] = Learning("Sifter", "Sifter is a bug and issue tracking platform. Sifter provides an online dashboard for teams and organizations to manage and track bugs and issues that display progress, people working on the bugs and issues, and lists all issues.The Sifter API allows developers to access the data and functionality of Sifter. Currently, the API is read-only, but they plan on making write access available as well. The current API method is searching and displaying project information.", "https://example.sifterapp.com/api/", "https://sifterapp.com/developer")
apis["ReportIt"] = Learning("ReportIt", "Allows websites, CRM systems, social media, mobile apps and other customer facing applications to submit reports of environmental or anti-social behaviour problems to government agencies through a common API without having to worry which agency should address the issues. Downloadable documentation explains access calls to submit trouble reports, which are routed to the correct agencies for response. Originally part of a now-defunct municipal information portal, the API is still supported for trouble reports across the UK.", "http://eforms.yourlondon.gov.uk/services/", "http://eforms.yourlondon.gov.uk/index.html")
apis["BBAWISODate"] = Learning("BBAW ISO-Date", "The service analyzes sample text in German or Italian and detects time and date references. After recognizing date-time references, it reformats them per ISO standards.API methods allow submission of a text passage encoded as Unicode along with the source language as URL parameters. Methods identify any date-time references and return ISO-formatted values as plain text or wrapped in XML or JSON formatting.", "http://pdrdev.bbaw.de/pdrws/dates?text=", "http://pdr.bbaw.de/pdrws/dates?doc=api")
apis["Bitsmash"] = Learning("Bitsmash", "The bitsmash service allows you to monitor the availability and connection BitTorrent statistics of a given .torrent file.", "http://bitsmash.com/api/lookup", "http://bitsmash.com/api/")
apis["FeedMap"] = Learning("FeedMap", "NOTE: As of 6/27/2008 it appears that this api is no longer available", "http://www.feedmap.net/blogmap/services/rest.ashx", "http://www.feedmap.net/")
apis["VisANT"] = Learning("VisANT", "The service provides visualization tools to represent networks and pathways within biological research. Available as a web service or installed software, it ingests data about organisms and species and creates images depicting links and relationships between them. Interactions within an active community drive development of the graphical tools to create effective depictions for researchers.API methods support defining characteristics of the nodes of a visualization, including the links between them that determine the graphic representation. Methods support lookup in species and organism records to help define node descriptions.", "http://visant.bu.edu/ws/test/visant", "http://visant.bu.edu/vmanual/sapi/index.html")
apis["InsideIdaho"] = Learning("Inside Idaho", "The service delivers geospatial data to support mapping of resources within the state of Idaho. Compliant with Open Geospatial Consortium (OGC) standards, the platform uses ArcGIS and other resources to promote sharing of data, effective communication, and activity coordination among state agencies and other government units. Applications can use the service to map biological and environmental features, climatology, structures, and other featurs of the state.API methods support mapping of animal and plant species, elevation and other geological features, and climatic conditions. Applications can also map jurisdictional boundaries, transportation resources, structures, and other prominent infrastructure within Idaho", "http://cloud.insideidaho.org/arcgis/services", "http://insideidaho.org/webservices.html")
apis["Bililite"] = Learning("Bililite", "The service provides pediatric charting functions that convert data submitted to images for web display and other purposes. Data can be entered via interactive forms or submitted as URL parameters, and the service completes processing to generate the requested chart displaying the data. Available graphs include height, weight, body mass index, peak flows, and bilirubin levels. API methods accept requests specifying the chart type (bilirubin, height and weight, BMI, blood pressure, head circumference, or peak flows) and data from a sample of patients or an individual patient. The API generates an image URL to be incorporated into another web page or other application.", "http://bililite.com/webservices/", "http://bililite.com/webservices/")
apis["Bitly"] = Learning("Bit.ly", "bit.ly allows users to shorten, share, and track links (URLs). Reducing the URL length makes sharing easier. bit.ly  can be accessed through their website, bookmarklets and this open API. bit.ly is also integrated into several popular third-party tools such as Tweetdeck and is used extensively on services like Twitter. Unique user-level and aggregate links can be created and let users view complete, real-time traffic and referrer data, as well as location and metadata.", "https://api-ssl.bitly.com/", "http://dev.bitly.com/get_started.html")
apis["PrototypeGeoIP"] = Learning("Prototype GeoIP", "This is an API for GeoIP, an IP-to-location service. Pass the locate method an IP address, and it returns the location information, including latitude, longitude, city and country. Response format is in JSON (by default) or XML.  It&amp;#039;s currently in &amp;quot;alpha&amp;quot; with not a lot of functionalities.", "http://geoip.prototypeapp.com", "http://docs.prototypeapps.com/geoip:api")
apis["BringCargo"] = Learning("Bring Cargo", "The service provides free public access to rate quotes for shipping within Scandinavia and northern Europe along with supporting information about postal code zones and pickup locations plus integration for logged-in customers to book shipments. The Shipping Guide provides price, service areas, and or delivery time estimates for the provider&amp;#039;s shipping services, which allows an application to present options and let customers choose based on delivery speed and convenience versus cost. Supporting functions specify delivery zones and pickup locations served by the provider, grouped by postal code. A booking API allows completion and scheduling of a shipping transaction, and a tracking API updates current status for a shipment.API methods support specification of shipment characteristics -- items shipped, weight, pickup and delivery locations, etc. -- to generate a rate quote and delivery time estimate. Methods also allow acceptance of a quote and booking of a shipment, with completion of payment and scheduling of shipment pickup.", "http://fraktguide.bring.no/fraktguide", "http://developer.bring.com/index.html")
apis["Ohloh"] = Learning("Ohloh", "From their site: Ohloh is an open source network that connects people through the software they create and use. The Ohloh API is a free, REST-based programming interface to the Ohloh open source directory. You can use the Ohloh API to create your own applications and web services based on Ohloh data.", "http://www.ohloh.net", "http://meta.ohloh.net/getting_started/")
apis["Zoopy"] = Learning("Zoopy", "The Zoopy API allows read/write access to the Zoopy video, photo and audio sharing platform to any registered users of the service. Zoopy is an online and mobile social media community. Users visit Zoopy to upload, share and discover videos, photos and audio. The goal is to enable sharing with family and friends from one Zoopy profile, at one URL, by bringing all three media types into one location.The Zoopy API is a comprehensive, semi-RESTful API. Requests are made using regular GET or POST HTTP requests. Output from the API can be requested in either XML or JSON.", "http://api.zoopy.com/zoopy/0.1/rest", "http://wiki.zoopy.com/index.php/Main_Page")
apis["Getafreelancer"] = Learning("Getafreelancer", "Getafreelancer is a resource for finding freelance programmers or looking for freelance jobs; thousands of skilled programmers are available for hiring. The Getafreelancer API allows users and developers to access all the public information from the website&amp;#039;s database.", "http://api.getafreelancer.com/", "http://www.freelancer.com/info/api.php")
apis["NewHaze"] = Learning("NewHaze", "The NewHaze API enables websites to be able to add games from the library to their websites. NewHaze is a gaming website providing you with every single flash game on the internet. The API can also be used for software applications to enable software developers to incorporate flash games into their applications. The API is accessed via HTTP POST and can return either JSON or XML. There is also the OpenAPI which allows you to grab data out of the system to build more creative implementations of the API.", "http://connect.newhaze.com/api/", "http://developers.newhaze.com/")
apis["SBALoansandGrantsSearch"] = Learning("SBA Loans and Grants Search", "The Small Business Administration (SBA) strives to act as an engine of opportunity and economic growth in America by providing a variety of programs and support services for both current and prospective small business owners.The Loans and Grants Search API allows developers to connect to SBA.gov&amp;#039;s categorized collection of links to federal, state, and local financial assistance programs that aid small businesses in starting or expanding their operations. The search API lets users find loans and grants by a variety of characteristics such as state, industry, or specialty. This RESTful API is free to use, and returns data as either XML or JSON.", "http://api.sba.gov/loans_grants/", "http://www.sba.gov/about-sba/sba_performance/sba_data_store/web_service_api/loans_grants_search_api")
apis["Zubka"] = Learning("Zubka", "From their site: Zubka makes it easy to find and recruit the very best people through personal recommendation. Zubka&amp;#039;s technology makes it easy to refer people you know into jobs on our site Â and getrewarded in the process. Now we&amp;#039;ve made it possible for you to integrate Zubka&amp;#039;s job board functionality into your site. You can download our jobs list on a regular basis as an RSS XML file from Zubka. You also have the option to filter it using a parameter list. You can then store this XML in your own database for generation and sorting.", "http://www.zubka.com/services/rss-ext/livejobs.php", "http://www.zubka.com/public.php/what/tech_spec")
apis["Anniversarator"] = Learning("Anniversarator", "The service provides an &amp;quot;anniversary calculator&amp;quot; that suggests reasons to celebrate wedding or relationship anniversaries and birthdays. Input must specify a start date and the event type, either birthday or anniversary (the default). The service returns a suggestion for a reason to celebrate based on the time elapsed since the start date.API methods generate text suggestions based on the number of days, weeks, fortnights (2-week periods), months or years since the specified start date. Optional annotations explain potentially obscure references in the suggestions.", "http://anniversarator.com/?t=", "http://anniversarator.com/service/")
apis["Gruvr"] = Learning("Gruvr", "Gruvr offers tons of geocoded concert data, with about 170K upcoming shows for 45K bands currently listed. You can ask for upcoming concerts by location or by band.  The results can be returned as geoRSS, KML, or dynamic map links.", "http://gruvr.com/", "http://gruvr.com/developers/")
apis["MapLight"] = Learning("MapLight", "MapLight looks at the connection between campaign donations and legislative votes in an effort to reveal money&amp;#039;s influence on politics. MapLight performs research on supporting and opposing interests for legislative bills. MapLight&amp;#039;s Bill Positions API provides a tool for discovering the connection between campaign donations and legislative votes. It can also be mashed up with other databases that contain information about bills or politically-active organizations. This RESTful API returns results in JSON or XML.", "http://maplight.org/services_open_api/", "http://maplight.org/apis/bill-positions")
apis["OpenBlock"] = Learning("OpenBlock", "The service provides a platform for neighborhood-specific, &amp;quot;hyper-local&amp;quot; news and information reporting. Designed to support websites for updates about community activities, it can also power widgets and feeds to integrate news into existing sites. Capabilities include mapping event reports and data summaries, such as local utility maintenance reports, crime statistics, and the like.API methods support creating and retrieving news items, with location information tying them to a particular place. Methods also support listing places and locations, with search boundaries set by either a predetermined area or a random centerpoint and bounding circle of specified distance.", "http://{location}.openblock.org/api/dev1/", "https://github.com/openplans/openblock")
apis["MapItGlobal"] = Learning("MapIt Global", "The service defines political or administrative authority in effect for specified global locations. It builds on functionality of OpenStreetMap and the U.K. Ordnance Survey along with other accumulated information about location specifications, including postal codes and geographic information systems. API methods support definition of political jurisdiction boundaries for a particular point, specified by latitude and longitude or some other systems. Methods also provide jurisdiction for a specified area or multiple areas or related areas, such as subjurisdictions like a city within a county.", "http://global.mapit.mysociety.org/", "http://global.mapit.mysociety.org/")
apis["METViewer"] = Learning("METViewer", "The service provides functions for visualizing data about the effectiveness of meteorological models to help evaluate their predictive success. A web-based tool plots measures of model accuracy using functions of the R statistical package. The web service generates XML serializations specifying each data plot, along with supporting resources to enable visual display.API methods support listing of available meteorological databases, forecast variables they store, and values for those variables from a selected database. Methods allow iteration for a range of selected databases, variables, and data values to generate a specification for a data plot to be generated by the visualization service.", "http://www.dtcenter.org/met/metviewer/servlet", "http://www.dtcenter.org/met/metviewer/doc/web_service.html")
apis["ImageColorSummarizer"] = Learning("Image Color Summarizer", "The web service provides statistics describing color characteristics of an image identified by URL. Summary data indicate the single RGB color that best represents the image, along with average hue and saturation values and RGB and HSV histograms. Detailed data returned by the service provide the average, median, or mode as well as minimum and maximum values for each RGB and HSV triplet within the identified image. Four levels of precision may be specified for the analysis.", "http://mkweb.bcgsc.ca/color_summarizer/?", "http://mkweb.bcgsc.ca/color_summarizer/?api")
apis["CeregoiKnow"] = Learning("Cerego iKnow", "A social learning site from Japanese company Cerego. The API allows read and write access to iKnow&amp;#039;s learning and social data. Allows users to take virtual English and Japanese language lessons (other languages are promised for the future) and guides and tracks their progress. Supports over 60 language combinations.", "http://api.iknow.co.jp/", "http://developer.smart.fm/")
apis["GoogleClosureCompiler"] = Learning("Google Closure Compiler", "The Closure Compiler is a tool for optimizing JavaScript. The API is intended to act as a true compiler for JavaScript. The API parses JavaScript, analyzes it, removes dead code and rewrites and minimizes what&amp;#039;s left. It also checks syntax, variable references, and types, and warns about common JavaScript pitfalls.The Closure Compiler API is usable via RESTful HTTP POST requests, and returns code in XML, JSON, or plain text formats. There are three optional compilation/optimization levels that users can choose from, from simple whitespace and comment removal to high level compression that will rename symbols in the code.", "http://closure-compiler.appspot.com/compile", "https://developers.google.com/closure/compiler/docs/api-ref")
apis["TransparencyData"] = Learning("Transparency Data", "Transparency Data is a resource for federal lobbyist registrations and federal and state campaign contributions. See what a candidate has received, what an individual  has given, how much an organization has spent on lobbying, and many other queries. The Transparency Data API gives developers access to search state and federal campaign contribution data. The API features a RESTful interface and returns data via JSON or CSV.", "http://transparencydata.com/api/1.0/", "http://data.influenceexplorer.com/api/?r")
apis["Zutual"] = Learning("Zutual", "A RESTful API that takes two twitter usernames and returns a JSON list of the topics they both discuss. The API uses advanced natural language processing to analyze tweets and calculate the mutual topics of interest.", "http://api.zutual.com/v/1/twitter/", "https://groups.google.com/forum/#!forum/zutual-api")
apis["ConvertAPIWord2PDF"] = Learning("ConvertAPI Word2PDF", "Word2PDF lets developers create a PDF file of a Word document. The ConvertAPI Word2PDF API is a pay-per-credit API. Developers can manipulate many different settings: orientation, page size, margins, cover pages, and more can be set with the Word2PDF API. Pricing begins at $15 for 1,000 calls.", "http://do.convertapi.com/Word2Pdf", "http://www.convertapi.com/word-pdf-api")
apis["XhanchIslamicGetPrayerTime"] = Learning("Xhanch Islamic Get Prayer Time", "Xhaunch&amp;#039;s Islamic Get Prayer Time API is a public service that allows users to retrieve a month&amp;#039;s worth of the daily times for Islamic prayer, based on the given latitude, longitude, year, month, and timezone. Times are calculated using the Ã¢ÂÂMuslim World League&amp;quot; method.The API is used by calling the service endpoint via a URI formatted with the above mentioned parameters, as well as an optional data format parameter. Information can be returned as XML (default) or JSON.", "http://xhanch.com/api/islamic-get-prayer-time.php?", "http://xhanch.com/xhanch-api-islamic-get-prayer-time/")
apis["gig"] = Learning("5gig", "The 5gig.com API lists concerts and gigs from the live music agenda of 5gig network of sites. You can filter the information by artist, venue, city, genre, among other options.", "http://www.nvivo.es/api/request.php?", "http://api.5gig.com/wiki")
apis["AOLPictures"] = Learning("AOL Pictures", "On December 31, 2008, AOL closed the AOL Pictures online photo service and shut down the AOL Pictures API. See the API Home Page for more details.", "http://api.pictures.aol.com/gv1/", "http://dev.aol.com/aol_pictures")
apis["WorldofWarcraft"] = Learning("World of Warcraft", "Blizzard, makers of the popular online MMORPG World of Warcraft, provide this API for users who are interested in gathering game statistics and data. Users can gather data by categories such as realm, profile, item, arena team, and more.This open API is created as a service to the World of Warcraft community. There are no signup requirements or fees for using this REST-based API. Users are limited to 3,000 requests per day, however this limit can be exceeded for those who register an application. Applications can be registered at api-support@blizzard.com.", "http://us.battle.net/api/wow/", "http://us.battle.net/wow/en/forum/topic/2743690922")
apis["BlockChalk"] = Learning("BlockChalk", "BlockChalk provides users with a voice of their neighborhood. Topics include mentioning lost pets or items, reporting a pothole, advertising a garage sale, or more. The BlockChalk API gives developers the ability to access all the reported data for their own website or app.", "http://blockchalk.com/api/v0.6/", "http://blockchalk.com/developers")
apis["JumboURL"] = Learning("JumboURL", "The JumboURL API lets you expand a URL to 140 characters in size. Perfect for filling those Twitter tweets.", "http://jumbourl.com/apiAdd?url=", "http://jumbourl.com/api")
apis["BitlySocialData"] = Learning("Bit.ly Social Data", "Bit.ly allows users to shorten, share, and track links (URLs). The Bit.ly Social Data API allows developers to access and integrate data about social sharing, referrals, social media use, and other social data of shortened links with other applications. Some example API methods include returning high volumes, categories, and realtime sharing and clicking.", "https://api-ssl.bitly.com", "http://dev.bitly.com/data_apis.html")
apis["Airbana"] = Learning("Airbana", "The Airbana database contains information about Airsoft Skirmish and Retail sites globally and also event listings, live weather reports, live pricing information. From Wikipedia: Airsoft is a a recreational activity where replica firearms shooting plastic rounds are used for personal collection, gaming (like Paintball), or professional training purposes (Military Simulations and Police training exercises). The Airbana API offers developers access to the database for their applications in a RESTful interface. Data is returned via XML, JSON, or PHP.", "http://api.airbana.net/2.0", "http://api.airbana.net/")
apis["YouPage"] = Learning("YouPage", "Use the YouPage API to get all YouPage content for business, promotional sale, and event listings in XML or RDF/XML. Create widgets or gadgets that show business contact details and open hours. YouPage.com is a consumer local search, events, social, and communication service powered by local business and service generated content. YouPage, based out of the UK, has a vision to create the internet&amp;#039;s most comprehensive user-generated local directory; there is a focus on business phone numbers and open hours, but also a focus on local events so that you can find what&amp;#039;s happening in your area next week.", "http://www.youpage.co.uk", "http://www.youpage.net/developers/")
apis["MyNewsdesk"] = Learning("MyNewsdesk", "MyNewsdesk.com API Platform offers structured press information from over 10,000 Nordic and UK-companies. Current information types are press release, news, blogs, pictures, videos, documents, contact persons and events.", "http://www.mynewsdesk.com/partner/api/1_0/", "http://www.mynewsdesk.com/docs/partner_kanaler_1_0")
apis["Twirus"] = Learning("Twirus", "Twirus offers an API for 3rd parties to find and use data about local and international trends on twitter. Currently popular and trending topics, tags, and posters on twitter can all be viewed. Data can be used on a freely available website with attribution. A license may be obtained for other purposes such as historical statistical analysis.", "http://api.twirus.com/api/", "http://en.twirus.com/details/blog/601/API")
apis["WatchMouse"] = Learning("WatchMouse", "The WatchMouse service checks the behavior and availability of websites. WatchMouse allows site owners to optimize the internet experience of their customers. A worldwide network checks websites from 40 different locations in 25 countries around the globe.The API provides access to data collected via the service, access to monitoring settings, and direct commands to check a site.", "http://api.watchmouse.com/", "http://apidoc.watchmouse.com/")
apis["CliFlo"] = Learning("CliFlo", "The service provides access to the database maintained by the New Zealand national government of climate information. Data come from weather condition readings over time logged by approximately 6500 climate stations operating at various times since 1850. Over 600 stations currently contribute data. API methods supply both raw data and statistical summaries by station and for specific time periods. Raw data provide readings on key climatic measures with several frequencies: 10 minutes, hourly, and daily. Summary statistics aggregate readings by month and year and calculate estimates of normal levels for six readings over 30-year spans.", "http://cliflo.niwa.co.nz/pls/niwp/", "http://cliflo.niwa.co.nz/")
apis["QRickitQRCode"] = Learning("QRickit QR Code", "The service generates QR codes that encode web URLs, email addresses, or other text for access by scanner-equipped devices. An application interacts with the service by submitting an HTTP request to its URL with variables specifying parameters for the code generated. Parameters can designate a web URL or other text string to be encoded plus footer text desired along with the size and colors of the image to be generated. The API generates the image and returns it in PNG format.", "http://qrickit.com/api/qr?", "http://qrickit.com/qrickit_apps/qrickit_api.php")
apis["NYPLDigitalGallery"] = Learning("NYPL Digital Gallery", "The service allows applications to access digitized images from the New York Public Library collections. Searches can retrieve photos, maps, posters, illuminated manuscripts, ebooks, and other content from a repository of over 300,000 scanned images. Much of the material documents rare and historic resources from the NYPL collections.API methods support submitting a search query with a keyword to match against collection records, with optional parameters to limit the match to image captions, subject descriptors, name of the creator or other person involved, etc. Search can be limited by to specific albums, books, etc. within the NYPL collection. Images can also be retrieved by NYPL call number or by provenance (all images from a specific source).", "http://digitalgallery.nypl.org/feeds/dev/atom/", "http://digitalgallery.nypl.org/feeds/dev/atom/docs/")
apis["FilesTube"] = Learning("FilesTube", "From their site: This API helps you put FilesTube Search in your web pages. FilesTube.com is a search engine designed to search files in various file sharing and uploading sites. FilesTube finds files matching your search criteria among files seen recently in uploading sites by our search spider.", "http://api.filestube.com/", "http://www.filestube.com/api.html")
apis["MiMIMetabolomics"] = Learning("MiMI/Metabolomics", "The service provides a data repository supporting analysis in systems biology of genetic and metabolomic effects and molecular interactions. Available data include the MiMI database of protein interaction characteristics, which gathers input from multiple databases and sources within the field of biology. The repository also draws on daily updates of PubMed resources and reports from biomedical research. This single point of access allows queries and analysis against multiple interrelated data sources.API methods support search by free text or by a specific gene identifier. Returned data can include known compounds, interactions, and reactions. Methods can also return a list of interactions discussed in biological literature, discovered via natural language processing.", "http://mimi.ncibi.org/MimiWeb/fetch.jsp?", "http://mimi.ncibi.org/MimiWeb/ws/about_mimi.html")
apis["OpenCorporates"] = Learning("OpenCorporates", "OpenCorporates is a database of corporate data. OpenCorporates offers users the ability to search for information on 30 million corporations from around the world. Users can also search by type of corporation. The OpenCorporates API allows developers to access and integrate the data and functionality of OpenCorporates with other applications. Some example API methods include searching and retrieving information on corporation by type, jurisdiction, and company ID.", "http://api.opencorporates.com", "http://blog.opencorporates.com/")
apis["ZingChart"] = Learning("ZingChart", "The service allows creation of charts and graphs in Flash or HTML5 formatting using programmatic controls. Applications supply data to be charted and specifications for the graphical appearance to be generated. The service renders imagery reflecting the input data according to the specified output formatting.API methods support uploading of datasets along with output formats: image format and quality level, width and height, encoding standards, file location, etc. The service renders the chart specified by the output variables in the request. Tutorials demonstrate creation of static images, downloadable PDF, and overall use of the API methods.", "http://api.zingchart.com/", "http://api.zingchart.com/docs/")
apis["LibDir"] = Learning("LibDir", "LibDir is an openly editable web directory. Submissions, changes, and deletions all appear instantly. The LibDir API provides access to the various submissions and entries available in the LibDir database.", "http://libdir.com/api/", "http://libdir.com/api/info")
apis["BYUEmailVerification"] = Learning("BYU Email Verification", "The service validates email addresses under the internet domains used by Brigham Young University. It accepts a character string as input which it compares against records for the buy.edu and byu.net domains. The system response either confirms that the address string submitted is associated with a BYU user account or an error message that the address is not recognized.API methods check whether a submitted string identifies a properly formatted email address in domains managed by BYU. It then checks the specific address against the university&amp;#039;s login databases to confirm whether it is registered for a user account there or whether it forwards to a valid BYU address.", "https://ws.byu.edu/services/emailVerification-v1/", "https://developer.byu.edu/wiki/display/SOA/EmailVerification+Web+Service+Documentation")
apis["Lexaurus"] = Learning("Lexaurus", "REST API to manage and distribute controlled vocabularies, taxonomies, or data sets. Suite of products also includes a fully featured editor which can be used to create and edit vocabularies. This can be used as a stand alone tool or tightly integrated with Lexaurus Bank of existing controlled vocabularies for existing applications, encouraging consistency across related applications.", "http://public.lexaurus.net/public/linkeddata/", "http://culturegrid.lexaurus.net/culturegrid/api")
apis["HInvDB"] = Learning("H-InvDB", "The service provides access to the H-Invitational Database (H-InvDB) of human genes and genetic structure. The database documents research analyzine all human gene transcripts with annotations from the service provider describing genetic structures, observed variants, and highly detailed interactions of genetic sequences and processes.API methods support search against the database by individual gene identifier, keywords in description text, location on on a particular chromosome or in relation to other genes, and more. Methods", "http://h-invitational.jp/hinv/hws/", "http://h-invitational.jp/hinv/hws/doc/index.html")
apis["bkkeepr"] = Learning("bkkeepr", "Use the bkkeepr API to get a reader&amp;#039;s reading data and get the reading data for a book. Some ideas for developer projects are to see who&amp;#039;s reading similar things, locate most-read books, create charts of book stats, who reads the most pages, and who&amp;#039;s reading this book now widgets. Bkkeepr, which is meant to be a Last.fm-like service for books so that you can track your reading and bookmark on the go, is a project from booktwo.org, whose mission is, in part, to stimulate and debate the future of literature.", "http://bkkeepr.com/api", "http://booktwo.org/notebook/the-bkkeepr-api/")
apis["Crumbs"] = Learning("Crum.bs", "The Crum.bs API offers a URL Shortener in two styles: the Simpleshorten and the Advanced Shorten. The Simpleshorten responds to a simple url request whereas the Advanced Shorten service returns data via JSON or url formats and takes in more information.", "http://crum.bs/api.php?function=", "http://blog.crum.bs/?p=12")
apis["GovTrackus"] = Learning("GovTrack.us", "From their site: GovTrack.us tracks the U.S. Congress and is a reference for legislation, votes, Members of Congress, congressional districts, and the congressional record. The database that powers the site is also made freely available, and several APIs are available. APIs are URLs on GovTrack that serve XML rather than HTML. They are intended to be called by applications to retrieve data dynamically.", "http://www.govtrack.us/congress", "http://www.govtrack.us/developers")
apis["NSDLRepositoryUpdateService"] = Learning("NSDL Repository Update Service", "The National Science Digital Library (NSDL) is the national online portal for education and research on learning in science, technology, engineering, and mathematics in the United States. The NSDL provides a XML repository search server tool called the Digital Discovery System (DDS), complete with an API built on top of Apache Lucene.When a user uses the DDS tool in conjunction with a XML repository, they can use RESTful calls to remotely create, update, and delete collections and items in their repository using the DDS&amp;#039;s  Repository Update Service web service. Client access to a DDS repository system and, likewise, the API is governed by a list of valid IP&amp;#039;s that can be specified in the DDS&amp;#039;s Collection Manager interface.", "http://nsdl.org/nsdl_dds/services/ddsupdatews1-1?", "http://nsdl.org/nsdl_dds/services/ddsupdatews1-1/ddsupdatews_api_documentation.jsp")
apis["Dribbble"] = Learning("Dribbble", "Dribbble API provides access to the webdesign showcases on dribbble.com. You can access individual shots, players, comments, and more details.Note: As of Dec. 2010, no API key is required, but according to the site, this will likely change (as well as the API call limit).", "http://api.dribbble.com", "http://dribbble.com/api")
apis["trim"] = Learning("tr.im", "Use the tr.im API to create tr.im URLs outside of the standard website forms. With tr.im on the main site, you can tr.im it and tweet it to Twitter in the same action. Also on the main site, after you log in, you can view all your tr.im URLs since the time that you signed up. With the API, you can shorten URLS, submit a custom URL that you prefer to an auto-generated URL, insert tag words to the URL, submit usernames and passwords to attach to the generated URL, and get a list of the domain names currently configured as domain name shortening services that tr.im will not allow to be in the destination URL.", "http://tr.im/api/trim_url.&amp;lt;format&amp;gt;", "http://tr.im/")
apis["DataWeave"] = Learning("DataWeave", "DataWeave provides actionable public data for applications and analytics by aggregating, parsing, organizing and visualizing millions of data points from the Web. This data is then offered to users in a uniform format via a set of data APIs. This set of APIs includes data on commodity prices, UN population statistics, eCommerce prices, earthquakes, India trade data, world weather and more. The APIs use RESTful calls with responses formatted in JSON.", "http://api.dataweave.in/v1/", "http://www.dataweave.in/apis")
apis["SkybufferCloudChecklist"] = Learning("Skybuffer Cloud Checklist", "Cloud Checklist by Skybuffer is a web application that allows users to manage lists of tasks synchronously via standard browser-based web client or by using application programming interfaces (APIs) provided for development.The Cloud Checklist API allows developers to access and integrate the functionality of Cloud Checklist with other applications. Some example API methods include managing users, managing viewers, and listing information and messages.", "https://apps.skybuffer.com/checklist/api/1.0/", "https://dev.skybuffer.com/version/1")
apis["Yummly"] = Learning("Yummly", "The Yummly Recipe API lets you lets you integrate recipes and faceted recipe search into your websites or mobile applications.Since Yummly understands the recipe Ã¢ÂÂingredients, diets, allergies, nutrition, taste, techniques &amp; moreÃ¢ÂÂ we can connect your users with the best recipes available for their unique food preferences.", "http://api.yummly.com/v1", "https://developer.yummly.com/")
apis["FAOFisheriesandAquacultureFactSheets"] = Learning("FAO Fisheries and Aquaculture Fact Sheets", "Part of an effort by the UN&amp;#039;s Fisheries and Aquaculture Organization to modernize, improve, and streamline the global flow of information about fishery statistics, fishery resources, and stock status and trends. Web services are part of establishing an open and interoperable platform based on XML, HTTP and REST to make available selected information from the organization&amp;#039;s Fisheries and Aquaculture Fact Sheets. The API gives access to lists of fact sheets by domain and international language, fish stocks by species and geographic area, etc.", "http://www.fao.org/figis/ws/factsheets/", "http://www.fao.org/fishery/topic/18038/en")
apis["Goodreads"] = Learning("Goodreads", "Use the Goodreads API to get the books on a shelf, get your friends&amp;#039; updates, link to a book by ISBN or other method, get the url for a book or author, get a members&amp;#039; friends, look up a member by email address, and get reviews by ISBN.  The Goodreads API allows developers access to Goodreads data in order to help websites or applications that deal with books be more personalized, social, and engaging. The API can be used in many ways, including:Review Syndication: Goodreads has 10 million reviews across 700,000 titles. The API lets users display these reviews on their website.Goodreads Connect: Members can connect to their Goodreads account, and developers have full access to the books, ratings, and reviews the member has in their shelves, as well as the member&amp;#039;s friends. This can be used to personalize an ecommerce store, power recommendations, show a widget of a member&amp;#039;s favorite books, build a mobile or desktop client app, and more.The API uses RESTful calls and responses are formatted in XML.", "http://www.goodreads.com", "http://www.goodreads.com/api")
apis["GreatSchools"] = Learning("GreatSchools", "Find nearby U.S. schools by zip code, city or full address. Once you find a school, see information about each school, including address. Dig deeper and retrieve reviews from users or students&amp;#039; test scores.", "http://api.greatschools.org/", "http://www.greatschools.org/api/registration.page")
apis["USPSMerchantReturns"] = Learning("USPS Merchant Returns", "The service provides expedited processing of shipping for returns of merchandise delivered via the U.S. Postal Service (USPS). Specifically, it augments service to merchants through the provider&amp;#039;s Scan Based Payment program by allowing expedited processing of customer product returns with quick refunds of purchase price. By offering merchant-funded USPS return labels, sellers can encourage trial purchases and simplify interactions with customers. Each shipping label generated by the service carries an Intelligent Mail Package Barcode (IMpb) for automated package tracking.API methods support submission of a return processing request with customer name and address, product specifications, and merchant account ID. The API responds with a fully formatted shipping label, USPS tracking number, and related processing information.", "https://returns.usps.com /Services", "https://ribbs.usps.gov/index.cfm?page=merchantreturns")
apis["iPlantSemanticWebHTTP"] = Learning("iPlant Semantic Web HTTP", "The service accepts JSON data conforming to a specified format and generates compliant RDF/XML OWL code that allows interaction via the semantic web. The input format is designed to support the needs of botanical science, so it ensures collection of data needed to create useful RDF/XML output data while users remain focused on botany rather than learning a new data format.API methods support creation of RDF expressions for types and properties (entities and attributes) and generation of linked data graphs in a number of formats: Provider Description Graph (PDG), Resource Description Graph (RDG), and others. Documentation includes instruction in the required JSON input format.", "http://sswap.info/api", "http://www.iplantcollaborative.org/discover/semantic-web/semantic-web-http-api")
apis["Jamendo"] = Learning("Jamendo", "The Jamendo API offers users and developers access to Jamendo&amp;#039;s database of albums, artists, tracks, playlists, reviews, and more. The API can be used through a RESTful protocol, and data is returned in formats ranging from XML to JSON to others. Signup is required at devportal.jamendo.com", "http://api.jamendo.com/v3.0", "http://developer.jamendo.com/v3.0")
apis["AppsforGhent"] = Learning("Apps for Ghent", "The service provided by the city of Ghent in Belgium  encourages open data sharing by companies and other organizations It seeks to make available operating information about a business such as location, hours of operation, product offerings, and prices. The service encourages interoperation and interaction by applications providing information useful to both residents and visitors.API methods implement protocols of the Data Tank methodology to present open data about government and public services, health and social support functions, demographic information, jobseeking and employment, places of business, tourist attractions and festivals, etc. Returned data provide name and activities associated along with the location, expressed as latitude and longitude.", "http://data.appsforghent.be/", "http://appsforghent.be/api-tdt/")
apis["ChEMBL"] = Learning("ChEMBL", "The service from the European Bioinformatics Institute (EBI) provides programmatic access to a database of biologically active small molecules with drug-like effects. Data available include 2-D structure diagrams, calculated properties, and indicators of biological activities.API methods support retrieval of lists of chemical compounds based on inputs in various formats, from the local database ID to standard chemistry designations. The API can also retrieve components or substructures and similar compounds for a submitted identifier. Methods can return bioactivity measures as part of descriptive data.", "http://www.ebi.ac.uk/chemblws", "https://www.ebi.ac.uk/chembldb/index.php/ws")
apis["WinTheTrophy"] = Learning("WinTheTrophy", "WinTheTrophy offers developers their BetBot API which gives access to making sports bets. The API features a RESTful protocol and returns data via the JSON and XML formats.", "http://www.winthetrophy.com/apiv1/", "http://winthetrophy.com/apiv1_documentation")
apis["GoogleDirections"] = Learning("Google Directions", "The Google Directions Web Service web service calculates directions between locations using an REST request. Directions may specify origins, destinations and waypoints either as text strings (e.g. &amp;quot;Chicago, IL&amp;quot;) or as latitude/longitude coordinates. The Directions web service can return multi-part directions using a series of waypoints.This service is designed for giving directions for static addresses for placement of application content on a map and this service is not designed to respond in real time to user input, for example. The Directions Web Service is a companion to the existing Geocoding and Elevation Web Services, and allows applications to obtain Driving, Bicycling, and Walking directions through an XML/JSON REST interface. All of the features of the Map API v3 Directions service are supported, including Ã¯Â¿Â½avoid highwaysÃ¯Â¿Â½, Ã¯Â¿Â½avoid tollsÃ¯Â¿Â½, and waypoint optimization (travelling salesman solver).", "http://maps.google.com/maps/api/directions/", "https://developers.google.com/maps/documentation/directions/")
apis["DonorsChoose"] = Learning("DonorsChoose", "DonorsChoose.org is an online charity that makes it easy for anyone to help students in need.Here&amp;#039;s how it works: public school teachers from every corner of America post classroom project requests on DonorsChoose.org. Requests range from pencils for a poetry writing unit, to violins for a school recital, to microscope slides for a biology class.Then, you can browse project requests and give any amount to the one that inspires you. Once a project reaches its funding goal, we deliver the materials to the school.You&amp;#039;ll get photos of your project taking place, a thank-you letter from the teacher, and a cost report showing how each dollar was spent. If you give over $100, you&amp;#039;ll also receive hand-written thank-you letters from the students.DonorsChoose.org&amp;#039;s simple JSON API allows developers to pull DonorsChoose.org classroom project listings into their website or application using project selection criteria of their choosing.The JSON API has been used by DonorsChoose.org partners like Chevron, SONIC Drive-In, NBC Universal, Bing, PayPal, and others to build high-profile highly customized giving and cause marketing experiences.The API also enables developers to donate to projects or purchase gift cards without routing users to DonorsChoose.org for payment.", "http://api.donorschoose.org/", "http://developer.donorschoose.org/")
apis["Wassr"] = Learning("Wassr", "Use the Wassr API to interact with the OKIGARU messaging hub, which is a similar service as Twitter except with a strong SecondLife tie-in and a base in Japan. Use the API to view public or friend timelines, update statuses, interact with SecondLife, view friends, view followers, view pictograms, create or delete friendships, create or delete favorites, and interact with channels.", "http://api.wassr.jp", "http://wassr.com/help/api/")
apis["AppURL"] = Learning("AppURL", "AppURL is a service that connects applications to the web using HTTP URLs. AppURL offers features such as cross-platform linking, ability for applications to show up in search engine results, and documentation to help other developers understand how to link to the applications.The AppURL API allows developers to access and integrate the functionality of AppURL with other applications. Some example API methods include transforming apps to links, uploading JSON files to URLs, and retrieving URL links.", "http://api.appurl.org/", "http://appurl.org/docs/api")
apis["Sigimera"] = Learning("Sigimera", "Sigimera is a crises information platform that combines reports from official sources with on-the-ground information in order to support people in and around natural disasters. Sigimera can be used to host multimedia data such as images or videos of the scene after a natural disaster, or the statuses of useful locations (e.g. whether a hospital or airport is intact or over-crowded). Sigimera also provides a list of missing persons and their current statuses (missing/found/dead).The Sigimera API allows users to integrate information from Sigimera into other applications. RESTful calls can be used to retrieve crises, images, missing persons, and locations in a variety of data formats.", "http://api.sigimera.org/v1/", "https://api.sigimera.org/")
apis["UniProt"] = Learning("UniProt", "UniProt is a protein sequence and annotation database for the scientific community. The UniProt API offers RESTful access to all its resources and services.", "http://www.uniprot.org/", "http://www.uniprot.org/faq/28")
apis["YourMapper"] = Learning("Your Mapper", "Your Mapper aggregates local government data from cities across the nation, standardizes it, geocodes it, and keeps it up to data for you to use in your apps and services.  The Your Mapper API allows developers and entrepreneurs to integrate the data into their websites or mobile applications. Users can either use the embedded map service for their sites, or grab the data in standard formats to create apps.", "http://www.yourmapper.com/api/", "http://www.yourmapper.com")
apis["RSSmeme"] = Learning("RSSmeme", "From their site: The RSSmeme API enables you to pull information out of RSSmeme. All you have to do is tack on some parameters to a URL and RSSmeme will filter the correct data.", "http://www.rssmeme.com/api/", "http://www.rssmeme.com/api/help/")
apis["EvoIOPhylotasticTNRS"] = Learning("EvoIO Phylotastic/TNRS", "The service provides for resolution of species and organism names to scientific names as defined in a particular authority. The ideal resolution links a species name as it appears to a uniform resource identifier (URI) that unambiguously specifies it within any of various authority lists. The service is intended to standardize use of species names in taxonomy trees depicting species relationships in the Phylotastic web service.API methods support submission of a list of taxonomic names for the service to resolve, and the API returns a URL that provides the service output along with date submitted and other metadata. Methods also support retrieval of the resolved name data, which returns a listing of authorities and the URIs they define for the submitted name.", "http://api.phylotastic.org/tnrs/", "http://www.evoio.org/wiki/Phylotastic/TNRS")
apis["Tixik"] = Learning("Tixik", "The Tixik.com API lets users retrieve information about famous places around the world. Tixik.com is the information website about interesting places all over the world. The information is supplied with on-line maps, pictures, and useful information and experience described by the travellers. Users can find a listing of famous places by providing the latitude and longitude of their current location. Search simply by GPS position. The result is GPS, place name, description, image, and backlink to Tixik.com (for more information). The API uses RESTful protocol and responses are formatted in XML.", "http://en.tixik.com/api", "http://www.tixik.com/info/api/")
apis["FizberEvents"] = Learning("Fizber Events", "The Fizber Events API searches for events by city name. The service returns the latitude and longitude of an event, so it&amp;#039;s easy to embed in a map. The response also includes a category identifier and a link to more information about the event on the web.", "http://www.fizber.com/xml_data/xml_events.xml", "http://www.fizber.com/services/fizber_xml.html#div_events")
apis["SocialArchive"] = Learning("Social Archive", "The Social Archive contains historical tweets and other status messages. Using its API you can retrieve a real-time stream, as we as search Twitter by keyword.The Social Archive, as the name suggests, aims to be a place to store messages permanently. It also aims to be as open as possible, providing access to its data and information. Using the service you can search by keyword, user, location or hash tag. You can also specify Twitter-only results, another service, or receive results from any service archived by The Social Archive.", "http://dataranch.net/archiver/search.xml", "http://archiver.co/api.html")
apis["Weewar"] = Learning("Weewar", "The Weewar API allows you to create notifiers, widgets, or other display apps that contain Weewar.com statistics, user information, open games, maps, and so on. The API comes in a read-only flavor or a read and write flavor, which is suitable for creating a bot that can play a Weewar.com game with you or others. Weewar.com is an award winning strategy game where users take turns. Maps and scenarios abound as you lead your pixel armies against up to 5 other users.", "http://weewar.com/api1", "http://weewar.com/api")
apis["WesternAustralianMuseum"] = Learning("Western Australian Museum", "The Western Australian Museum comprises six public sites, housing over 4.5 million historical objects. The Museum also manages 200 shipwreck sites off of the Western Australian coast.The Western Australian Museum API allows users to retrieve information related to artifacts and shipwrecks owned by the museum.This is a REST-based API that returns data in XML and JSON formats, and is free to use with no signup requirements.", "http://www.museum.wa.gov.au/", "http://www.museum.wa.gov.au/sandbox/")
apis["OpenLibrary"] = Learning("Open Library", "Open Library is an open, editable library catalog, building towards a web page for every book ever published. To date, we have gathered about 30 million records (13.4 million are available through the site now), and more are on the way. A project of the Internet Archive. Allows interaction with book records, cover images, subject listings, and more for Open Library, an open, editable library catalog, building towards a web page for every book ever published. Methods allow retrieval of book records, cover images, subject headings, and user lists as well as search-inside and even reading online.", "http://www.openlibrary.org/api/", "http://openlibrary.org/developers/api")
apis["Wakoopa"] = Learning("Wakoopa", "From their site: Wakoopa tracks what kind of software or games you use, and lets you create your own software profile. Use the Wakoopa API to access some of your data via XML. The following data is available: your most used software; your most recently used software; latest versions of your software; comments on your profile; reviews you&amp;#039;ve written; your contacts on Wakoopa; and teams you are a member of.", "http://api.wakoopa.com", "http://social.wakoopa.com/api")
