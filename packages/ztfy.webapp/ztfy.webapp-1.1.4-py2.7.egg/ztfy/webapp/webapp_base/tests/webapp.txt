ZTFY.webapp
===========

The template supports a single project name, without namespace.

>>> import os
>>> def print_dir(d):
...     for dirpath, dirnames, filenames in sorted(os.walk(d)):
...         for filename in sorted(filenames):
...             # Hack for http://trac.pythonpaste.org/pythonpaste/ticket/414
...             if not filename.endswith('.pyo'):
...                 print os.path.join(dirpath,filename)

>>> from paste.script import command
>>> project = 'sample'
>>> commands = command.get_commands()
>>> cmd = commands['create'].load()
>>> runner = cmd('create')
>>> option_args = []
>>> extra_args = [
...            "python_package=sample",
...            "interpreter=testpy",
...            "release=1.1.0",
...            "version=0.1",
...            "description=test_description",
...            "long_description=test_long_description",
...            "keywords=test_keyword",
...            "author=test_author",
...            "author_email=test_author_email",
...            "url=http://example.com",
...            "license_name=Test Public License",
...            "offline=1",
...            ]
>>> exit_code = runner.run(option_args + ['-t', 'ztfy.webapp', project] + extra_args)
Selected and implied templates:
  ztfy.webapp#ztfy.webapp  A ZTFY webapp project, referencing all ZTFY packages
<BLANKLINE>
Variables:
  author:            test_author
  author_email:      test_author_email
  description:       test_description
  egg:               sample
  interpreter:       testpy
  keywords:          test_keyword
  license_name:      Test Public License
  long_description:  test_long_description
  offline:           1
  package:           sample
  project:           sample
  python_package:    sample
  release:           1.1.0
  url:               http://example.com
  version:           0.1
Creating template ztfy.webapp
Creating directory ./sample
<BLANKLINE>
Your project has been created! Now, you want to:
1) put the generated files under version control
2) run: python bootstrap.py
3) run: ./bin/buildout
<BLANKLINE>

>>> print_dir('sample')
sample/README.txt
sample/bootstrap.py
sample/buildout.cfg
sample/debug.ini
sample/deploy.ini
sample/setup.py
sample/etc/apidoc.zcml
sample/etc/debug.zcml
sample/etc/deploy.zcml
sample/etc/overrides.zcml
sample/etc/security.zcml
sample/etc/zope-debug.conf
sample/etc/zope-deploy.conf
sample/etc/mod_wsgi/sample.conf
sample/extends-cache/README.txt
sample/src/webapp/__init__.py
sample/src/webapp/configure.zcml
sample/src/webapp/debug.py
sample/src/webapp/startup.py
sample/src/webapp/tests/__init__.py
sample/src/webapp/tests/ftesting.zcml
sample/src/webapp/tests/tests.py
sample/var/filestorage/README.txt
sample/var/htdocs/README.txt
sample/var/log/README.txt
sample/var/zeostorage/README.txt

>>> print open(os.path.join('sample', 'setup.py')).read()
from setuptools import setup, find_packages
...
      shell = webapp.debug:Shell
...
