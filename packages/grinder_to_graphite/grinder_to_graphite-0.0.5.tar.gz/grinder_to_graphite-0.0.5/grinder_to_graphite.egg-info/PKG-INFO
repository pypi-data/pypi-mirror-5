Metadata-Version: 1.1
Name: grinder-to-graphite
Version: 0.0.5
Summary: Ingests data from Grinder logs into Graphite where it can be visualized.
Home-page: https://bitbucket.org/travis_bear/grinder_to_graphite
Author: Travis Bear
Author-email: travis_bear@yahoo.com
License: LICENSE.txt
Description: ===================
        Grinder to Graphite
        ===================
        
        Overview
        ========
        
        Grinder to Graphite (g2g) is a tool that analyzes the logs from
        your Grinder tests, and sends the data into Graphite where it
        can be visualized in a variety of ways.
        
        Realtime test data may be sent to Graphite while your Grinder run
        is in progress, or it may be sent to Graphite after your test is
        completed.
        
        Once the data is in Graphite you have a great amount of flexibility
        in the types of reports and visualizations you want to generate.
        
        
        Who should use g2g?
        ===================
        
        g2g is a good match for you if any of the following are 
        true:
        
         * You have access to a Graphite setup already, or you don't
           mind installing it.
        
         * You sometimes do long-duration Grinder runs and you don't
           want to wait for the run to complete before you can see
           charts of the incoming data.
        
         * You want to integrate data from The Grinder with data from a 
           variety of other sources.  (OS metrics like CPU use, application
           metrics like DB lookups per second, etc.)
        
        
        Who should use Grinder Analyzer instead of g2g?
        ===============================================
        
        If you just want to get some fast, simple graphs from your Grinder
        run, without a lot of setup hassle, Grinder Analyzer is probably
        a better bet for you than g2g.  See:
        
        http://track.sourceforge.net
        
        
        
        Installation
        ============
        
        g2g is written in Python.  The best way to install g2g is via pip.
        ::
        
            pip install grinder_to_graphite 
        
        While it is certainly possible to install grinder_to_graphite into
        your core Python environment, we recommend installing it into a
        virtual environment with virtualenv.
        
        Once pip has installed g2g, you will need to generate a
        config file, and edit it to be suitable for your own
        environment.  g2g comes with a command-line option to
        generate a sample config file
        ::
        
            g2g -e
        
        
        This will generate a file named 'g2g.sample.conf'
        which you can use as the basis for creating your own
        configuration.
        
        
        There must be a running installation of Graphite on your
        network for g2g to forward data to.  See the Graphite web site for
        details on setting up and configuring Graphite
        
        http://graphite.wikidot.com/
        
        
        
        
        Usage
        =====
        
        The executable that comes with with Grinder to Graphite is g2g.  The
        normal usage, (after adjusting the values in your sample config
        file to be appropriate for your environment) looks like this:
        ::
        
            g2g  <config_file>
        
        
        To see a full list of all your g2g options:
        ::
        
            g2g --help
        
        
        For realtime (tailing) mode to work, you will first need to do a 
        quick run with your grinder script to generate a valid mapping 
        file.  A mapping file is a grinder log file that most likely has a 
        name like <hostname>-0.log.  The final lines of this file contain
        a summary table of the performance data.  Once a valid mapping
        file is in place, you can do realtime reporting for your Grinder
        script as many times as you want.
        
        
        
        Additional Resources
        ====================
        
        Java/JMX counters and application-level metrics can be fed to
        Graphite using the JMXTrans tool:
        
        http://code.google.com/p/jmxtrans/
        
        OS-level metrics (CPU, mem, etc.) can be fed to Graphite via
        quickstatd or collectd (with graphite plugin)
        
        https://bitbucket.org/travis_bear/quickstatd
        
        
Keywords: graphite grinder logster logs
Platform: UNKNOWN
Requires: mtFileUtil
