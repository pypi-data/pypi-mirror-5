Metadata-Version: 1.1
Name: placeholder
Version: 0.4.1
Summary: Operator overloading for fast anonymous functions.
Home-page: https://bitbucket.org/coady/placeholder
Author: Aric Coady
Author-email: aric.coady@gmail.com
License: Apache Software License
Description: 
        A **placeholder** object uses operator overloading to create partially bound functions on-the-fly.
        When used in a binary expression, it will return a callable object with the other argument bound.
        It's useful for replacing lambda when doing functional programming.
        For example:
        
         * __[key]  ==  operator.itemgetter(key)
         * __.name  ==  operator.attrgetter('name')
         * (1 + __) ==  (1).__add__ or partial(operator.add, 1)
         * (__ - 1) ==  (1).__rsub__ or lambda obj: obj - 1
        
        |
        
        A **composer** object extends placeholders with function composition, but at a performance cost.
        In addition to operator overloading, functions can be supplied explicitly with postfix notation.
        
         * (___ * 2) + 1            ==  lambda obj: obj*2 + 1
         * composer(len, math.sqrt) ==  lambda obj: math.sqrt(len(obj))
         * composer(len) + 1        ==  lambda obj: len(obj) + 1
        
        |
        
        **__** and **___** are placeholder and composer singletons which can be imported from the module,
        but each can of course be instantiated and bound to any desired name.
        
        See tests for more example usage.
        Supported on Python 2.6 or higher, including Python 3.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
