INSTALLATION
============

pythondialog is packaged with Distutils (the still-current standard
framework for packaging simple Python extensions). With the current
state of Python packaging and installation tools, there are several ways
to perform the installation of pythondialog from source.

Probably, the easiest and cleanest method at this date (September 2013)
is to use pip (optionally in a virtualenv). Typically, you just have to
run one of the following commands with the appropriate privileges:

  pip install pythondialog       (which installs from PyPI)

or

  pip install /path/to/python3-pythondialog-X.Y.Z.tar.gz

or

  pip install https://url/to/python3-pythondialog-X.Y.Z.tar.gz

or

  pip install http://url/to/python3-pythondialog-X.Y.Z.tar.gz

Note: old versions of pip don't support https.

Uninstallation is as easy as:

  pip uninstall pythondialog

For more information about pip and virtualenv, you can visit:

  <https://pypi.python.org/pypi/pip>

and:

  <https://pypi.python.org/pypi/virtualenv>


Old way, without pip
--------------------

The following instructions explain how to install pythondialog directly
from its setup.py, without using pip. If possible, the method based on
pip is preferable because it makes uninstallation standard and easy.

Here are the steps:
  - make this file's directory your shell's current directory
  - optionally edit setup.cfg (cf. the "Installing Python Modules"
    chapter of the Python documentation).

  - a) 1) type:

            python3 ./setup.py build

       2) then, as root (after replacing /usr/local with the actual
          installation prefix you want to use):

            python3 ./setup.py install --prefix=/usr/local \
                                       --record /path/to/foo

          where foo is a file of your choice which will contain the list
          of all files installed on your system by the preceding
          command. This will make uninstallation easy (you could ommit
          the "--record /path/to/foo", but uninstallation could not be
          automated, then).

    OR

    b) type, as root (after replacing the installation prefix):

            python3 ./setup.py install --prefix=/usr/local \
                                       --record /path/to/foo

       This will automatically build the package before installing it.
       The observations made in a) also apply here.


If this default installation is not what you wish, please read the
Distutils documentation. In Python 2.1 and above, it is included in the
base Python documentation and the chapter you'll need is most probably
"Installing Python Modules".


UNINSTALLATION
==============

If you installed pythondialog with pip, you can uninstall it with the
following command:

  pip uninstall pythondialog

(which should be run under the same account that was used to run the
"pip install" command)

Otherwise, if you have followed the old installation procedure, you have
a /path/to/foo file that contains all the files the installation process
put on your system. Great! All you have to do is:

   while read file; do rm -f "$file"; done < /path/to/foo

under a Bourne-compatible shell and with the appropriate privileges
(maybe root, depending on where you installed pythondialog).

Note: this will handle file names with spaces correctly, unlike the
simpler "rm -f $(cat /path/to/foo)".


# Local Variables:
# coding: utf-8
# fill-column: 72
# End:
