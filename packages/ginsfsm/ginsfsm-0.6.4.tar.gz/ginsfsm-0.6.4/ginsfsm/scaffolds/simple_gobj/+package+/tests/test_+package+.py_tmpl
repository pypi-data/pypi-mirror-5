import unittest

from ginsfsm.gobj import GObj

from {{package}} import {{package.capitalize()}}

import logging
logging.basicConfig(level=logging.DEBUG)


########################################################
#       Root GObj
########################################################

def ac_response(self, event):
    assert(event.data == 'XXX')


ROOT_FSM = {
    'event_list': (
        'EV_INPUT_EVENT:bottom output',
        'EV_OUTPUT_EVENT:bottom input',
    ),
    'state_list': (
        'ST_IDLE',
    ),
    'machine': {
        'ST_IDLE':
        (
            ('EV_OUTPUT_EVENT', ac_response, None),
        ),
    }
}


class RootGObj(GObj):
    def __init__(self):
        GObj.__init__(self, ROOT_FSM)
        self.start_up()

    def start_up(self):
        ''' Create gobj childs, initialize something...
        '''
        self.child = self.create_gobj(None, {{package.capitalize()}}, self)


########################################################
#       Tests
########################################################

class Test_{{package.capitalize()}}(unittest.TestCase):
    def setUp(self):
        self.gobj_parent = RootGObj()
        settings = {
            'GObj.trace_mach': True,
            'GObj.logger': logging,
        }
        self.gobj_parent.overwrite_parameters(-1, **settings)

    def test_broadcast(self):
        self.gobj_parent.send_event(
            self.gobj_parent.child,
            'EV_INPUT_EVENT',
            data='XXX',
        )
