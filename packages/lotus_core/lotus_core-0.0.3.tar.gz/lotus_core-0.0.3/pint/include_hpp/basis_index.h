

/*
This file is generated by the ptyhon-script below using the Python-2.7 interpreter 


from sys import argv

max_st=10


def get_num(tn):
  return (tn+2)*(tn+1)/2

def print_no_to_n(no_to_n,in_max_st,in_num):
  for st in range(in_max_st+1):
    for no in range(in_num):
      print no_to_n[st][no],",",


#
#  main loop
#

print "\n" 
start_of_comment = '/'+'*'
end_of_comment   = '*'+'/'
print start_of_comment
print "This file is generated by the ptyhon-script below using the Python-2.7 interpreter \n\n"

fp = open(argv[0], 'r')
for line in fp.readlines():
  print line,
fp.close
print "\n \n" 

num=get_num(max_st)



print end_of_comment
print "\n \n \n" 

print "#ifndef BASIS_INDEX_H"
print "#define BASIS_INDEX_H"

print "namespace basis_index {"

n_to_no=[[[-1 for k in range(max_st+1)] for j in range(max_st+1)] for i in range(max_st+1)]
no_to_n0=[[-1 for j in range(num)] for i in range(max_st+1)]
no_to_n1=[[-1 for j in range(num)] for i in range(max_st+1)]
no_to_n2=[[-1 for j in range(num)] for i in range(max_st+1)]

for st in range(max_st+1):
#  print "  // ----- shell_type =",st,"-----"
  no=0
  for i3 in range(st+1):
    for i2 in range(st+1):
      for i1 in range(st+1):
        if (i1+i2+i3)==st:
          n_to_no[i1][i2][i3]=no
          no_to_n0[st][no]=i1
          no_to_n1[st][no]=i2
          no_to_n2[st][no]=i3
#          print "  // n_to_no[",i1,"][",i2,"][",i3,"]=",no,";"
#          print "  // no_to_n0[",st,"][",no,"]=",i1,";"
#          print "  // no_to_n1[",st,"][",no,"]=",i2,";"
#          print "  // no_to_n2[",st,"][",no,"]=",i3,";"
#          print ""
          no=no+1

print "  const int n_to_no[",max_st+1,"][",max_st+1,"][",max_st+1,"]={",
for i1 in range(max_st+1):
  for i2 in range(max_st+1):
    for i3 in range(max_st+1):
      print n_to_no[i1][i2][i3],",",
print "};"
print ""
print ""

print "  const int no_to_n0[",max_st+1,"][",num,"]={",
print_no_to_n(no_to_n0,max_st,num)
print "};"
print ""

print "  const int no_to_n1[",max_st+1,"][",num,"]={",
print_no_to_n(no_to_n1,max_st,num)
print "};"
print ""

print "  const int no_to_n2[",max_st+1,"][",num,"]={",
print_no_to_n(no_to_n2,max_st,num)
print "};"
print ""


print "}"

print "#endif // end of include-guard for  BASIS_INDEX_H"

 

*/

 
 

#ifndef BASIS_INDEX_H
#define BASIS_INDEX_H

namespace PInt {

namespace basis_index {
  const int n_to_no[ 11 ][ 11 ][ 11 ]={ 0 , 2 , 5 , 9 , 14 , 20 , 27 , 35 , 44 , 54 , 65 , 1 , 4 , 8 , 13 , 19 , 26 , 34 , 43 , 53 , 64 , -1 , 2 , 6 , 11 , 17 , 24 , 32 , 41 , 51 , 62 , -1 , -1 , 3 , 8 , 14 , 21 , 29 , 38 , 48 , 59 , -1 , -1 , -1 , 4 , 10 , 17 , 25 , 34 , 44 , 55 , -1 , -1 , -1 , -1 , 5 , 12 , 20 , 29 , 39 , 50 , -1 , -1 , -1 , -1 , -1 , 6 , 14 , 23 , 33 , 44 , -1 , -1 , -1 , -1 , -1 , -1 , 7 , 16 , 26 , 37 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 8 , 18 , 29 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 9 , 20 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 10 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 3 , 7 , 12 , 18 , 25 , 33 , 42 , 52 , 63 , -1 , 1 , 5 , 10 , 16 , 23 , 31 , 40 , 50 , 61 , -1 , -1 , 2 , 7 , 13 , 20 , 28 , 37 , 47 , 58 , -1 , -1 , -1 , 3 , 9 , 16 , 24 , 33 , 43 , 54 , -1 , -1 , -1 , -1 , 4 , 11 , 19 , 28 , 38 , 49 , -1 , -1 , -1 , -1 , -1 , 5 , 13 , 22 , 32 , 43 , -1 , -1 , -1 , -1 , -1 , -1 , 6 , 15 , 25 , 36 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 7 , 17 , 28 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 8 , 19 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 9 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 4 , 9 , 15 , 22 , 30 , 39 , 49 , 60 , -1 , -1 , 1 , 6 , 12 , 19 , 27 , 36 , 46 , 57 , -1 , -1 , -1 , 2 , 8 , 15 , 23 , 32 , 42 , 53 , -1 , -1 , -1 , -1 , 3 , 10 , 18 , 27 , 37 , 48 , -1 , -1 , -1 , -1 , -1 , 4 , 12 , 21 , 31 , 42 , -1 , -1 , -1 , -1 , -1 , -1 , 5 , 14 , 24 , 35 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 6 , 16 , 27 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 7 , 18 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 8 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 5 , 11 , 18 , 26 , 35 , 45 , 56 , -1 , -1 , -1 , 1 , 7 , 14 , 22 , 31 , 41 , 52 , -1 , -1 , -1 , -1 , 2 , 9 , 17 , 26 , 36 , 47 , -1 , -1 , -1 , -1 , -1 , 3 , 11 , 20 , 30 , 41 , -1 , -1 , -1 , -1 , -1 , -1 , 4 , 13 , 23 , 34 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 5 , 15 , 26 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 6 , 17 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 7 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 6 , 13 , 21 , 30 , 40 , 51 , -1 , -1 , -1 , -1 , 1 , 8 , 16 , 25 , 35 , 46 , -1 , -1 , -1 , -1 , -1 , 2 , 10 , 19 , 29 , 40 , -1 , -1 , -1 , -1 , -1 , -1 , 3 , 12 , 22 , 33 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 4 , 14 , 25 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 5 , 16 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 6 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 7 , 15 , 24 , 34 , 45 , -1 , -1 , -1 , -1 , -1 , 1 , 9 , 18 , 28 , 39 , -1 , -1 , -1 , -1 , -1 , -1 , 2 , 11 , 21 , 32 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 3 , 13 , 24 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 4 , 15 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 5 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 8 , 17 , 27 , 38 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , 10 , 20 , 31 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 2 , 12 , 23 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 3 , 14 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 4 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 9 , 19 , 30 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , 11 , 22 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 2 , 13 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 3 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 10 , 21 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , 12 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 2 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , 11 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 0 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , };


  const int no_to_n0[ 11 ][ 66 ]={};

  const int no_to_n1[ 11 ][ 66 ]={};

  const int no_to_n2[ 11 ][ 66 ]={};

}

} // end of namespace "PInt"

#endif // end of include-guard for  BASIS_INDEX_H
