
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb2\x12\xca\xbd\xa6N\x8ew\xdb\x1a\x91cE\x0e\x88M'
    
_lr_action_items = {'LESS_THAN_EQUALS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,14,-17,-20,-24,]),'NUMBER':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'GREATER_THAN_EQUALS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,20,-17,-20,-24,]),'LESS_THAN':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,22,-17,-20,-24,]),'NULL':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'TRUE':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'EMPTY':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'UNDEFINED':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'RPAREN':([1,2,3,4,5,6,7,9,10,23,24,27,28,29,30,31,32,33,34,35,37,38,39,40,41,],[-21,-18,-22,-19,-23,-16,-17,-4,-20,38,-3,-14,-9,-11,-15,-12,-10,-6,-7,-13,-8,-24,-1,-2,-5,]),'NOT_EQUALS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,15,-17,-20,-24,]),'$end':([1,2,3,4,5,6,7,9,10,12,24,27,28,29,30,31,32,33,34,35,37,38,39,40,41,],[-21,-18,-22,-19,-23,-16,-17,-4,-20,0,-3,-14,-9,-11,-15,-12,-10,-6,-7,-13,-8,-24,-1,-2,-5,]),'STRING':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'IS_NOT_EQUALS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,17,-17,-20,-24,]),'EQUALS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,18,-17,-20,-24,]),'LPAREN':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'GREATER_THAN':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,19,-17,-20,-24,]),'AND':([1,2,3,4,5,6,7,9,10,12,23,24,27,28,29,30,31,32,33,34,35,37,38,39,40,41,],[-21,-18,-22,-19,-23,-16,-17,-4,-20,25,25,-3,-14,-9,-11,-15,-12,-10,-6,-7,-13,-8,-24,-1,-2,-5,]),'FALSE':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'MATCHES':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,16,-17,-20,-24,]),'CONTAINS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,13,-17,-20,-24,]),'IS_EQUALS':([1,2,3,4,5,6,7,10,38,],[-21,-18,-22,-19,-23,21,-17,-20,-24,]),'NOT':([0,8,11,21,25,26,],[11,11,11,36,11,11,]),'OR':([1,2,3,4,5,6,7,9,10,12,23,24,27,28,29,30,31,32,33,34,35,37,38,39,40,41,],[-21,-18,-22,-19,-23,-16,-17,-4,-20,26,26,-3,-14,-9,-11,-15,-12,-10,-6,-7,-13,-8,-24,-1,-2,-5,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,8,11,25,26,],[9,9,9,9,9,]),'expression':([0,8,11,25,26,],[12,23,24,39,40,]),'factor':([0,8,11,13,14,15,16,17,18,19,20,21,22,25,26,36,],[6,6,6,27,28,29,30,31,32,33,34,35,37,6,6,41,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',109),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',110),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',114),
  ('expression -> term','expression',1,'p_expression_term','parser.py',118),
  ('term -> factor IS_EQUALS NOT factor','term',4,'p_term_is_not','parser.py',123),
  ('term -> factor GREATER_THAN factor','term',3,'p_term_comparison','parser.py',127),
  ('term -> factor GREATER_THAN_EQUALS factor','term',3,'p_term_comparison','parser.py',128),
  ('term -> factor LESS_THAN factor','term',3,'p_term_comparison','parser.py',129),
  ('term -> factor LESS_THAN_EQUALS factor','term',3,'p_term_comparison','parser.py',130),
  ('term -> factor EQUALS factor','term',3,'p_term_comparison','parser.py',131),
  ('term -> factor NOT_EQUALS factor','term',3,'p_term_comparison','parser.py',132),
  ('term -> factor IS_NOT_EQUALS factor','term',3,'p_term_comparison','parser.py',133),
  ('term -> factor IS_EQUALS factor','term',3,'p_term_comparison','parser.py',134),
  ('term -> factor CONTAINS factor','term',3,'p_contains','parser.py',138),
  ('term -> factor MATCHES factor','term',3,'p_matchse','parser.py',142),
  ('term -> factor','term',1,'p_term_factor','parser.py',146),
  ('factor -> STRING','factor',1,'p_factor_string','parser.py',151),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',155),
  ('factor -> TRUE','factor',1,'p_factor_constants','parser.py',159),
  ('factor -> FALSE','factor',1,'p_factor_constants','parser.py',160),
  ('factor -> UNDEFINED','factor',1,'p_factor_constants','parser.py',161),
  ('factor -> NULL','factor',1,'p_factor_constants','parser.py',162),
  ('factor -> EMPTY','factor',1,'p_factor_constants','parser.py',163),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_parens','parser.py',176),
]
