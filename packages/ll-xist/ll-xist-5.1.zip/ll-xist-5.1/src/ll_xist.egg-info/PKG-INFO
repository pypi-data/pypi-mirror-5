Metadata-Version: 1.1
Name: ll-xist
Version: 5.1
Summary: Extensible HTML/XML generator, cross-platform templating language, Oracle utilities and various other tools
Home-page: http://www.livinglogic.de/Python/xist/
Author: Walter Doerwald
Author-email: walter@livinglogic.de
License: MIT
Download-URL: http://www.livinglogic.de/Python/Download.html#xist
Description: XIST provides an extensible HTML and XML generator. XIST is also a XML parser
        with a very simple and pythonesque tree API. Every XML element type corresponds
        to a Python class and these Python classes provide a conversion method to
        transform the XML tree (e.g. into HTML). XIST can be considered
        'object oriented XSLT'.
        
        XIST also includes the following modules and packages:
        
        * ``ll.ul4c`` is compiler for a cross-platform templating language with
          similar capabilities to `Django's templating language`__. ``UL4`` templates
          are compiled to an internal format, which makes it possible to implement
          template renderers in other languages and makes the template code "secure"
          (i.e. template code can't open or delete files).
        
          __ https://docs.djangoproject.com/en/1.5/topics/templates/
        
          There are implementations for Python, Java, Javascript and PHP.
        
        * ``ll.ul4on`` provides functions for encoding and decoding a lightweight
          machine-readable text-based format for serializing the object types supported
          by UL4. It is extensible to allow encoding/decoding arbitrary instances
          (i.e. it is basically a reimplementation of ``pickle``, but with string
          input/output instead of bytes and with an eye towards cross-plattform
          support).
        
          There are implementations for Python, Java, Javascript and PHP.
        
        * ``ll.orasql`` provides utilities for working with cx_Oracle_:
        
          - It allows calling functions and procedures with keyword arguments.
        
          - Query results will be put into Record objects, where database fields
            are accessible as object attributes.
        
          - The ``Connection`` class provides methods for iterating through the
            database metadata.
        
          - Importing the modules adds support for URLs with the scheme ``oracle`` to
            ``ll.url``.
        
          .. _cx_Oracle: http://cx-oracle.sourceforge.net/
        
        * ``ll.make`` is an object oriented make replacement. Like make it allows
          you to specify dependencies between files and actions to be executed
          when files don't exist or are out of date with respect to one
          of their sources. But unlike make you can do this in a object oriented
          way and targets are not only limited to files.
        
        * ``ll.color`` provides classes and functions for handling RGB color values.
          This includes the ability to convert between different color models
          (RGB, HSV, HLS) as well as to and from CSS format, and several functions
          for modifying and mixing colors.
        
        * ``ll.sisyphus`` provides classes for running Python scripts as cron jobs.
        
        * ``ll.url`` provides classes for parsing and constructing RFC 2396
          compliant URLs.
        
        * ``ll.nightshade`` can be used to serve the output of PL/SQL
          functions/procedures with CherryPy__.
        
        * ``ll.misc`` provides several small utility functions and classes.
        
        * ``ll.astyle`` can be used for colored terminal output (via ANSI escape
          sequences).
        
        * ``ll.daemon`` can be used on UNIX to fork a daemon process.
        
        * ``ll.xml_codec`` contains a complete codec for encoding and decoding XML.
        
        __ http://www.cherrypy.org/
        
        
        Changes in 5.1 (released 08/02/2013)
        ------------------------------------
        
        * The HTML namespace (``ll.xist.ns.html``) now supports microdata__ attributes.
        
          __ http://www.w3.org/html/wg/drafts/microdata/master/
        
        * Added support for triple quoted strings to UL4 templates.
        
        * Added an UL4 function ``sum`` that works like the Python function ``sum``.
        
        * Variables assigned in the body of a <?for?> loop in UL4 now survive the end
          of the loop. As a consequence of this, loop variables now leak into the
          surrounding scope (but not the loop variables for list/dictionary
          comprehensions or generator expressions).
        
        * Made checking for recoverable Oracle exceptions in ``ll.nightshade`` more
          robust.
        
        * Added missing processing instruction class ``ll.xist.ns.ul4.note``.
        
        * ``ll.oradd`` now prints the data object before trying to call the
          procedure and can handle foreign keys that are ``NULL``.
        
        * The methods ``abslum`` and ``rellum`` of ``Color`` objects are
          now exposed to UL4 templates.
        
        * The ``oradd`` script has a new option ``--dry-run`` to rollback all
          database changes instead of committing them. This can be used to test whether
          an ``oradd`` dump will work.
        
        * ``oradd`` can now copy files via ``scp``. Parts of the file names used may
          depend on key values.
        
        * ``oradd`` now supports other out types than integers.
        
        * The ``query`` method for database connections in ``db2ul4`` scripts has
          changed: Instead of a query and a parameter dictionary, you have to pass in
          positional arguments that alternate between fragments of the SQL query and
          parameters. I.e.::
        
            db.query("select * from table where x=:x and y=:y", x=23, y=42)
        
          becomes::
        
            db.query("select * from table where x=", 23, " and y=", 42)
        
          This makes ``db2ul4`` independent from the parameter format of the database
          driver.
        
        
        
Keywords: ANSI,CSS,CherryPy,FTP,HLS,HSB,HSC,HSV,HTML,HTTP,Oracle,PI,PL/SQL,RFC 2396,RGB,Relax NG,SVG,UNIX,URL,WML,XHTML,XML,XSL-FO,XSLT,build,codec,color,cron,cx_Oracle,daemon,decorator,escape sequence,execnet,fork,iHTML,iterator,job,make,procedure,processing instruction,property,record,schema,ssh,template,templating language,terminal,toxic,user defined function
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: No Input/Output (Daemon)
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Database
Classifier: Topic :: Internet
Classifier: Topic :: Internet :: File Transfer Protocol (FTP)
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Classifier: Topic :: Multimedia :: Graphics
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Terminals
Classifier: Topic :: Text Processing :: General
Classifier: Topic :: Text Processing :: Markup :: HTML
Classifier: Topic :: Text Processing :: Markup :: XML
