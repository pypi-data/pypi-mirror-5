v0.3
====

New features
------------

- ``lt-transact`` is now more configurable.  The global config
  ``transact-default-account`` specifies the default account.
  ``transact-default-src`` and ``transact-default-dst`` specify the
  default source and destination accounts and can be set on a
  per-account basis.
- ``lt-transact`` now reads rule files and processes transactions
  against rulesets.
- ``lt-transact`` now asks if the user would like to enter another
  transaction before exiting.
- ``lt-transact`` now prints the account it is working with before
  beginning transaction entry.
- Output patterns now offer the "year", "month" and "fy" (financial
  year) fields, in addition to "date".  These all return strings,
  and "month" will have a leading zero for single-digit months.
- The CSV reader will now ignore non-transaction "metadata" in CSV
  files, e.g. "Opening Balance" or "Closing Balance", instead of
  crashing.

Bug fixes
---------

- Take the absolute value of the CSV "Debit" field in order to work
  if these values happen to be negative.
- Better config file handling (do not try to read config file during
  import of ``ltlib.config``).


v0.2.1
======

Bug fixes
---------

- Chase the pygtkchart -> gtkchartlib package name change in README.
  No code changed.


v0.2
====

New features
------------

- Introducing ``lt-chart``: a program for visualising expenditure as a
  hierarchical pie chart.
- New ``readerargs`` config can be used to supply arguments to the
  reader constructor.
- CSV reader now accepts a ``fieldnames`` argument (via the
  ``readerargs`` facility) which can be used to specify which
  fields are present and in what order.  A single "amount" field
  is now supported as an alternative to "credit" and "debit".


v0.1
====

Initial release
---------------

- ``lt-stmtproc``: process bank statements into a Ledger database, using
  rules or prompting user to determine account.
- ``lt-transact``: manually enter transactions into a Ledger database.
