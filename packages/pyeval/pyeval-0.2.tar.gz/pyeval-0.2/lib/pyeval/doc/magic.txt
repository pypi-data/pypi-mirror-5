The global scope of EXPR is a standard instance of MagicScope, a subclass
of dict.  A MagicScope has two special properties:

* includes magic variables (see below).
* unbound references are passed through to a "fallthrough" handler.

The standard fallthrough handler attempts to find the reference in
__builtin__, or if it is not there, it delegates to an AutoImporter
instance.  For more detail about the AutoImporter mechanism, run:

    $ pyeval help AutoImporter
    ...

A magic variable's value is only computed on the first reference. For
example, the magic variable 'i' is the string read from sys.stdin. It
can be used idempotently with multiple references in a single expression.
This example shows the number of characters and words in stdin:

    $ echo 'Hello World!' | pyeval '[len(i), len(i.split())]'
    [12, 2]

Additionally, all registered magic variables have documentation in the
'help.variables' topic.  For specific magic variable documentation, run:

    $ pyeval help variables
    ...

The standard scope has a binding for itself named 'scope':

    $ pyeval scope
    <MagicScope [...]>
