Metadata-Version: 1.1
Name: rapidsms-xray
Version: 0.5b0
Summary: RapidSMS app for web and SMS split test experiments & event tracking.
Home-page: https://github.com/ewheeler/rapidsms-xray/
Author: Evan Wheeler
Author-email: evan@leapfrog.io
License: BSD
Description: ['\n', 'RapidSMS Xray\n', '========================\n', 'RapidSMS app for web and SMS split test experiments & event tracking\n', '\n', 'Below you will find basic setup instructions for the rapidsms-xray\n', 'project. To begin you should have the following applications installed on your\n', 'local development system:\n', '\n', '- Python >= 2.6 (2.7 recommended)\n', '- `pip >= 1.1 <http://www.pip-installer.org/>`_\n', '- `Redis >= 2.6.0 <http://redis.io>`_\n', '\n', '\n', 'Installation\n', '------------\n', '\n', 'Please note: at the time of this writing, Ubuntu installs an older,\n', 'incompatible version of Redis (prior to the introduction of the `BITOP` and\n', '`BITCOUNT` commands).\n', 'You can use the following PPA to install a more recent version::\n', '\n', '\n', '    sudo add-apt-repository ppa:chris-lea/redis\n', '    sudo apt-get update\n', '    sudo apt-get install redis-server\n', '\n', 'Install necessary python requirements with pip::\n', '\n', '    pip install -r requirements/base.txt\n', '\n', 'In your rapidsms project `settings.py`, add `xray` to your `INSTALLED_APPS` and\n', 'add `xray.context_processors.web_experiments` to your `TEMPLATE_CONTEXT_PROCESSORS`\n', '\n', "In your rapidsms project `urls.py`, add xray's urls to `urlpatterns`::\n", '\n', "    (r'^xray/', include('xray.urls')),\n", '\n', "You may need to run django's `collectstatic` to ensure xray's static assests are\n", 'available::\n', '\n', '    django-admin.py collectstatic\n', '\n', '\n', 'Experiments\n', '-----------\n', '\n', 'rapidsms-xray uses `Cleaver <https://github.com/ryanpetrello/cleaver>`_\n', 'for split testing experiments. Please note that rapidsms-xray currently uses a\n', 'custom fork of Cleaver pending upstream merging of the RedisBackend (which will\n', 'be installed properly by `python setup.py install` or `pip install -r requirements/base.txt`).\n', '\n', 'To conduct web split testing experiments, add your experiments to\n', "your app's ``context_processors.py`` which makes the experiment choice\n", "available in the RequestContext. You don't have to put your experiments in a\n", 'context_processor -- its just a convenient location so they can all be in one place.\n', '\n', 'See `xray/context_processors.py \n', '<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/context_processors.py>`_\n', 'and `thousand/templates/thousand/index.html\n', '<https://github.com/ewheeler/rapidsms-thousand-days/blob/master/thousand/templates/thousand/index.html>`_ for example usage.\n', '\n', 'To conduct sms split testing experiments, add your experiments to your app.py or handler and\n', "ensure that the ``experiments`` app is listed in your setting.py's ``INSTALLED_APPS``\n", "`xray/app.py <https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py>`_ will deal with identifying experiment participation during the router's\n", '``filter`` phase, so experiments can be conducted in any of the subsequent incoming phases.\n', '\n', 'Please be aware that experiment participation is handled separately for web and sms\n', 'split testing (specifically, web participant identity is cookie-based for non-logged-in\n', 'uses and is user_id-based for logged-in users, whereas sms participant identity\n', 'is based on mobile number) -- that is, a web experiment participant cannot be scored\n', 'by a SMS conversion event and vice-versa.\n', '\n', 'See `xray/app.py\n', '<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py>`_ for example usage.\n', '\n', '\n', 'Events\n', '------\n', '\n', 'rapidsms-xray uses `bitmapist <https://github.com/Doist/bitmapist>`_\n', 'for event tracking and cohort analysis.\n', '\n', 'To use, import and instantiate `xray.events.Tracker` and then call\n', '`my_tracker.web_event` or `my_tracker.sms_event` with an event name and the\n', "user's cleaver identity. `xray.rolodex.Rolodex` caches identity information for\n", 'quick user lookup and issues a unique integer for each web and sms user. These\n', 'unique integer ids are used by bitmapist to track event participation using\n', 'Redis bitmaps for fast, arbitrary querying. See the bitmapist documentation for\n', 'additional information.\n', 'See `xray/app.py\n', '<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py>`_\n', 'and `xray/views.py \n', '<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/views.py>`_\n', ' for example usage.\n', '\n', 'When performing custom event analysis, use the *Events classes (with separate\n', 'Web* and SMS* classes for each time period) in `xray.events` rather than the\n', 'bitmapist classes -- rapidsms-xray adds prefixes to namespace the bitmapist\n', 'keys as well as prefixes to separate sms and web events.\n', "`xray.events.Tracker`'s event methods add the appropriate prefixes, so you will\n", 'only need to worry about them if you are accessing bitmapist or the stored data\n', 'in Redis directly.\n', '\n', '\n', 'Dashboard\n', '---------\n', '\n', 'rapidsms-xray includes a dashboard summarizing experiment and event\n', 'participation as well as drilldown pages showing experiment details and cohort\n', 'analysis of event participation.\n']
Platform: UNKNOWN
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Framework :: Django
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: OS Independent
