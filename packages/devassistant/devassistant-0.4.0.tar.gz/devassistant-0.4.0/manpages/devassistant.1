.\" Copyright Petr Hracek, 2013
.\"
.\" This page is distributed under GPL.
.\"
.TH DEVASSISTANT 1 2013-03-12 "" "Linux User's Manual"
.SH NAME
devassistant \- Developer Assistant is a helper for all developers using (not-only) Fedora. It helps with creating and setting up basic projects in various languages, installing dependencies, setting up environment etc.
.SH SYNOPSIS
\fBdevassistant \fP c [-h] [-b [BUILD]] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP cpp [-h] [-b [BUILD]] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP java jsf [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME
.br
\fBdevassistant \fP java maven [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME
.br
\fBdevassistant \fP perl class [-h] [-g [GITHUB]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP perl dancer [-h] [--cgi] [-g [GITHUB]] -n NAME [--fastcgi]
.br
\fBdevassistant \fP php lamp [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-r ROOTDB] [-v [VIM]]
.br
\fBdevassistant \fP python django [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP python flask [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP python lib [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP python pygtk [-h] [-g [GITHUB]] [-e [ECLIPSE]] -n NAME [-v [VIM]]
.br
\fBdevassistant \fP ruby rails [-h] [-g [GITHUB]] -n NAME [-v [VIM]]
.br
.SH GITHUB INTEGRATION
Devassistant can register and push projects to GitHub. The only prerequisite is that user
has an active GitHub account.

.SH DESCRIPTION
.B Developer assistant
is based on idea of per-{language/framework/...} "assistants" with hierarchical structure like this:

                  MainAssistant
                  /           \\
                 /             \\
              Python          Ruby
              /   \\            / \\
             /     \\          /   \\
          Django  Flask    Rails Sinatra

The basic task of each assistant is to create a project in location specified by
.B -n name
(either relative or absolute path) and install its dependencies via \fBYum\fP.
Optionally, if any environment setup is required,
.B devassistant
does that as well.
Most of the assistants have common arguments (see below), but there may also be some language specific options in some of the assistants.

.SH LANGUAGE SUPPORT
Currently supported languages are:
.IP
C/C++ language
.IP
Python language (Django, Flask , PyGTK (GTK3) and a custom Python library project)
.IP
Java language (JSF and a custom Maven project)
.IP
Perl language (Basic class and dancer framework)
.IP
PHP language (LAMP project)

.SH COMMON OPTIONS
.TP
.B \-h --help
print help for selected assistant
.TP
.B \-n --name
name of the project (relative or absolute path).
.TP
.B \-e --eclipse
import project into
.I eclipse 
environment. Uses ~/workspace workspace by default, which can be overriden by specifying another path.
.TP
.B \-g --github <username>
create a GitHub repo and push the initial sources there. Uses current username, which can be overriden by specifying a different GitHub username. The GitHub projectname is taken from
.B name
parameter..B \-b --build
generate a SPEC file, SRPM and mock-build RPM.
.TP
.B \-v --vim
install vim settings specific for this language (backs up your original vim settings)
.TP

.SH "SEE ALSO"
.BR devassistant-modify (1)
.BR devassistant-prepare (1)
