lib:
  fullname: Lib
  description: 'Lib assistant will help you create a custom Python library.'

  dependencies:
  - if $venv:
    - rpm: ['python-virtualenv']
  - else:
    - rpm: ['python-setuptools']

  dependencies_eclipse:
  - call: eclipse.dependencies_python

  args:
    name:
      snippet: common_args

    eclipse:
      snippet: eclipse

    github:
      snippet: common_args

    vim:
      snippet: vim

    venv:
      snippet: common_args

  files:
    gitignore: &gitignore
      source: python/.gitignore
    setuppy: &setuppy
      source: python/lib/setup.py
    license: &license
      source: python/lib/LICENSE
    manifestin: &mainfestin
      source: python/lib/MANIFEST.in
    readmerst: &readmerst
      source: python/lib/README.rst

  run:
  - $dirname: $(dirname "$name")
  - $basename: $(basename "$name")
  - if $(test -d "$name"):
    - log_e: '$name already exists, cannot proceed.'
  - log_i: 'Creating library project $basename in $dirname ...'
  - cl: mkdir -p "$dirname"
  - cl: cd "$dirname"
  - if $venv:
    - cl_i: virtualenv "$basename"
    - cl: cd "$basename"
  - cl: mkdir -p "$basename/$basename" # create the dir holding the lib and inside it another dir for actual Python files
  - cl: cd "$basename"
  - dda_c: .
  - cl: touch "$basename/__init__.py"
  - cl: cp *license .
  - cl: cp *manifestin .
  - cl: cp *readmerst .
  - cl: sed -i "s|NAME|$basename|" README.rst
  - cl: cp *setuppy .
  - cl: sed -i "s|NAME|$basename|" setup.py
  - if defined $vim:
    - call: vim.run
  - if $eclipse:
    - call: eclipse.run_python
  - cl: cp *gitignore .
  - call: git_init_add_commit
  - if defined $github:
    - github: create_and_push
  - log_i: 'Library project $basename in $dirname has been created.'
  - if $venv:
    - log_i: 'To switch to the created virtualenv, use "source ${dirname}/${basename}/bin/activate"'
