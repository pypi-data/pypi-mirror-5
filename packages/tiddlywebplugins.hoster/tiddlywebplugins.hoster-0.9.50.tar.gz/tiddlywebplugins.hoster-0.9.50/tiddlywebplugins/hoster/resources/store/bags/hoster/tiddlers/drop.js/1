created: 20091220134532
modifier: cdent
modified: 20091220134532
type: text/javascript

$(function() {

        $("#recipe-dialog").dialog({
            modal: true,
            autoOpen: false,
            overlay: {
                backgroundColor: '#000',
                opacity: 0.5
                },
        });
        $("#bag-dialog").dialog({
            modal: true,
            autoOpen: false,
            overlay: {
                backgroundColor: '#000',
                opacity: 0.5
                },
        });

        var recipe_display = function(data, recipe_name, bag_name) {
            data.name = recipe_name;
            $("#recipe-dialog").dialog('option', 'buttons', {
                Ok: function() {
                    recipe = tiddlywebRecipe.generateRecipe($(this).find("div.widget"));
                    recipe.policy = data.policy; // use policy from previous get
                    var self = this;
                    json_string = JSON.stringify(recipe);
                    $.ajax({
                        contentType: 'application/json',
                        processData: false,
                        data: json_string,
                        type: "PUT",
                        url: server_prefix + '/recipes/' + recipe_name,
                        success: function(msg) {
                            $(self).dialog('close');
                        },
                        error: function(xhr, status, error) {
                            alert('save of ' + recipe_name + ' failed ' + status);
                        },
                    });
                    },
                Cancel: function() {
                    $(this).dialog('close');
                    }
            });
            tiddlywebRecipe.render(data, [bag_name], $("#recipe-dialog"));
        }

        var render_recipe_editor = function(recipe_name, bag_name) {
            $("#recipe-dialog").dialog('open');
            $("#recipe-dialog").dialog('option', 'title', 'Edit ' + recipe_name);

            var recipe_uri = server_prefix + '/recipes/' + recipe_name + '.json';
            $.getJSON(recipe_uri, function(data) {recipe_display(data, recipe_name, bag_name)});

        };

        var render_bag_editor = function(bag_name, user_name) {
            $("#bag-dialog").dialog('open');
            $("#bag-dialog").dialog('option', 'title', 'Edit ' + bag_name);
            $("#bag-dialog").dialog('option', 'buttons', {
                Ok: function() {
                    $(this).dialog('close');
                    },
                Cancel: function() {
                    $(this).dialog('close');
                    }
            });
        };

        var drop_on_recipe = function(event, ui) {
            var source = ui.draggable
            var target = $(this)
            var source_path = source.attr('href').split('/');
            var target_path = target.attr('href').split('/')
            if (source_path[1] == server_prefix) {
                source_path.shift();
                target_path.shift();
            }
            var bag_name = source_path[2];
            var recipe_name = target_path[2];
            var message1 = 'source bag of ' + bag_name;
            var message2 = 'target recipe of ' + recipe_name;
            render_recipe_editor(recipe_name, bag_name);
        };

        var drop_on_bag = function(event, ui) {
            var source = ui.draggable
            var target = $(this)
            var source_path = source.attr('href').split('/');
            var target_path = target.attr('href').split('/')
            if (source_path[1] == server_prefix) {
                source_path.shift();
                target_path.shift();
            }
            var user_name = source_path[1];
            var bag_name = target_path[2];
            var message1 = 'source user of ' + user_name;
            var message2 = 'target bag of ' + bag_name;
            render_bag_editor(bag_name, user_name);
        };

        $(".draggable").draggable({helper: 'clone', opacity: 0.7});

        $(".droppable.recipe").droppable({
            accept: '.bag',
            hoverClass: 'hover',
            drop: drop_on_recipe,
            });

        $(".droppable.bag").droppable({
            accept: '.user',
            hoverClass: 'hover',
            drop: drop_on_bag,
            });
        $(".droppable").before('<img style="cursor: pointer;" height="16" alt="delete me" src="' + server_prefix + '/bags/hoster/tiddlers/delete.png" />').prev().
        click( function() {
            var entity = $(this).next();
            var entity_uri = entity.attr('href').replace('/tiddlers', '').replace('.wiki', '');
            if (confirm("Are you sure you wish to delete " + entity_uri)) {
                $.ajax({
                    type: "DELETE",
                    url: entity_uri,
                    success: function(msg) {
                        entity.parent().remove();
                    },
                    error: function(xhr, status, error) {
                        alert('delete of ' + entity_uri + ' failed ' + status);
                    },
                });
            };
        });

        $(".following .deleteable").before('<img style="cursor: pointer;" height="16" alt="delete me" src="' + server_prefix + '/bags/hoster/tiddlers/delete.png" />').prev().
        click( function() {
            var entity = $(this).next();
            var entity_uri = entity.attr('href').replace('/tiddlers', '');
            var tiddler_name = 'friends';
            if (entity.hasClass('bag')) {
                tiddler_name = 'favorites';
            }
            if (entity.hasClass('recipe')) {
                tiddler_name = 'bookmarks';
            }
            var entity_path = entity_uri.split('/');
            var entity_name = entity_path[entity_path.length-1];
            var tiddler_uri = server_prefix + '/bags/' + current_username + '/tiddlers/' + tiddler_name;
            if (confirm("Are you sure you wish to delete " + entity_name + " from " + tiddler_name)) {
                $.ajax({
                    dataType: 'json',
                    type: "GET",
                    url: tiddler_uri,
                    success: function(data, msg) {
                        names = data.text.split('\n');
                        var new_names = '';
                        for (var i=0, len=names.length; i<len; ++i) {
                            if (names[i] != entity_name) {
                                new_names += names[i] + "\n";
                            }
                        }
                        data.text = new_names;
                        json_string = JSON.stringify(data);
                        $.ajax({
                            contentType: 'application/json',
                            processData: false,
                            data: json_string,
                            type: "PUT",
                            url: tiddler_uri,
                            success: function(data, msg) {
                                entity.parent().remove();
                            },
                            error: function(xhr, status, error) {
                                alert('update of ' + tiddler_name + ' failed: ' + status);
                            }
                        })
                    },
                    error: function(xhr, status, error) {
                        alert('read of ' + entity_name + ' failed ' + status);
                    },
                });
            };
        });


});
