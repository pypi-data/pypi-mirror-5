Metadata-Version: 1.0
Name: schedule
Version: 0.1.11
Summary: Job scheduling for humans.
Home-page: https://github.com/dbader/schedule
Author: Daniel Bader
Author-email: mail@dbader.org
License: The MIT License (MIT)

Copyright (c) 2013 Daniel Bader (http://dbader.org)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Download-URL: https://github.com/dbader/schedule/tarball/0.1.11
Description: schedule
        ========
        
        
        .. image:: https://api.travis-ci.org/dbader/schedule.png
                :target: https://travis-ci.org/dbader/schedule
        
        .. image:: https://coveralls.io/repos/dbader/schedule/badge.png
                :target: https://coveralls.io/r/dbader/schedule
        
        .. image:: https://pypip.in/v/schedule/badge.png
                :target: https://pypi.python.org/pypi/schedule
        
        Python job scheduling for humans.
        
        An in-process scheduler for periodic jobs that uses the builder pattern
        for configuration. Schedule lets you run Python functions (or any other
        callable) periodically at pre-determined intervals using a simple,
        human-friendly syntax.
        
        Inspired by `Adam Wiggins' <https://github.com/adamwiggins>`_ article `"Rethinking Cron" <http://adam.heroku.com/past/2010/4/13/rethinking_cron/>`_ (`Google cache <http://webcache.googleusercontent.com/search?q=cache:F14k7BNcufsJ:adam.heroku.com/past/2010/4/13/rethinking_cron/+&cd=1&hl=de&ct=clnk&gl=de>`_) and the `clockwork <https://github.com/tomykaira/clockwork>`_ Ruby module.
        
        Features
        --------
        - A simple to use API for scheduling jobs.
        - Very lightweight and no external dependencies.
        - Excellent test coverage.
        - Works with Python 2.7 and 3.3
        
        Usage
        -----
        
        .. code-block:: bash
        
            $ pip install schedule
        
        .. code-block:: python
        
            import schedule
            import time
        
            def job():
                print("I'm working...")
        
            schedule.every(10).minutes.do(job)
            schedule.every().hour.do(job)
            schedule.every().day.at("10:30").do(job)
        
            while True:
                schedule.run_pending()
                time.sleep(1)
        
        FAQ
        ---
        
        In lieu of a full documentation (coming soon) check out this set of `frequently asked questions <https://github.com/dbader/schedule/blob/master/FAQ.rst>`_ for solutions to some common questions.
        
        Meta
        ----
        
        Daniel Bader – `@dbader_org <https://twitter.com/dbader_org>`_ – mail@dbader.org
        
        Distributed under the MIT license. See ``LICENSE.txt`` for more information.
        
        https://github.com/dbader/schedule
        
        
        .. :changelog:
        
        History
        -------
        
        0.1.11 (2013-07-30)
        +++++++++++++++++++
        - Fixed an issue with ``next_run()`` throwing a ``ValueError`` exception when the job queue is empty. Thanks to @dpagano for pointing this out and thanks to @mrhwick for quickly providing a fix.
        
        0.1.10 (2013-06-07)
        +++++++++++++++++++
        
        - Fixed issue with ``at_time`` jobs not running on the same day the job is created (Thanks to @mattss)
        
        0.1.9 (2013-05-27)
        ++++++++++++++++++
        
        - Added ``schedule.next_run()``
        - Added ``schedule.idle_seconds()``
        - Args passed into ``do()`` are forwarded to the job function at call time
        - Increased test coverage to 100%
        
        
        0.1.8 (2013-05-21)
        ++++++++++++++++++
        
        - Changed default ``delay_seconds`` for ``schedule.run_all()`` to 0 (from 60)
        - Increased test coverage
        
        0.1.7 (2013-05-20)
        ++++++++++++++++++
        
        - API change: renamed ``schedule.run_all_jobs()`` to ``schedule.run_all()``
        - API change: renamed ``schedule.run_pending_jobs()`` to ``schedule.run_pending()``
        - API change: renamed ``schedule.clear_all_jobs()`` to ``schedule.clear()``
        - Added ``schedule.jobs``
        
        0.1.6 (2013-05-20)
        ++++++++++++++++++
        
        - Fix packaging
        - README fixes
        
        0.1.4 (2013-05-20)
        ++++++++++++++++++
        
        - API change: renamed ``schedule.tick()`` to ``schedule.run_pending_jobs()``
        - Updated README and ``setup.py`` packaging
        
        0.1.0 (2013-05-19)
        ++++++++++++++++++
        
        - Initial release
        
Keywords: schedule,periodic,jobs,scheduling,clockwork,cron
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Natural Language :: English
