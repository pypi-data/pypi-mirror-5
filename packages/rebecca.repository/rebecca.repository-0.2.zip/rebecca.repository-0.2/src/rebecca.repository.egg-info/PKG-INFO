Metadata-Version: 1.1
Name: rebecca.repository
Version: 0.2
Summary: helper utility for repository pattern of PofEAA
Home-page: https://github.com/rebeccaframework/rebecca.repository
Author: Atsushi Odagiri
Author-email: aodagx@gmail.com
License: MIT
Description: .. contents::
        
        .. image:: https://travis-ci.org/rebeccaframework/rebecca.repository.png?branch=master
           :target: https://travis-ci.org/rebeccaframework/rebecca.repository
        
        rebecca.repository
        ===========================
        
        An implementation of repository pattern for SQLAlchemy.
        
        
        Getting Started
        -------------------------------
        
        install by pip::
        
          $ pip install rebecca.repository
        
        
        Implement your model by SQLAlchemy::
        
          from sqlalchemy import Column, Integer, Unicode
          from sqlalchemy.ext.declarative import declarative_base
        
          Base = declarative_base()
          DBSession = scoped_session(sessionmaker())
        
          class Person(Base):
              __tablename__ = "person"
              id = Column(Integer, primary_key=True)
              name = Column(Unicode(255))
              age = Column(Integer, default=0)
        
        Get repository::
        
          from rebecca.repository.sqla import SQLARepository
        
          person_repository = SQALRepository(Person, Person.id, DBSession())
        
        this repository for Person model.
        To get person, use Person.id as key.
        
        basic dict interface
        ---------------------------------------
        
        create object for demonstration::
        
          person1 = Person(name=u"person1")
          DBSession.add(person1)
          DBSession.flush() # to generate person.id
        
        
        A repository has dict like interface::
        
          person_repository[person.id]
          person_repository.get(person.id)
        
        
        conditional repository
        ------------------------------------------
        
        repository can configure to set condition::
        
          person_repository = SQALRepository(Person, Person.id, DBSession(), condition=Person.age>30)
        
        
        pyramid integration
        ----------------------------------------------
        
        rebecca.repository provides directive for pyramid registry.::
        
          config.include('rebecca.repository')
          config.add_repository(person_repository, 'person')
        
        or using repository_config decorator::
        
          @repository_config(name="person", args=(DBSession,))
          class PersonRepository(SQLARepository):
              def __init__(self, dbsession):
                  super(PersonRepository, self).__init__(Person, Person.id, DBSession)
        
        To get registered repositories, use get_repository::
        
          get_repository(request, 'person')
        
        
        Contributors
        ============
        
        - Atsushi Odagiri, Original Author
        
        Changelog
        =========
        
        0.2 (2013-08-25)
        -----------------------
        
        - added pyramid config directive and venusian decorator
        
        0.1.1 (2013-08-24)
        -----------------------
        
        - fix packaging bug
        
        0.1 (2013-08-24)
        -----------------------
        
        - first release
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Framework :: Pyramid
