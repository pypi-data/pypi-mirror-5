#!/usr/bin/python

import os
import csv
import argparse
from general_functions import *

import matplotlib.pyplot as plot
import numpy as np






def read_command_line_arguments():
   """
   Read the command line arguments
   """
   parser = argparse.ArgumentParser(
         formatter_class = argparse.RawDescriptionHelpFormatter,
         description     = "Plot a histogram of the length of sequences.",
         epilog          = "\n\nPart of MRT.\n"
   )

   #------------------------------------------#
   # file names:                              #
   #------------------------------------------#
   # - summary file name (*.mrt file)           #
   # - output directory name                  #
   #------------------------------------------#
   parser.add_argument('-s', '--summary', action="store", dest="summary_file_name", default=None, required=True, help="Name of the summary file generated by Mothur.")
   parser.add_argument('-o', '--output', action="store", dest="output_file_name", default=None, required=True, help="Name of the histogram figure.")
   parser.add_argument('--html', action="store_true", dest="output_html", default=False, help="Return HTML output (an <img> tag which refers to the figure).")


   args = parser.parse_args()
   result = {
         'summary_file_name': args.summary_file_name,
         'output_file_name' : args.output_file_name,
         'output_html'      : args.output_html
         }

   return result





def main():
   args = read_command_line_arguments()
   exit_if_file_does_not_exist(args['summary_file_name'])

   summary_data = np.genfromtxt(
         args['summary_file_name'],
         delimiter='\t',
         names=True,
         dtype=None
         )

   lengths_unique_sequences = summary_data['nbases']
   lengths_all_sequences = np.repeat(lengths_unique_sequences, summary_data['numSeqs'])

   plot.figure(num=None, figsize=(8, 4), dpi=80, facecolor='w', edgecolor='k')
   plot.hist(
         lengths_all_sequences,
         bins=50,
         color = "gray",
         rwidth = 0.85
         )
   plot.title("Histogram")
   plot.xlabel("Read length (nt)")
   plot.ylabel("Frequency")
   plot.savefig(args['output_file_name'])

   if args['output_html']:
      print "<img class='center_img' src='img/{0}' alt='histogram'></img>".format(args['output_file_name'])
   else:
      print "Saved image to file '{0}'".format(args['output_file_name'])





if __name__ == "__main__":
   main()
