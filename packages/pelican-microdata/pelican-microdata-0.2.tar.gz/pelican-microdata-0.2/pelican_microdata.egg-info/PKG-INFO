Metadata-Version: 1.1
Name: pelican-microdata
Version: 0.2
Summary: Microdata semantic markups support for Pelican Blog Generator
Home-page: https://github.com/noirbizarre/pelican-microdata
Author: Axel Haustant
Author-email: noirbizarre+pelican@gmail.com
License: LGPL
Download-URL: http://pypi.python.org/pypi/pelican-microdata
Description: Microdata plugin for Pelican
        ============================
        
        
        
        
        `Microdata`_ semantic markups support for `Pelican`_ static blog generator.
        
        Installation
        ------------
        
        Install the plugin via ``pip``:
        
        ::
        
            ~$ pip install pelican-microdata
        
        Or via ``easy_install``:
        
        ::
        
            ~$ easy_install pelican-microdata
        
        
        Usage
        -----
        
        To load the plugin, you have to add it in your settings file.
        
        ::
        
            PLUGINS = (
                'microdata',
            )
        
        Once loaded you have access to microdata rst directives.
        
        
        Directives
        ~~~~~~~~~~
        
        Microdata plugin provides two directives:
        
        - ``itemscope``, a block directive allowing to declare an itemscope block:
        
            ::
        
                .. itemscope:: <Schema type>
                    :tag: element type (default: div)
                    :itemprop: optionnal itemprop attribute
                    :compact: optionnal
        
                    Nested content
        
        - ``itemprop``, an inline directive/role allowing to annotate some text with an itemprop attribute.
        
            ::
        
                :itemprop:`Displayed text <itemprop name>`
                :itemprop:`Displayed text <itemprop name:http://some.url/>`
        
        
        Example
        ~~~~~~~
        
        This reStructuredText document:
        
        ::
        
            .. itemscope: Person
                :tag: p
        
                My name is :itemprop:`Bob Smith <name>`
                but people call me :itemprop:`Smithy <nickanme>`.
                Here is my home page:
                :itemprop:`www.exemple.com <url:http://www.example.com>`
                I live in Albuquerque, NM and work as an :itemprop:`engineer <title>`
                at :itemprop:`ACME Corp <affiliation>`.
        
        
        will result in:
        
        ::
        
            <p itemscope itemtype="http://data-vocabulary.org/Person">
                My name is <span itemprop="name">Bob Smith</span>
                but people call me <span itemprop="nickname">Smithy</span>.
                Here is my home page:
                <a href="http://www.example.com" itemprop="url">www.example.com</a>
                I live in Albuquerque, NM and work as an <span itemprop="title">engineer</span>
                at <span itemprop="affiliation">ACME Corp</span>.
            </p>
        
        
        .. _Microdata: http://schema.org/
        .. _Pelican: http://getpelican.com/
        
        Changelog
        =========
        
        0.2 (2013-06-21)
        ----------------
        
        - Start working on Python 3 compatibility
        - Added ``compact`` option to ``ItemScope`` block
        - Consider nested ``<p>`` tags as ``compact``
        
        
        0.1 (2013-03-25)
        ----------------
        
        - Initial implementation
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Environment :: Web Environment
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: System :: Software Distribution
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)
