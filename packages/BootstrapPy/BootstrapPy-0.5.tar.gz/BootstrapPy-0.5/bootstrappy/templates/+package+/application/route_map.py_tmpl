# Routing for URL to controller/method translation
from bootstrappy.router import Map

def make_routes():
    routes = []

    # Regular route maps
    routes.append(Map(template='/', handler='${package}.controllers.root:Root', action='home'))
    routes.append(Map(template='/home', handler='${package}.controllers.root:Root', action='home'))
    routes.append(Map(template='/admin', handler='${package}.controllers.root:Root', action='admin'))

    # Auth route maps
    routes.append(Map(template='/login', handler='${package}.controllers.auth:Auth', action='login'))
    routes.append(Map(template='/logout', handler='${package}.controllers.auth:Auth', action='logout'))

    # API Routes
    routes.append(Map(template='/api/users.json', handler='${package}.controllers.api:API', action='users'))
    routes.append(Map(template='/api/user_by_id.json', handler='${package}.controllers.api:API', action='user_by_id'))
    routes.append(Map(template='/api/add_user', handler='${package}.controllers.api:API', action='add_user'))
    routes.append(Map(template='/api/edit_user', handler='${package}.controllers.api:API', action='edit_user'))
    routes.append(Map(template='/api/user_active', handler='${package}.controllers.api:API', action='user_active'))

    # Fall back
    routes.append(Map(template='/{action}', handler='${package}.controllers.root:Root'))
    routes.append(Map(template='/{action}/{id}', handler='${package}.controllers.root:Root'))

    return routes