import os
from hashlib import sha1
import datetime
from datetime import datetime
from json import loads, dumps
import transaction
import sqlalchemy
from sqlalchemy import ForeignKey, Column, Table
from sqlalchemy.types import (Integer, DateTime, Boolean, Unicode,
                              UnicodeText, Float)
from sqlalchemy.orm import relation, synonym, relationship, backref
from sqlalchemy.orm import scoped_session, sessionmaker
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.exc import IntegrityError
from sqlalchemy.ext.associationproxy import association_proxy
from sqlalchemy.sql import and_, or_, not_
from zope.sqlalchemy import ZopeTransactionExtension


__all__ = ['User', 'Group', 'Permission', 'db', 'DataBase', 'EmailAddress'
           'Telephone', 'Ticket', 'Company']

# DB Session Object
db =  scoped_session(sessionmaker(extension=ZopeTransactionExtension()))

from ${package}.model.base import DBBase
DataBase = declarative_base(cls=DBBase)
metadata = DataBase.metadata

def init_model(engine):
    db.configure(bind=engine)

    def insert():
        DataBase.metadata.drop_all(engine)
        DataBase.metadata.create_all(engine)

        with transaction.manager:
            # This application has two types of users.
            auth_group = Group(u'auth', u'Regular user account.')
            admin_group = Group(u'admin', u'Administrative user account.')
            auth_group.permissions.append(Permission(u'auth'))
            admin_group.permissions.append(Permission(u'admin'))

            # Add the objects to the db session
            db.add(auth_group)
            db.add(admin_group)
            transaction.commit()

            # Create the users and add some default relational data for
            # illustrative purposes.
            su = User(first_name=u'Admin', last_name=u'User',
                      username=u'${author_email}',
                      defaults={'login_url': '/admin'})
            su.set_password('admin')
            su.groups.append(admin_group)
            su.email_addresses.append(EmailAddress(name=u'Work',
                                                   email=u'nobody@gmail.com'))
            su.telephone_numbers.append(Telephone(name=u'Work',
                                                  telephone=u'2145556677'))
            db.add(su)

            eu = User(first_name=u'Regular', last_name=u'User',
                      username=u'regular@domain.com',
                      defaults={'login_url': '/admin'})
            eu.set_password('password')
            eu.groups.append(auth_group)
            eu.email_addresses.append(EmailAddress(
                name=u'Work', email=u'regular@gmail.com'))
            eu.telephone_numbers.append(Telephone(name=u'Work',
                                                  telephone=u'2145557788'))
            db.add(eu)

            ou = User(first_name=u'Other', last_name=u'User',
                      username=u'other@domain.com',
                      defaults={'login_url': '/admin'})
            ou.set_password('password')
            ou.groups.append(auth_group)
            ou.email_addresses.append(EmailAddress(name=u'Work',
                                                   email=u'other@gmail.com'))
            ou.telephone_numbers.append(Telephone(name=u'Work',
                                                  telephone=u'2145558899'))
            db.add(ou)
            transaction.commit()

    insert() # Comment to avoid wiping the db every time the app is loaded.

from ${package}.model.core import (User, Group, Permission,
    Address, Ticket, TicketNote, TicketPriority, TicketStatus,
    TicketType, Company, Note, EmailAddress, Telephone)

