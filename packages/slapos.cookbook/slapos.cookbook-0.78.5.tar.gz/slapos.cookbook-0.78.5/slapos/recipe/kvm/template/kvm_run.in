#!%(python_path)s
# BEWARE: This file is operated by slapgrid
# BEWARE: It will be overwritten automatically

# Echo client program
import os
import socket
import subprocess

# XXX: give all of this through parameter, don't use this as template
default_disk_image = '%(default_disk_image)s'

def getSocketStatus(host, port):
  s = None
  for res in socket.getaddrinfo(host, port,
      socket.AF_UNSPEC, socket.SOCK_STREAM):
    af, socktype, proto, canonname, sa = res
    try:
      s = socket.socket(af, socktype, proto)
    except socket.error, msg:
      s = None
      continue
    try:
      s.connect(sa)
    except socket.error, msg:
      s.close()
      s = None
      continue
    break
  return s

# Create disk if doesn't exist
# XXX: move to Buildout profile
disk_path = '%(disk_path)s'
if not os.path.exists(disk_path):
  subprocess.Popen(['%(qemu_img_path)s', 'create' ,'-f', 'qcow2',
      disk_path, '%(disk_size)sG'])

kvm_argument_list = ['%(qemu_path)s',
  '-enable-kvm', '-net', 'nic,macaddr=%(mac_address)s',
  '-net', 'tap,ifname=%(tap_interface)s,script=no,downscript=no',
  '-smp', '%(smp_count)s',
  '-m', '%(ram_size)s',
  '-drive', 'file=%(disk_path)s,if=%(disk_type)s',
  '-vnc', '%(vnc_ip)s:1,ipv4,password',
  '-boot', 'menu=on',
  '-qmp', 'unix:%(socket_path)s,server',
  '-pidfile', '%(pid_file_path)s',
]

# Try to connect to NBD server (and second nbd if defined)
for nbd_ip, nbd_port in (
    ('%(nbd_ip)s', %(nbd_port)s), ('%(nbd2_ip)s', %(nbd2_port)s)):
  if nbd_ip and nbd_port:
    s = getSocketStatus(nbd_ip, nbd_port)
    if s is None:
      # NBD is not available : launch kvm without it
      print 'Warning : Nbd is not available.'
    else:
      # NBD is available
      kvm_argument_list.extend([
          '-drive',
          'file=nbd:[%%s]:%%s,media=cdrom' %% (nbd_ip, nbd_port)])

# If no NBD is specified/available: use internal disk image
else:
  kvm_argument_list.extend([
      '-drive', 'file=%%s,media=cdrom' %% default_disk_image
  ])

os.execv('%(qemu_path)s', kvm_argument_list)
