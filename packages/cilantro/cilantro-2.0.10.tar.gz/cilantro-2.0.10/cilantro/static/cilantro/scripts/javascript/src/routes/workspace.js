// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['environ', 'mediator', 'jquery', 'underscore', 'backbone', 'views/containers', 'serrano'], function(environ, mediator, $, _, Backbone, Containers, Serrano) {
  var WorkspaceArea, _ref;

  return WorkspaceArea = (function(_super) {
    __extends(WorkspaceArea, _super);

    function WorkspaceArea() {
      _ref = WorkspaceArea.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    WorkspaceArea.prototype.id = 'workspace-area';

    WorkspaceArea.prototype.initialize = function() {
      this.activity = new Containers.Container;
      this.activity.$el.addClass('span6');
      this.activity.heading.text('Activity');
      this.queries = new Containers.Container;
      this.queries.$el.addClass('span6');
      this.queries.heading.text('Queries');
      this.$el.hide().appendTo('#main-area .inner').addClass('row-fluid').append(this.queries.render(), this.activity.render());
      mediator.subscribe(Serrano.DATACONTEXT_HISTORY, function(models) {});
      return mediator.subscribe(Serrano.DATAVIEW_HISTORY, function(models) {});
    };

    WorkspaceArea.prototype.load = function() {
      return this.$el.show();
    };

    WorkspaceArea.prototype.unload = function() {
      return this.$el.hide();
    };

    return WorkspaceArea;

  })(Backbone.View);
});
