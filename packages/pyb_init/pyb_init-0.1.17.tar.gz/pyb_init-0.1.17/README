.. image:: https://travis-ci.org/mriehl/pyb_init.png?branch=master
   :alt: Travis build status image
   :align: left
   :target: https://travis-ci.org/mriehl/pyb_init

.. image:: https://pypip.in/v/pyb_init/badge.png
    :target: https://crate.io/packages/pyb_init/
    :alt: Latest PyPI version

.. image:: https://pypip.in/d/pyb_init/badge.png
    :target: https://crate.io/packages/pyb_init/
    :alt: Number of PyPI downloads

.. image:: http://www.wtfpl.net/wp-content/uploads/2012/12/wtfpl-badge-1.png
    :target: http://www.wtfpl.net
    :alt: Licensed under the WTFPL


What it does
============

When using the `pybuilder <http://pybuilder.github.com>`_, every project
needs to be initialized. After checking out the project, you need to

-  Create a virtual environment.
-  Activate the virtual environment.
-  Install the pybuilder in the virtual environment.
-  Install the project dependencies in the virtual environment.
-  Run pyb to build and test your project.

This program is an attempt at making these routine operations dead
simple and time-efficient. Note that virtual environments are always
created with the --clear flag, meaning you can run pyb-init to *reset*
your virtual environment, for example after changing a dependency.

Installation
============

::

    sudo pip install pyb_init

Checkout from GitHub
====================

::

    pyb-init github user : project

Git checkout
============

::

    pyb-init git GIT_URL

Initialization from local project
=================================

When in the project root, run

::

    pyb-init local

Customization of the generated environment
==========================================

You can override the default name of the virtualenv with 

::

    --virtualenv-name=<name>

Also, you can include your systems's site-packages in the virtualenv (for OS-packaged bindings like YUM, etc..) with the flag
::

    -s

License
=======

pyb_init is licensed under the terms of the Do What The Fuck You Want To public license.
