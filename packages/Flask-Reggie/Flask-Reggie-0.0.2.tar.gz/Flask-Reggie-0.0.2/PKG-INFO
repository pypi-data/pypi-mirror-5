Metadata-Version: 1.1
Name: Flask-Reggie
Version: 0.0.2
Summary: Flask Regex Routes.
Home-page: http://github.com/rhyselsmore/flask-reggie
Author: Rhys Elsmore
Author-email: me@rhys.io
License: Copyright 2013 Rhys Elsmore

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
Description: Flask-Reggie
        ============
        
        
        .. image:: https://travis-ci.org/rhyselsmore/flask-reggie.png?branch=master
                :target: https://travis-ci.org/rhyselsmore/flask-reggie
        
        .. image:: https://pypip.in/d/Flask-Reggie/badge.png
                :target: https://crate.io/packages/Flask-Reggie/
        
        Enable Regex Routes within Flask
        
        Installation
        ------------
        
        .. code-block:: bash
        
            pip install flask-reggie
        
        Configuration
        -------------
        
        To enable regex routes within your application
        
        .. code-block:: python
        
            from flask import Flask
            from flask_reggie import Reggie
        
            app = Flask(__name__)
            Reggie(app)
        
        or
        
        .. code-block:: python
        
            from flask import Flask
            from flask_reggie import Reggie
        
            reggie = Reggie()
        
            def create_app():
                app = Flask(__name__)
                reggie.init_app(app)
                return app
        
        Usage
        -----
        
        If we were looking to have a UUID supplied as a view argument, we would follow this pattern
        
        .. code-block:: python
        
            @app.route('/<regex("[0-9a-f]{32}"):uuid>')
            def example(uuid):
                return uuid
        
        As you can see, we are able to supply a regular expression, and have it passed as a view argument.
        
        Simple.
        
        History
        =======
        
        0.0.2 (6/7/2013)
        ----------------
        
        - Added requirements.txt for Testing Packages.
        - Included License.
        - PEP8 Compliance (and Docstrings).
        - setup.py now pushes package data.
        - Updated TravisCI (Comprehensive tests of multiple versions of Flask).
        
        0.0.1 (20/12/2012)
        ------------------
        
        - Conception
        - Initial Commit of Package to GitHub.
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
