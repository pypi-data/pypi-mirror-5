<tal:master define="level options/level|python:0;
                    children options/children | nothing;
                    bottomLevel options/bottomLevel | nothing;"
            i18n:domain="plone">

<metal:main define-macro="nav_main">
<tal:navitem repeat="node children">
<li tal:define="show_children   node/show_children;
                children        node/children;
                item_url        node/getURL;
                item_icon       node/item_icon;
                is_current      node/currentItem;
                is_in_path      node/currentParent;
                is_folderish    node/item/is_folderish;
                UID             node/item/UID;
                li_class        python:is_current and ' navTreeCurrentNode' or '';
                li_extr_class   python:is_in_path and ' navTreeItemInPath' or '';
                li_folder_class python:show_children and ' navTreeFolderish' or '';
                item_class string:state-${node/normalized_review_state};
                item_class python:is_current and item_class + ' navTreeCurrentItem' or item_class"
    tal:attributes="class string:navTreeItem visualNoMarker${li_class}${li_extr_class}${li_folder_class} node-${UID}"
    tal:condition="python:bottomLevel &lt;= 0 or level &lt;= bottomLevel">

    <span class="toggleNode"
          title="Click to expand or collapse"
          tal:condition="show_children"
          tal:define="statusClass python:len(children)>0 and show_children and 'expandedNode' or 'toggleNode'"
          tal:attributes="class string:${statusClass}"
          i18n:domain="collective.portlet.explore"
          i18n:attributes="title label_expand_menu_menu">
     Expand</span>

    <span class="noChildren"
          tal:condition="not:show_children">
     &nbsp;</span>

    <a tal:attributes="href python:item_url;
                       title node/Description;
                       class string:$item_class${li_class}${li_extr_class}${li_folder_class}">
        <img tal:replace="structure item_icon/html_tag|item_icon" />
        <table style="border-spacing: 0px">
          <tr> <td tal:content="node/Title">Selected Item Title</td> </tr>
        </table>
    </a>

    <ul tal:attributes="class python:'navTree navTreeLevel'+str(level)"
        tal:condition="python: len(children) > 0 and show_children">  
        <span tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
    </ul>
</li>
</tal:navitem>
</metal:main>
</tal:master>
