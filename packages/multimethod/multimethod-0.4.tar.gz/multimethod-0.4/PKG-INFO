Metadata-Version: 1.1
Name: multimethod
Version: 0.4
Summary: Multiple argument dispatching.
Home-page: https://bitbucket.org/coady/multimethod
Author: Aric Coady
Author-email: aric.coady@gmail.com
License: Apache Software License
Description: 
        **Multiple argument dispatching**
        
        Call *multimethod* on a variable number of types.
        It returns a decorator which finds the multimethod of the same name, creating it if necessary, and adds that function to it.
        For example::
        
            @multimethod(*types)
            def func(*args):
                pass
        
        |
        
        *func* is now a multimethod which will delegate to the above function, when called with arguments of the specified types.
        If an exact match can't be found, the next closest method is called (and cached).
        If *strict* is enabled, and there are multiple candidate methods, a TypeError is raised.
        A function can have more than one multimethod decorator.
        
        See tests for more example usage.
        Supported on Python 2.6 or higher, including Python 3.
        
        Changes in 0.4:
         * Dispatch on python 3 annotations
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
