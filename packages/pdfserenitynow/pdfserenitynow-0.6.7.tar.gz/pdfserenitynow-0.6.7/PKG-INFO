Metadata-Version: 1.1
Name: pdfserenitynow
Version: 0.6.7
Summary: Create TIFs and JPGs from crappy PDFs
Home-page: https://sourceforge.net/p/pdfserenitynow/
Author: Ben Rousch
Author-email: brousch@gmail.com
License: MIT
Description: PDF Serenity Now
        ==========================
        
        PDF Serenity Now was born from our increasing contact with annoying PDFs. The
        biggest culprits are multi-layered PDFs and PDFs with large pictures or 
        graphics embedded in them which take forever to print, if you can get them to 
        print at all. We created the original script to convert these PDFs to a more 
        printer-friendly format (for the KIP series of plotters), namely flattened 
        TIF Group 4.
        
        At this time, it converts a single-page or multi-page PDF to a folder of TIFs. 
        It handles large, crappy, multi-layer PDFs if you have enough RAM. `Poppler`_ 
        and `Imagemagick`_ do all of the hard work.
        
        In the future it will be smarter about converting, and offer more target
        formats (JPG, PDF). The ultimate goal is a service where users can 
        upload/submit a crappy PDF and get a nice set of TIFs or JPGs or a fixed PDF 
        returned to them. It will have a control panel where you can monitor and 
        manipulate conversions in progress or in a queue.
        
        Credits
        -------
        
        - `Poppler`_
        - `Imagemagick`_
        
        .. _`Poppler`: http://poppler.freedesktop.org/
        .. _`Imagemagick`: http://www.imagemagick.org/
        
        
        News
        ====
        
        0.6.6
        -----
        *Release Date: 2013-01-15*
        
        * Fixed many import and Python3 errors
        * Added command line switch to preserve intermediate PS files (default is delete)
        * Mucho code cleanup and extra error checking
        
        Usage: serenifypdf <pdf_file> [<output_dpi>] [--preserve-ps]
        
        0.5
        ---
        *Release Date: 2013-01-14*
        
        * Removed pyPdf since it is a dead project and not Python3 ready.
        
        0.4
        ---
        *Release Date: 2013-01-14*
        
        * Changed to a two step conversion process: PDF -> postscript -> TIF
        * Split out serenifypdf, pdfbursttops, and psconverttotif into separate modules
        * Can only convert one PDF (but multiple pages) at a time
        * PS file and TIF file locations are standardized based on PDF file name
        * Removed Python 2.6 and Python 2.7 support (Python 3.2 and 3.3 only now)
        
        Usage: serenifypdf <pdf_file> [<output_dpi>]
        
        0.3
        ---
        *Release Date: None*
        
        * Switched to Poppler for splitting PDFs
        * Added pdfbursttops script for splitting PDFs (using Poppler)
        
        0.2
        ---
        
        *Release Date: 2011-09-02*
        
        * Switched to MIT License
        * Added command line argument for DPI
        * Added Python 2.6 compatability
        
        0.1
        ---
        
        *Release date: 2011-09-01*
        
        Produce print-quality TIFFs and JPGs from a directory of PDFs.
        
        * Works on multilayer PDFs and some types of bad vectors
        * Each page of a multipage PDF will become one TIFF
        * tif_dir must exist before running script
        * Hard-coded values for output file format and DPI
        * ImageMagic (convert) must be installed and on your system path
         
        Usage: serenifypdf <pdf_dir> <tif_dir>
        
        
Keywords: pdf print converter tiff jpg
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Multimedia :: Graphics :: Graphics Conversion
Classifier: Topic :: Printing
Classifier: Topic :: Utilities
