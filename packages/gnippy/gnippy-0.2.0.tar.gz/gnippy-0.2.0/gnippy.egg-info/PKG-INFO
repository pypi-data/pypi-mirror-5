Metadata-Version: 1.0
Name: gnippy
Version: 0.2.0
Summary: Python library for GNIP.
Home-page: http://pypi.python.org/pypi/gnippy/
Author: Abhinav Ajgaonkar
Author-email: abhinav316@gmail.com
License: Copyright 2012-2013 Abhinav Ajgaonkar

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
Description: gnippy: GNIP + Python
        =====================
        
        gnippy provides an easy way to access the `Power Track <http://gnip.com/twitter/power-track/>`_ stream provided by GNIP.
        
        Installation:
        
        .. code-block:: python
        
            pip install gnippy
        
        Quickstart:
        
        .. code-block:: python
        
            #!/usr/bin/env python
        
            import time
            from gnippy import PowerTrackClient
        
            # Define a callback
            def callback(activity):
                print activity
        
            # Create the client
            url = "http://my.gnip.powertrack/url.json"
            auth = ('MyUserName', 'MyPassword')
            client = PowerTrackClient(callback, url=url, auth=auth)
            client.connect()
            
            # Wait for 2 minutes and then disconnect
            time.sleep(120)
            client.disconnect()
        
        If no credentials/url is/are provided, gnippy will look for a boto-style .gnippy file in the user's home directory.
        The structure of a .gnippy file is as follows:
        
        .. code-block:: text
        
            [Credentials]
            username = user@company.com
            password = mypassword
        
            [PowerTrack]
            url = https://my.gnip.powertrack/url.json
        
        This file can be stored in an alternate location and be passed in as a parameter to the constructor.
        
        .. code-block:: python
        
            client = PowerTrackClient(callback) # if you have a ~/.gnippy file ready to rock
        
            # OR
        
            client = PowerTrackClient(callback, config_file_path="/etc/.gnippy")
        
        
        Source available on GitHub: http://github.com/abh1nav/gnippy/
        
Platform: UNKNOWN
