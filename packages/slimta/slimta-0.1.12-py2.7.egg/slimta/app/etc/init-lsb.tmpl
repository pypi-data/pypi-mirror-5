#!/bin/sh
### BEGIN INIT INFO
# Provides:          $service_name
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Slim Mail Transfer Agent
# Description:       Serves as a mail transfer agent for the system based on
#                    the configuration in place.
### END INIT INFO

# Using the lsb functions to perform the operations.
. /lib/lsb/init-functions
# Process name ( For display )
NAME=$service_name
# Daemon name, where is the actual executable
DAEMON=$service_daemon
# pid file for the daemon
PIDFILE=$service_pidfile
# Config file for the process
CONFIGFILE=$service_config

# If the daemon is not there, then exit.
test -x $DAEMON || exit 5

case $1 in
    start)
        # Checked the PID file exists and check the actual status of process
        if [ -e $PIDFILE ]; then
            status_of_proc -p $PIDFILE $DAEMON "$NAME process" && \
                status="0" || status="$?"
            # If the status is SUCCESS then don't need to start again.
            if [ $status = "0" ]; then
                exit # Exit
            fi
        fi

        [ -x $DAEMON ] || exit 5
        [ -f $CONFIGFILE ] || exit 6

        # Start the daemon.
        log_daemon_msg "Starting the process" "$NAME"
        # Start the daemon with the help of start-stop-daemon
        # Log the message appropriately
        if start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE \
            --exec $DAEMON -- --daemon --config $CONFIGFILE --pid-file \
            $PIDFILE ; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;

    stop)
        # Stop the daemon.
        if [ -e $PIDFILE ]; then
            status_of_proc -p $PIDFILE $DAEMON \
                "Stopping the $NAME process" && status="0" || status="$?"
            if [ "$status" = 0 ]; then
                start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
            fi
        else
            log_daemon_msg "$NAME process is not running"
            log_end_msg 0
        fi
        ;;

    restart)
        # Restart the daemon.
        $0 stop && $0 start
        ;;

    status)
        # Check the status of the process.
        if [ -e $PIDFILE ]; then
            status_of_proc -p $PIDFILE $DAEMON "$NAME process" && \
                exit 0 || exit $?
        else
            log_daemon_msg "$NAME Process is not running"
            log_end_msg 0
        fi
        ;;

    *)
        # For invalid arguments, print the usage message.
        echo "Usage: $0 {start|stop|restart|status}"
        exit 2
        ;;
esac



# vim:sw=4:ts=4:sts=4:et:ai:ft=sh:
