#!/usr/bin/env python
import getopt
import sys
import stat
import os
import logging
import daemon

import ajenti
import ajenti.compat
import ajenti.log
from ajenti.util import PidFile

from reconfigure.configs import AjentiConfig


def usage():
    print """
Usage: %s [options]
Options:
    -c, --config <file> - Use given config file instead of default
    -v                  - Debug/verbose logging
    -d, --daemon        - Run in background (daemon mode)
    -h, --help          - This help
    """


if __name__ == '__main__':
    log_level = logging.INFO
    config_file = ''

    try:
        opts, args = getopt.getopt(sys.argv[1:], 'hc:dv', ['help', 'config=', 'daemon'])
    except getopt.GetoptError, e:
        print str(e)
        usage()
        sys.exit(2)

    is_daemon = False

    for o, a in opts:
        if o in ('-h', '--help'):
            usage()
            sys.exit(0)
        elif o in ('-v',):
            log_level = logging.DEBUG
            ajenti.debug = True
        elif o in ('-c', '--config'):
            if os.path.isfile(a):
                config_file = a
        elif o in ('-d', '--start'):
            is_daemon = True

    # Find default config file
    if not config_file:
        # Check for config file in /etc/ajenti/ajenti.conf
        if os.path.isfile('/etc/ajenti/config.json'):
            config_file = '/etc/ajenti/config.json'
        elif os.path.isfile(os.path.join(sys.path[0], 'config.json')):
            # Try local config file
            config_file = os.path.join(sys.path[0], 'config.json')

    os.chmod(config_file, stat.S_IRWXU)
    ajenti.config = AjentiConfig(path=config_file)
    ajenti.config.load()
    ajenti.init()
    ajenti.log.init(log_level)

    logging.basicConfig(level=log_level)

    if is_daemon:
        context = daemon.DaemonContext(
            pidfile=PidFile('/var/run/ajenti.pid'),
            stdout=open('/var/log/ajenti.log', 'w'),
            stderr=open('/var/log/ajenti.err.log', 'w'),
        )
        with context:
            from ajenti import core
            core.run()
    else:
        logging.info('Ajenti starting in foreground')
        try:
            from ajenti import core
            core.run()
        except KeyboardInterrupt:
            pass
