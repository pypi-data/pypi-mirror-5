Metadata-Version: 1.1
Name: libgreader
Version: 0.7.1
Summary: Library for working with the Google Reader API
Home-page: https://github.com/askedrelic/libgreader
Author: Matt Behrens <askedrelic@gmail.com>
Author-email: askedrelic@gmail.com
License: The MIT License (MIT)
Copyright (c) 2013 Matt Behrens <askedrelic@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
OR OTHER DEALINGS IN THE SOFTWARE.

Description: # libgreader readme
        libgreader is a Python library for authenticating and interacting with the unofficial Google Reader API. It currently supports all major user authentication methods (ClientLogin, OAuth2) and aims to simplify the many features that Google Reader offers. RSS ain't dead yet (but Google Reader may be)!
        
        Licensed under the MIT license: [http://www.opensource.org/licenses/mit-license.php]()
        
        ## Current Status
        As of March 2013, Google plans to shutdown down Google Reader on July 1st, 2013, which kind of makes this library not so useful.
        
        There are plans to recreate the Google Reader API in several open source projects, so perhaps this library could be extended to support multiple APIs. At present, the author is waiting to see how things turn out and what course of action would make the most sense.
        
        
        ## Features
        
        * Support for all Google recommended authentication methods, for easy integration with existing web or desktop applications
        * Explanation of most of the Google Reader API endpoints, which Google has never really opened up
        * Convenient functions and models for working with those endpoints
        * A modest integration test suite!
        
        ## Usage
        
        It's as simple as:
        
        
        	>>> from libgreader import GoogleReader, ClientAuthMethod, Feed
        	>>> auth = ClientAuthMethod('YOUR USERNAME','YOUR PASSWORD')
        	>>> reader = GoogleReader(auth)
        	>>> print reader.getUserInfo()
        	{u'userName': u'Foo', u'userEmail': u'libgreadertest@gmail.com', u'userId': u'16058940398976999581', u'userProfileId': u'100275409503040726101', u'isBloggerUser': False, u'signupTimeSec': 0, u'isMultiLoginEnabled': False}`
        
        For more examples with all of the authentication methods, see the [USAGE file](https://github.com/askedrelic/libgreader/blob/master/USAGE.md).
        
        ## Installation
        
        libgreader is on pypi at [http://pypi.python.org/pypi/libgreader/](http://pypi.python.org/pypi/libgreader/)
        
        	$ pip install libgreader
        
        or 
        
        	$ easy_install libgreader
        
        ## Testing and Contribution
        
        Want to test it out or contribute some changes?
        
        First, fork the repository on Github to make changes on your private branch.
        Then, create a dev environment using a virtualenv:
        
        	$ pip install virtualenvwrapper
        	$ mkvirtualenv venv-libgreader --no-site-packages
        
        Checkout your fork and then run the tests:
        
        	$ python setup.py test
        
        Now hack away! Write tests which show that a bug was fixed or that the feature works as expected. Then send a pull request and bug me until it gets merged in and published.
        
        
        ## Thanks
        
        Originally created with help from:
        
        [http://blog.martindoms.com/2009/08/15/using-the-google-reader-api-part-1/]()
        
        [http://code.google.com/p/pyrfeed/wiki/GoogleReaderAPI]()
        
        [http://groups.google.com/group/fougrapi]()
        
        Since then, [many have contributed to the development of libgreader](https://github.com/askedrelic/libgreader/blob/master/AUTHORS.md).
        
        
        #History
        
        ##v0.8.0 - 
        - Make API endpoint configurable
        
        ##v0.7.1 - 2013/06/14
        - Allow libgreader to install without requests already installed, thanks to https://github.com/stephenmcd
        
        ##v0.7.0 - 2013/03/18
        - Now requires Requests > 1.0 (Requests now used for all HTTP requests)
        - Python 3.3 Compatibility (Test suite passes for Python 2.6, 2.7, and 3.3)
        - Deprecate OAuth 1.0 auth method (Google deprecated it April 20, 2012 https://developers.google.com/accounts/docs/OAuth )
        - RIP Google Reader :(
        
        ##v0.6.3 - 2013/02/20
        - Add support for add/remove tag transaction abi- lity, to mass edit tags on on an Item
        - Add since/until argument support for many Container calls
        - Add support for loadLimit argument with feed Containers loadItems() call
        
        ##v0.6.2 - 2012/10/11
        - Fix broken post() method with OAuth2 auth, https://github.com/askedrelic/libgreader/issues/11
        
        ##v0.6.1 - 2012/08/13
        - cleanup sdist package contents, to not include tests
        - Remove httplib2 as a require import unless you are using GAPDecoratorAuthMethod
        
        ##v0.6.0 - 2012/08/10
        * OAuth2 support
        * Deprecating OAuth support
        * Added auth support for Google App Engine with GAPDecoratorAuthMethod
        * Internal code re-organization
        
        ##v0.5 - 2010/12/29
        * Added project to PyPi, moved to real Python project structure
        * Style cleanup, more tests
        
        ##v0.4 - 2010/08/10
        Lot of improvements : 
        
        * Manage special feeds (reading-list, shared, starred, friends...)
        * Manage categories (get all items, mark as read)
        * Manage feeds (get items, unread couts, mark as read, "fetch more")
        * Manage items (get and mark read, star, share)
        
        and:
        
        * oauth2 not required if you don't use it
        * replacing all xml calls by json ones
        
        ##v0.3 - 2010/03/07
        * All requests to Google use HTTPS
        * CLeaned up formatting, should mostly meet PEP8
        * Fixed random unicode issues
        * Added licensing
        
        ##v0.2 - 2009/10/27
        * Moved all get requests to private convenience method
        * Added a few more basic data calls
        
        ##v0.1 - 2009/10/27
        * Connects to GR and receives auth token correctly.
        * Pulls down subscription list.
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
