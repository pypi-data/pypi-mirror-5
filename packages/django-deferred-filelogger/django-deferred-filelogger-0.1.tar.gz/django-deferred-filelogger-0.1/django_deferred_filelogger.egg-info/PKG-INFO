Metadata-Version: 1.0
Name: django-deferred-filelogger
Version: 0.1
Summary: A logging handler for Django that defers evaluation of the filepath
Home-page: https://github.com/codeinthehole/django-deferred-filelogger
Author: David Winterbottom
Author-email: david.winterbottom@gmail.com
License: Copyright (C) 2012 django-deferred-filelogger authors (see AUTHORS file)

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: ==========================
        django-deferred-filelogger
        ==========================
        
        This package provides a new logging handler that defers evaluation of the
        filepath until a message is emitted.  It uses a setting ``LOG_ROOT`` as the
        folder for the log files.  This is useful when you don't know the exact location
        of your log files when the ``LOGGING`` setting is defined - this can be the case
        if you have a environment specific settings file which gets imported after your
        core settings.
        
        Usage
        -----
        
        In your main settings file, configure your handlers with a filename
        
        .. code:: python
        
            LOGGING = {
                ...
                'handlers': {
                    'error_file': {
                        'level': 'INFO',
                        'class': 'deferred_filelogger.DeferredFilehandler',
                        'filename': 'errors.log',
                    }
                },
                'loggers': {
                    'django.request': {
                        'handlers': ['error_file', 'mail_admins'],
                        'level': 'ERROR',
                        'propagate': False
                    }
                }
            }
        
        then in your environmental overrides (eg ``settings_local.py``), specify a
        ``LOG_ROOT`` folder.  For instance, in your test environment you might specify
        
        .. code:: python
        
            LOG_ROOT = '/var/www/client/project/logs/test'
        
        which would cause your Django errors to be logged to
        ``/var/www/client/project/logs/test/errors.log``.
        
Platform: UNKNOWN
