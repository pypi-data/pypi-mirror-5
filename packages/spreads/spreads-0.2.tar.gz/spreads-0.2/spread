#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (c) 2013 Johannes Baiter. All rights reserved.
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import logging
import sys
import traceback

from clint.textui import puts, colored

import spreads.ui
from spreads.confit import ConfigError
from spreads.util import SpreadsException, DeviceException

if __name__ == '__main__':
    try:
        spreads.ui.main()
    except Exception as e:
        typ, val, tb = sys.exc_info()
        logging.debug("".join(traceback.format_exception(typ, val, tb)))
        if isinstance(e, DeviceException):
            puts(colored.red("There is a problem with your device"
                             " configuration:"))
            puts(colored.red(e.message))
        elif isinstance(e, ConfigError):
            puts(colored.red("There is a problem with your configuration"
                             " file(s):"))
            puts(colored.red(e.message))
        else:
            puts(colored.red("spreads encountered an error:"))
            puts(colored.red(
                "".join(traceback.format_exception(typ, val, tb))))
