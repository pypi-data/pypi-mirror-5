#!/bin/bash

#
# Auto-generate requirements for executables (both ELF and a.out) and library
# sonames, script interpreters, and perl modules.
#

ulimit -c 0

#
# --- Set needed to 0 for traditional find-requires behavior.
needed=1
if [ X"$1" = Xldd ]; then
    needed=0
elif [ X"$1" = Xobjdump ]; then
    needed=1
fi

#
# --- Grab the file manifest and classify files.
#filelist=`sed "s/['\"]/\\\&/g"`
filelist=`sed "s/[]['\"*?{}]/\\\\\&/g"`
exelist=`echo $filelist | xargs -r file | \
	grep -Ev ":.* (commands|script)[, ]" | \
	grep ":.*executable" | cut -d: -f1`
liblist=`echo $filelist | xargs -r file | \
	grep ":.*shared object" | cut -d : -f1`

#
# --- Alpha does not mark 64bit dependencies
case `uname -m` in
  alpha*)	mark64="" ;;
  *)		mark64="()(64bit)" ;;
esac

if [ "$needed" -eq 0 ]; then
#
# --- Executable dependency sonames.
  for f in $exelist; do
    [ -r $f -a -x $f ] || continue
    lib64=`if file -L $f 2>/dev/null | \
	grep "ELF 64-bit" >/dev/null; then echo "$mark64"; fi`
    ldd $f | awk '/=>/ {
	if ($1 !~ /libNoVersion.so/ && $1 !~ /4[um]lib.so/ && $1 !~ /libredhat-kernel.so/ && $1 !~ /linux-gate.so/) {
	    gsub(/'\''"/,"\\&",$1);
	    printf "%s'$lib64'\n", $1
	}
    }'
    # Clem
    # add dynamic loader dependency
    ldd $f |  awk '{ if ($0 !~ /=>/ && $1 ~ /^\//) { n=split($1,path,"/"); print path[n] "'$lib64'"}}'
  done | xargs -r -n 1 basename | sort -u

#
# --- Library dependency sonames.
  for f in $liblist; do
    [ -r $f ] || continue
    lib64=`if file -L $f 2>/dev/null | \
	grep "ELF 64-bit" >/dev/null; then echo "$mark64"; fi`
    ldd $f | awk '/=>/ {
	if ($1 !~ /libNoVersion.so/ && $1 !~ /4[um]lib.so/ && $1 !~ /libredhat-kernel.so/ && $1 !~ /linux-gate.so/) {
	    gsub(/'\''"/,"\\&",$1);
	    printf "%s'$lib64'\n", $1
	}
    }'
  done | xargs -r -n 1 basename | sort -u
fi


#
# --- Weak symbol versions (from glibc).
[ -n "$mark64" ] && mark64="(64bit)"
for f in $liblist $exelist ; do
    [ -r $f ] || continue
    lib64=`if file -L $f 2>/dev/null | \
	grep "ELF 64-bit" >/dev/null; then echo "$mark64"; fi`
    objdump -p $f | awk 'BEGIN { START=0; LIBNAME=""; needed='$needed'; }
	/^$/ { START=0; }
	/^Dynamic Section:$/ { START=1; }
	(START==1) && /NEEDED/ {
	    if (needed) {
		if ("'$lib64'" != "") {
		    sub(/$/, "()'$lib64'", $2) ;
		}
		print $2 ;
	    }
	}
	(START==2) && /^[A-Za-z]/ { START=3; }
	/^Version References:$/ { START=2; }
	(START==2) && /required from/ {
	    sub(/:/, "", $3);
	    LIBNAME=$3;
	}
	(START==2) && (LIBNAME!="") && ($4!="")  {
	    print LIBNAME "(" $4 ")'$lib64'";
	}
    '
    # Clem
    # add dynamic loader dependency
    [ -x $f ] &&  ldd $f |  awk ' { if ($0 !~ /=>/ && $1 ~ /^\// ) { n=split($1,path,"/"); print path[n] "()'$lib64'"}}'
done | sort -u



exit 0
