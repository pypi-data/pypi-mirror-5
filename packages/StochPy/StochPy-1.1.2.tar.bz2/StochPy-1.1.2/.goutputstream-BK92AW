Updates 1.0.5:
--------------
- Write2File() --> Export2File()
- stochpy.SaveInteractiveSession(filename,path) if you want to store the interactive modelling session
- StochPyCellDivions module if someone want to simulate cell divisions
- StochPyCain: you can use the Cain solvers in StochPy if you want faster (but less accurate) solvers. You need to download and install a separate package, StochPyCain.
- StochPyKit you can use the StochKit solvers in StochPy if you want faster (but less accurate) solvers. You need to download and install a separate package, StochPyKit.
- You cannot use the Plotting, Printing, or Writing functions before doing a simulation. In previous versions, a simulation was started is no simulation was done such that plotting was possible, but this version gives an error message.
- implementations are up to 2 times faster

Updates 1.0.4:
--------------
- bugs removed from the StochPy Utils part
- reset number of trajectories, time steps, etc. back to normal setting after the use of the DoTestsuite() function 

Updates 1.0.3:
--------------
- Bug removed from Interpolated function
- More plotting functionalities

Updates 1.0.2:
--------------
- Added StochPyUtils
- Removed a bug in the determination of the distribution, mean, and standard deviation for each species.
- More plotting functionalities 

Updates 1.0.1:
--------------
- Added binning options to the PlotDistributions functions, which makes this a "probability distribution function" plotter
- significant speed-up for calculating the distributions, means, and standard deviations of each species in the model
- bug removal in the Tau-Leaping implementation
- both data_stochsim and data_stochsim_interpolated are removed as soon as a new model is selected
- more information is available in the help of every function

Updates 1.0.0:
--------------
- Added functionality
  * Data objects
     -> data_stochsim: holds all simulation data from one trajectory
     -> data_stochsim_interpolated holds all interpolated simulation data
  * if multiple trajectories are simulated, data_stochsim is dumped for every trajectory
    By default, the data of the last trajectory is not dumped, but stored in data_stochsim
    The user can use the new high-level function, GetTrajectoryData(n) see new High-level functions, to obtain data from one of the trajectories 
  * Events and Assignments are supported
  * More plotting options (title, linestyle
  * sim_mode replaces booleans IsTimeSteps and IsEndTime (sim_mode = 'time' or sim_mode = 'steps')

- New high-level functions (alphabetic order):
  * GetMeans()
  * GetTrajectoryData(n) where n is the trajectory number
  * Mode(sim_mode) note that the user can still use Timesteps(timesteps) and Endtime(endtime)

- Altered high-level functions (alphabetic order):
  * Delete() --> DeleteTempFiles()
  * MeanWaitingtimes --> PrintMeanWaitingtimes()
  * Overview() --> ShowOverview()
  * PlotInterpolSim  --> PlotInterpolatedData()
  * PrintMeans() --> ShowMeans()
  * PrintInterpolSim --> PrintInterpolatedData()
  * PrintSDs() --> ShowStandardDeviations()
  * Run() --> doStochSim(arguments)  [Run() is still available in this version]
  * Species() --> ShowSpecies()  

- Altered names (alphabetic order):
  * self.endtime and self.timesteps merged into self.sim_end
  * self.Interactive --> self.IsInteractive
  * self.method    --> self.sim_method
  * self.ModelDir  --> self.model_dir
  * self.ModelFile --> self.model_file
  * self.OutputDir --> self.output_dir
  * self.run_done  --> self.IsSimulationDone
  * self.TempDir   --> self.temp_dir
  * self.Traj      --> self.sim_trajectories

- Removed Bugs:
  * species names are correct in plots

Updates 0.9.7:
--------------

- StoMPy uses a better method for interpolation
- New functions for the nucleosome simulation module


Updates 0.9.6:
--------------

- Matrix multiplication - X + = np.dot(N,R) - is replaced by:  X +=  N[i], where i is the reaction that fires for the Direct Method, First Reaction Method and the Next Reaction Method. Much more efficient for models with a lot of species
- bugs are fixed in Next Reaction Method. 
- sparse models - chain5, chain50, chain500 and chain1500 - were built with ChainModel and added to the example files. These are used to show how the Next Reaction Method works. 
- dependency graph is build is a faster way
- temp directory is created, where ".dat" files are saved to
- information about runs (like number of time steps) is written to a log file
- high level function "Testsuite" is added. Automatically, 10.000 runs are done and the mean and standard deviation for each second (0,1,2...) are calculated


Updates 0.9.5:
--------------
- plotting options are improved. User can plot only variables of interest: ssa.PlotTimeSim("A") or ssa.PlotTimeSim(["A","B"])
- plotting multiple simulations with different colours if 1 species is plotted 
- plot screens are allowed to stay open if the user wants to continue working in the interactive session
- bug corrected in the optimized tau leaping algorithm with regard to printing the output to a text file
- high level functions MeanWaitingTimes() is added
- ".dat" files are deleted after a simulation
- high levels functions for system overview are added: Species(), Overview()


