Metadata-Version: 1.1
Name: qifparse
Version: 0.4
Summary: a parser for Quicken interchange format files (.qif).
Home-page: https://github.com/giacomos/qifparse
Author: Giacomo Spettoli
Author-email: giacomo.spettoli@gmail.com
License: GPL
Description: QIF Parser
        ============
        
        .. image:: https://travis-ci.org/giacomos/qifparse.png?branch=master   
            :target: https://travis-ci.org/giacomos/qifparse
        
        qifparse is a parser for Quicken interchange format files (.qif).
        
        
        Usage
        ======
        
        Here's a sample program::
        
           >>> from qifparse.parser import QifParser
        
           >>> qif = QifParser.parse(file('file.qif'))
        
           >>> qif.accounts
           (<Account: My Cash>, <Account: My Cc>)
        
           >>> qif.accounts[0].name
           'My Cash'
        
           >>> qif.categories
           [<Category: food>, <Category: food:lunch>]
        
           >>> qif.transactions
           {'My Cash': [<Transaction units=-6.5>, <Transaction units=-6.0>
        
           >>> str(qif)
           '!Type:Cat\nNfood\nE\n^\nNfood:lunch\nE\n^\n!Account\nNMy Cash\nTCash\n^\...
           ...
        
        
        Test
        ======
        
          python setup.py test
        
        Changelog
        ===========
        
        0.4 (2013-11-02)
        ----------------
        * address can be multilines
        * split can have the address attribute
        * add support for Classes
        * add support for MemorizedTransaction
        
        0.3 (2013-11-02)
        ----------------
        * more refactoring, now the lib is much more simple and engineered
        * improved fields validation
        
        0.2 (2013-11-02)
        ----------------
        * huge refactor, now the structure can be create and modified programmatically
        
        0.1 (2013-11-01)
        ----------------
        * first release on Pypi
        
Keywords: qif,Quicken interchange format,file format
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
