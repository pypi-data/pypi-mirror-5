.\" Man page generated from reStructuredText.
.
.TH "FDASRSF" "1" "August 22, 2013" "1.0" "fdasrsf"
.SH NAME
fdasrsf \- fdasrsf Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
A python package for functional data analysis using the square root slope framework which performs pair\-wise and
group\-wise alignment as well as modeling using functional component analysis.
.SH FUNCTIONAL ALIGNMENT
.sp
Group\-wise function alignment using SRSF framework and Dynamic Programming
.sp
moduleauthor:: Derek Tucker <\fI\%dtucker@stat.fsu.edu\fP>
.INDENT 0.0
.TP
.B time_warping.align_fPCA(f, time, num_comp=3, showplot=True, smooth_data=False, sparam=25)
aligns a collection of functions while extracting pincipal components. The functions are aligned to the principal
components
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBf\fP (\fInp.ndarray\fP) \-\- numpy ndarray of shape (M,N) of M functions with N samples
.IP \(bu 2
\fBtime\fP (\fInp.ndarray\fP) \-\- vector of size N describing the sample points
.IP \(bu 2
\fBnum_comp\fP \-\- number of fPCA components
.IP \(bu 2
\fBshowplot\fP \-\- Shows plots of results using matplotlib (default = T)
.IP \(bu 2
\fBsmooth_data\fP (\fI\%bool\fP) \-\- Smooth the data using a box filter (default = F)
.IP \(bu 2
\fBsparam\fP (\fIdouble\fP) \-\- Number of times to run box filter (default = 25)
.UNINDENT
.TP
.B Return type
tuple of numpy array
.TP
.B Return fn
aligned functions \- numpy ndarray of shape (M,N) of M functions with N samples
.TP
.B Return qn
aligned srvfs \- similar structure to fn
.TP
.B Return q0
original srvf \- similar structure to fn
.TP
.B Return mqn
srvf mean or median \- vector of length N
.TP
.B Return gam
warping functions \- similar structure to fn
.TP
.B Return q_pca
srsf principal directions
.TP
.B Return f_pca
functional principal directions
.TP
.B Return latent
latent values
.TP
.B Return coef
coefficients
.TP
.B Return U
eigenvectors
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B time_warping.srsf_align(f, time, method=\(aqmean\(aq, showplot=True, smoothdata=False, sparam=25, lam=0.0)
This function aligns a collection of functions using the elastic square\-root slope (srsf) framework.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBf\fP (\fInp.ndarray\fP) \-\- numpy ndarray of shape (M,N) of M functions with N samples
.IP \(bu 2
\fBtime\fP (\fInp.ndarray\fP) \-\- vector of size N describing the sample points
.IP \(bu 2
\fBmethod\fP \-\- (string) warp calculate Karcher Mean or Median (options = "mean" or "median") (default="mean")
.IP \(bu 2
\fBshowplot\fP \-\- Shows plots of results using matplotlib (default = T)
.IP \(bu 2
\fBsmoothdata\fP (\fI\%bool\fP) \-\- Smooth the data using a box filter (default = F)
.IP \(bu 2
\fBsparam\fP (\fIdouble\fP) \-\- Number of times to run box filter (default = 25)
.IP \(bu 2
\fBlam\fP (\fIdouble\fP) \-\- controls the elasticity (default = 0)
.UNINDENT
.TP
.B Return type
tuple of numpy array
.TP
.B Return fn
aligned functions \- numpy ndarray of shape (M,N) of M functions with N samples
.TP
.B Return qn
aligned srvfs \- similar structure to fn
.TP
.B Return q0
original srvf \- similar structure to fn
.TP
.B Return fmean
function mean or median \- vector of length N
.TP
.B Return mqn
srvf mean or median \- vector of length N
.TP
.B Return gam
warping functions \- similar structure to fn
.TP
.B Return orig_var
Original Variance of Functions
.TP
.B Return amp_var
Amplitude Variance
.TP
.B Return phase_var
Phase Variance
.UNINDENT
.sp
.nf
.ft C
>>> import tables
>>> fun=tables.open_file("../Data/simu_data.h5")
>>> f = fun.root.f[:]
>>> f = f.transpose()
>>> time = fun.root.time[:]
>>> out = srsf_align(f,time)
.ft P
.fi
.UNINDENT
.SH FUNCTIONAL PRINCIPAL COMPONENT ANALYSIS
.sp
Vertical and Horizontal Functional Principal Component Analysis using SRSF
.sp
moduleauthor:: Derek Tucker <\fI\%dtucker@stat.fsu.edu\fP>
.INDENT 0.0
.TP
.B fPCA.horizfPCA(gam, time, no, showplot=True)
This function calculates horizontal functional principal component analysis on aligned data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBgam\fP \-\- numpy ndarray of shape (M,N) of M warping functions
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.IP \(bu 2
\fBno\fP (\fI\%int\fP) \-\- number of components to extract (default = 1)
.IP \(bu 2
\fBshowplot\fP (\fI\%bool\fP) \-\- Shows plots of results using matplotlib (default = T)
.UNINDENT
.TP
.B Return type
tuple of numpy ndarray
.TP
.B Return q_pca
srsf principal directions
.TP
.B Return f_pca
functional principal directions
.TP
.B Return latent
latent values
.TP
.B Return coef
coefficients
.TP
.B Return U
eigenvectors
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B fPCA.vertfPCA(fn, time, qn, no=1, showplot=True)
This function calculates vertical functional principal component analysis on aligned data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfn\fP \-\- numpy ndarray of shape (M,N) of M aligned functions with N samples
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.IP \(bu 2
\fBqn\fP \-\- numpy ndarray of shape (M,N) of M aligned SRSF with N samples
.IP \(bu 2
\fBno\fP (\fI\%int\fP) \-\- number of components to extract (default = 1)
.IP \(bu 2
\fBshowplot\fP (\fI\%bool\fP) \-\- Shows plots of results using matplotlib (default = T)
.UNINDENT
.TP
.B Return type
tuple of numpy ndarray
.TP
.B Return q_pca
srsf principal directions
.TP
.B Return f_pca
functional principal directions
.TP
.B Return latent
latent values
.TP
.B Return coef
coefficients
.TP
.B Return U
eigenvectors
.UNINDENT
.UNINDENT
.SH UTILITY FUNCTIONS
.sp
Utility functions for SRSF Manipulations
.sp
moduleauthor:: Derek Tucker <\fI\%dtucker@stat.fsu.edu\fP>
.INDENT 0.0
.TP
.B utility_functions.SqrtMean(gam)
calculates the srsf of warping functions with corresponding shooting vectors
.INDENT 7.0
.TP
.B Parameters
\fBgam\fP \-\- numpy ndarray of shape (M,N) of M warping functions with N samples
.TP
.B Return type
2 numpy ndarray and vector
.TP
.B Return mu
Karcher mean psi function
.TP
.B Return gam_mu
vector of dim N which is the Karcher mean warping function
.TP
.B Return psi
numpy ndarray of shape (M,N) of M SRSF of the warping functions
.TP
.B Return vec
numpy ndarray of shape (M,N) of M shooting vectors
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.SqrtMeanInverse(gam)
finds the inverse of the mean of the set of the diffeomorphisms gamma
.INDENT 7.0
.TP
.B Parameters
\fBgam\fP \-\- numpy ndarray of shape (M,N) of M warping functions with N samples
.TP
.B Return type
vector
.TP
.B Return gamI
inverse of gam
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.cumtrapzmid(x, y, c)
cummulative trapzodial numerical integration taken from midpoint
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP \-\- vector of size N descibing the time samples
.IP \(bu 2
\fBy\fP \-\- vector of size N describing the function
.IP \(bu 2
\fBc\fP \-\- midpoint
.UNINDENT
.TP
.B Return type
vector
.TP
.B Return fa
cummulative integration
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.elastic_distance(f1, f2, time, lam=0.0)
"
calculates the distnaces between function, where f1 is aligned to f2. In other words
caluclates the elastic distances
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBf1\fP \-\- vector of size N
.IP \(bu 2
\fBf2\fP \-\- vector of size N
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.IP \(bu 2
\fBlam\fP \-\- controls the elasticity (default = 0.0)
.UNINDENT
.TP
.B Return type
scalar
.TP
.B Return Dy
amplitude distance
.TP
.B Return Dx
phase distance
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.f_to_srvf(f, time)
converts f to a square\-root slope function (SRSF)
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBf\fP \-\- vector of size N samples
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.UNINDENT
.TP
.B Return type
vector
.TP
.B Return q
srsf of f
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.gradient_spline(time, f)
This function takes the gradient of f using b\-spline smoothing
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.IP \(bu 2
\fBf\fP \-\- numpy ndarray of shape (M,N) of M functions with N samples
.UNINDENT
.TP
.B Return type
tuple of numpy ndarray
.TP
.B Return f0
smoothed functions functions
.TP
.B Return g
first derivative of each function
.TP
.B Return g2
second derivative of each function
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.invertGamma(gam)
finds the inverse of the diffeomorphism gamma
.INDENT 7.0
.TP
.B Parameters
\fBgam\fP \-\- vector describing the warping function
.TP
.B Return type
vector
.TP
.B Return gamI
inverse of gam
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.optimum_reparam(q1, time, q2, lam=0.0)
calculates the warping to align srsf q2 to q1
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBq1\fP \-\- vector of size N or array of NxM samples of first SRSF
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.IP \(bu 2
\fBq2\fP \-\- vector of size N or array of NxM samples samples of second SRSF
.IP \(bu 2
\fBlam\fP \-\- controls the amount of elasticity (default = 0.0)
.UNINDENT
.TP
.B Return type
vector
.TP
.B Return gam
describing the warping function used to align q2 with q1
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.outlier_detection(q, time, mq, k=1.5)
calculates outlier\(aqs using geodesci distnaces of the SRSFs from the median
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBq\fP \-\- numpy ndarray of N x M of M SRS functions with N samples
.IP \(bu 2
\fBtime\fP \-\- vector of size N describing the sample points
.IP \(bu 2
\fBmq\fP \-\- median calculated using \fBtime_warping.srsf_align()\fP
.IP \(bu 2
\fBk\fP \-\- cutoff threshold (default = 1.5)
.UNINDENT
.TP
.B Returns
q_outlier: outlier functions
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.rgam(N, sigma, num)
Generates random warping functions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBN\fP \-\- length of warping function
.IP \(bu 2
\fBsigma\fP \-\- variance of warping functions
.IP \(bu 2
\fBnum\fP \-\- number of warping functions
.UNINDENT
.TP
.B Returns
gam: numpy ndarray of warping functions
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B utility_functions.smooth_data(f, sparam)
This function smooths a collection of functions using a box filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBf\fP \-\- numpy ndarray of shape (M,N) of M functions with N samples
.IP \(bu 2
\fBsparam\fP \-\- Number of times to run box filter (default = 25)
.UNINDENT
.TP
.B Return type
numpy ndarray
.TP
.B Return f
smoothed functions functions
.UNINDENT
.UNINDENT
.sp
References:
.INDENT 0.0
.INDENT 3.5
Srivastava, A., Wu, W., Kurtek, S., Klassen, E., Marron, J. S., May 2011. Registration of functional data using
fisher\-rao metric, arXiv:1103.3817v2 [math.ST].
.sp
Tucker, J. D., Wu, W., Srivastava, A., Generative Models for Function Data using Phase and Amplitude Separation,
Computational Statistics and Data Analysis (2012), 10.1016/j.csda.2012.12.001.
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fIgenindex\fP
.IP \(bu 2
\fImodindex\fP
.IP \(bu 2
\fIsearch\fP
.UNINDENT
.SH AUTHOR
J. Derek Tucker
.SH COPYRIGHT
2013, J. Derek Tucker
.\" Generated by docutils manpage writer.
.
