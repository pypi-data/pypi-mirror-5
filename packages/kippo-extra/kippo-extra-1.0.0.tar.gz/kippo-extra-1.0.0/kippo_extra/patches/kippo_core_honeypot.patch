---
+++
@@ -21,10 +21,9 @@
 import ConfigParser

 class HoneyPotCommand(object):
+    def __init__(self, honeypot, *args, **kwargs):
-    def __init__(self, honeypot, *args):
         self.honeypot = honeypot
         self.args = args
+        self.env = kwargs
         self.writeln = self.honeypot.writeln
         self.write = self.honeypot.terminal.write
         self.nextLine = self.honeypot.terminal.nextLine
@@ -124,11 +123,7 @@
         if cmdclass:
             print 'Command found: %s' % (line,)
             self.honeypot.logDispatch('Command found: %s' % (line,))
+
+            if getattr(cmdclass, 'resolve_args', False):
+                self.honeypot.call_command(cmdclass, *rargs, **envvars)
+            else:
+                self.honeypot.call_command(cmdclass, *args, **envvars)
-            self.honeypot.call_command(cmdclass, *rargs)
         else:
             self.honeypot.logDispatch('Command not found: %s' % (line,))
             print 'Command not found: %s' % (line,)
@@ -361,8 +356,8 @@
         self.terminal.write(data)
         self.terminal.nextLine()

+    def call_command(self, cmd, *args, **kwargs):
+        obj = cmd(self, *args, **kwargs)
-    def call_command(self, cmd, *args):
-        obj = cmd(self, *args)
         self.cmdstack.append(obj)
         self.setTypeoverMode()
         obj.start()